{"ast":null,"code":"var _jsxFileName = \"/Users/jscarbrough/Desktop/AthertonReact/src/dashboard/subApps/cm/cm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"../../../cssFiles/cm.css\";\nimport { UserBlock } from './userBlock.js';\nimport { AddUser } from './addUser.js';\nimport { getUserData } from '../../../database/database.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ClientManager(props) {\n  _s();\n  // Initialize state with props.userData\n  const [userData, setUserData] = useState(props.userData);\n  useEffect(() => {\n    // Fetch the latest user data\n    getUserData().then(fetchedData => {\n      // Check if the fetched data is different from the current state\n      if (JSON.stringify(fetchedData) !== JSON.stringify(props.userData)) {\n        // Update state if the data is different\n        setUserData(fetchedData);\n      }\n    });\n  }, [props.userData]); // Dependency array ensures this effect runs only when props.userData changes\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddUser, {\n      userData: userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserBlock, {\n      userData: userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ClientManager, \"9W2BVGKy5FmFJnVXu1tI5xgvUIA=\");\n_c = ClientManager;\nvar _c;\n$RefreshReg$(_c, \"ClientManager\");","map":{"version":3,"names":["React","useState","useEffect","UserBlock","AddUser","getUserData","jsxDEV","_jsxDEV","Fragment","_Fragment","ClientManager","props","_s","userData","setUserData","then","fetchedData","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jscarbrough/Desktop/AthertonReact/src/dashboard/subApps/cm/cm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"../../../cssFiles/cm.css\";\nimport { UserBlock } from './userBlock.js';\nimport { AddUser } from './addUser.js';\nimport { getUserData } from '../../../database/database.js';\n\nexport function ClientManager(props) {\n    // Initialize state with props.userData\n    const [userData, setUserData] = useState(props.userData);\n\n    useEffect(() => {\n        // Fetch the latest user data\n        getUserData().then(fetchedData => {\n            // Check if the fetched data is different from the current state\n            if (JSON.stringify(fetchedData) !== JSON.stringify(props.userData)) {\n                // Update state if the data is different\n                setUserData(fetchedData);\n            }\n        });\n    }, [props.userData]); // Dependency array ensures this effect runs only when props.userData changes\n\n    return (\n        <>\n            <AddUser userData={userData} />\n            <UserBlock userData={userData} />\n        </>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,0BAA0B;AACjC,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,WAAW,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5D,OAAO,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACjC;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAACU,KAAK,CAACE,QAAQ,CAAC;EAExDX,SAAS,CAAC,MAAM;IACZ;IACAG,WAAW,CAAC,CAAC,CAACU,IAAI,CAACC,WAAW,IAAI;MAC9B;MACA,IAAIC,IAAI,CAACC,SAAS,CAACF,WAAW,CAAC,KAAKC,IAAI,CAACC,SAAS,CAACP,KAAK,CAACE,QAAQ,CAAC,EAAE;QAChE;QACAC,WAAW,CAACE,WAAW,CAAC;MAC5B;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,CAACL,KAAK,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEtB,oBACIN,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACIZ,OAAA,CAACH,OAAO;MAACS,QAAQ,EAAEA;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/BhB,OAAA,CAACJ,SAAS;MAACU,QAAQ,EAAEA;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACnC,CAAC;AAEX;AAACX,EAAA,CArBeF,aAAa;AAAAc,EAAA,GAAbd,aAAa;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}