{"ast":null,"code":"var _jsxFileName = \"D:\\\\development\\\\AthertonReact\\\\ReactFiles\\\\src\\\\setup\\\\settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../cssFiles/settings.css';\nimport { setData, getUserData } from '../database/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SettingsForm(props) {\n  _s();\n  let user = props.user;\n  const [companyName, setCompanyName] = useState(props.userData && props.userData[\"settings\"] && props.userData[\"settings\"][0] ? props.userData[\"settings\"][0] : '');\n  const [customerPhone, setCustomerPhone] = useState(props.userData && props.userData[\"settings\"] && props.userData[\"settings\"][1] ? props.userData[\"settings\"][1] : '');\n\n  // State to control popup visibility\n  const [showPopup, setShowPopup] = useState(false);\n  const validateInputs = () => {\n    const phoneRegex = /^[0-9]{10}$/;\n    if (!companyName.trim()) alert(\"Company name is required.\");else if (!phoneRegex.test(customerPhone)) alert(\"Please enter a valid phone number.\");else return true;\n    return false;\n  };\n  const handleSubmit = () => {\n    if (validateInputs()) {\n      submitData(companyName, customerPhone, props.changeUserDataState, setShowPopup, props.finishedInitSettings && props.finishedInitSettings);\n    }\n  };\n  function PopupMessage() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '0px',\n        left: '50%',\n        transform: 'translateX(-50%) translateY(-100px)',\n        width: '100%',\n        textAlign: 'center',\n        backgroundColor: '#dff0d8',\n        color: '#3c763d',\n        padding: '10px',\n        borderRadius: '5px',\n        border: '1px solid #d6e9c6',\n        zIndex: 2,\n        marginBottom: '20px'\n      },\n      children: \"Settings Updated Successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n  const handleBillingPortal = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:4242/create-customer-portal-session', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: user.uid\n        })\n      });\n      const portalSession = await response.json();\n      if (response.ok) {\n        window.location.href = portalSession.url;\n      } else {\n        console.error('Failed to open billing portal:', portalSession);\n      }\n    } catch (error) {\n      console.error('Error connecting to the server:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    style: {\n      position: 'relative'\n    },\n    children: [showPopup && /*#__PURE__*/_jsxDEV(PopupMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"companyName\",\n      children: \"Company Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"companyName\",\n      name: \"companyName\",\n      placeholder: \"Company Name\",\n      required: true,\n      value: companyName,\n      onChange: e => setCompanyName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"customerPhone\",\n      children: \"Customer Contact Phone Number:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"tel\",\n      id: \"customerPhone\",\n      name: \"customerPhone\",\n      placeholder: \"Customer Contact Phone Number\",\n      required: true,\n      value: customerPhone,\n      onChange: e => setCustomerPhone(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      type: \"submit\",\n      id: \"confirm\",\n      children: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBillingPortal,\n      children: \"Manage Billing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(SettingsForm, \"L5n4cSumt6zCBTI8rvTovFBCvBk=\");\n_c = SettingsForm;\nfunction submitData(companyName, customerPhone, changeUserDataState, setShowPopup, finishedInitSettings) {\n  console.log('Submitting data:', {\n    companyName,\n    customerPhone\n  });\n  getUserData().then(data => {\n    data[\"setup\"] = \"Yes\";\n    data[\"settings\"] = [companyName, customerPhone];\n    setData(data);\n\n    // Call finishedInitSettings only if it is passed in\n    if (finishedInitSettings) {\n      finishedInitSettings();\n    }\n    changeUserDataState(data);\n    setShowPopup(true);\n    setTimeout(() => setShowPopup(false), 5000);\n  }).catch(error => {\n    console.error(\"Failed to get user data:\", error);\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"SettingsForm\");","map":{"version":3,"names":["React","useState","setData","getUserData","jsxDEV","_jsxDEV","SettingsForm","props","_s","user","companyName","setCompanyName","userData","customerPhone","setCustomerPhone","showPopup","setShowPopup","validateInputs","phoneRegex","trim","alert","test","handleSubmit","submitData","changeUserDataState","finishedInitSettings","PopupMessage","style","position","top","left","transform","width","textAlign","backgroundColor","color","padding","borderRadius","border","zIndex","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","handleBillingPortal","response","fetch","method","headers","body","JSON","stringify","user_id","uid","portalSession","json","ok","window","location","href","url","console","error","className","htmlFor","type","id","name","placeholder","required","value","onChange","e","target","onClick","_c","log","then","data","setTimeout","catch","$RefreshReg$"],"sources":["D:/development/AthertonReact/ReactFiles/src/setup/settings.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../cssFiles/settings.css';\r\nimport { setData, getUserData } from '../database/database';\r\n\r\nexport function SettingsForm(props) {\r\n\r\n\r\n  let user = props.user\r\n\r\n  const [companyName, setCompanyName] = useState(\r\n    props.userData && props.userData[\"settings\"] && props.userData[\"settings\"][0] ? props.userData[\"settings\"][0] : ''\r\n  );\r\n  const [customerPhone, setCustomerPhone] = useState(\r\n    props.userData && props.userData[\"settings\"] && props.userData[\"settings\"][1] ? props.userData[\"settings\"][1] : ''\r\n  );\r\n\r\n  // State to control popup visibility\r\n  const [showPopup, setShowPopup] = useState(false);\r\n\r\n  const validateInputs = () => {\r\n    const phoneRegex = /^[0-9]{10}$/;\r\n\r\n    if (!companyName.trim()) alert(\"Company name is required.\");\r\n    else if (!phoneRegex.test(customerPhone)) alert(\"Please enter a valid phone number.\");\r\n    else return true;\r\n\r\n    return false;\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (validateInputs()) {\r\n      submitData(\r\n        companyName,\r\n        customerPhone,\r\n        props.changeUserDataState,\r\n        setShowPopup,\r\n        props.finishedInitSettings && props.finishedInitSettings\r\n      );\r\n    }\r\n  };\r\n  \r\n\r\n  function PopupMessage() {\r\n    return (\r\n      <div style={{\r\n        position: 'absolute',\r\n        top: '0px',\r\n        left: '50%',\r\n        transform: 'translateX(-50%) translateY(-100px)',\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        backgroundColor: '#dff0d8',\r\n        color: '#3c763d',\r\n        padding: '10px',\r\n        borderRadius: '5px',\r\n        border: '1px solid #d6e9c6',\r\n        zIndex: 2,\r\n        marginBottom: '20px',\r\n      }}>\r\n        Settings Updated Successfully!\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleBillingPortal = async () => {\r\n    try {\r\n        const response = await fetch('http://127.0.0.1:4242/create-customer-portal-session', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ user_id: user.uid })\r\n        });\r\n        const portalSession = await response.json();\r\n        if (response.ok) {\r\n            window.location.href = portalSession.url;\r\n        } else {\r\n            console.error('Failed to open billing portal:', portalSession);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error connecting to the server:', error);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"login-container\" style={{ position: 'relative' }}>\r\n      {showPopup && <PopupMessage />}\r\n\r\n      <h2>Settings</h2>\r\n      \r\n      <label htmlFor=\"companyName\">Company Name:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"companyName\"\r\n        name=\"companyName\"\r\n        placeholder=\"Company Name\"\r\n        required\r\n        value={companyName}\r\n        onChange={e => setCompanyName(e.target.value)}\r\n      /><br /><br />\r\n\r\n      <label htmlFor=\"customerPhone\">Customer Contact Phone Number:</label>\r\n      <input\r\n        type=\"tel\"\r\n        id=\"customerPhone\"\r\n        name=\"customerPhone\"\r\n        placeholder=\"Customer Contact Phone Number\"\r\n        required\r\n        value={customerPhone}\r\n        onChange={e => setCustomerPhone(e.target.value)}\r\n      /><br /><br />\r\n\r\n      <button onClick={handleSubmit} type=\"submit\" id=\"confirm\">Confirm</button>\r\n\r\n      <button onClick={handleBillingPortal}>Manage Billing</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction submitData(companyName, customerPhone, changeUserDataState, setShowPopup, finishedInitSettings) {\r\n  console.log('Submitting data:', { companyName, customerPhone });\r\n\r\n  getUserData().then(data => {\r\n    data[\"setup\"] = \"Yes\";\r\n    data[\"settings\"] = [companyName, customerPhone];\r\n    setData(data);\r\n\r\n    // Call finishedInitSettings only if it is passed in\r\n    if (finishedInitSettings) {\r\n      finishedInitSettings();\r\n    }\r\n\r\n    changeUserDataState(data);\r\n    setShowPopup(true);\r\n    setTimeout(() => setShowPopup(false), 5000);\r\n  }).catch(error => {\r\n    console.error(\"Failed to get user data:\", error);\r\n  });\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,0BAA0B;AACjC,SAASC,OAAO,EAAEC,WAAW,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,OAAO,SAASC,YAAYA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAGlC,IAAIC,IAAI,GAAGF,KAAK,CAACE,IAAI;EAErB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAC5CM,KAAK,CAACK,QAAQ,IAAIL,KAAK,CAACK,QAAQ,CAAC,UAAU,CAAC,IAAIL,KAAK,CAACK,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAGL,KAAK,CAACK,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,EAClH,CAAC;EACD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAChDM,KAAK,CAACK,QAAQ,IAAIL,KAAK,CAACK,QAAQ,CAAC,UAAU,CAAC,IAAIL,KAAK,CAACK,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAGL,KAAK,CAACK,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,EAClH,CAAC;;EAED;EACA,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMgB,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,UAAU,GAAG,aAAa;IAEhC,IAAI,CAACR,WAAW,CAACS,IAAI,CAAC,CAAC,EAAEC,KAAK,CAAC,2BAA2B,CAAC,CAAC,KACvD,IAAI,CAACF,UAAU,CAACG,IAAI,CAACR,aAAa,CAAC,EAAEO,KAAK,CAAC,oCAAoC,CAAC,CAAC,KACjF,OAAO,IAAI;IAEhB,OAAO,KAAK;EACd,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIL,cAAc,CAAC,CAAC,EAAE;MACpBM,UAAU,CACRb,WAAW,EACXG,aAAa,EACbN,KAAK,CAACiB,mBAAmB,EACzBR,YAAY,EACZT,KAAK,CAACkB,oBAAoB,IAAIlB,KAAK,CAACkB,oBACtC,CAAC;IACH;EACF,CAAC;EAGD,SAASC,YAAYA,CAAA,EAAG;IACtB,oBACErB,OAAA;MAAKsB,KAAK,EAAE;QACVC,QAAQ,EAAE,UAAU;QACpBC,GAAG,EAAE,KAAK;QACVC,IAAI,EAAE,KAAK;QACXC,SAAS,EAAE,qCAAqC;QAChDC,KAAK,EAAE,MAAM;QACbC,SAAS,EAAE,QAAQ;QACnBC,eAAe,EAAE,SAAS;QAC1BC,KAAK,EAAE,SAAS;QAChBC,OAAO,EAAE,MAAM;QACfC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE,mBAAmB;QAC3BC,MAAM,EAAE,CAAC;QACTC,YAAY,EAAE;MAChB,CAAE;MAAAC,QAAA,EAAC;IAEH;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEV;EASA,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sDAAsD,EAAE;QACjFC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,OAAO,EAAE7C,IAAI,CAAC8C;QAAI,CAAC;MAC9C,CAAC,CAAC;MACF,MAAMC,aAAa,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAC3C,IAAIV,QAAQ,CAACW,EAAE,EAAE;QACbC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGL,aAAa,CAACM,GAAG;MAC5C,CAAC,MAAM;QACHC,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAER,aAAa,CAAC;MAClE;IACJ,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IAC3D;EACJ,CAAC;EAeC,oBACE3D,OAAA;IAAK4D,SAAS,EAAC,iBAAiB;IAACtC,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAW,CAAE;IAAAa,QAAA,GAC9D1B,SAAS,iBAAIV,OAAA,CAACqB,YAAY;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE9BxC,OAAA;MAAAoC,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEjBxC,OAAA;MAAO6D,OAAO,EAAC,aAAa;MAAAzB,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAClDxC,OAAA;MACE8D,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,aAAa;MAChBC,IAAI,EAAC,aAAa;MAClBC,WAAW,EAAC,cAAc;MAC1BC,QAAQ;MACRC,KAAK,EAAE9D,WAAY;MACnB+D,QAAQ,EAAEC,CAAC,IAAI/D,cAAc,CAAC+D,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAA9B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eAAAxC,OAAA;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAAAxC,OAAA;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEdxC,OAAA;MAAO6D,OAAO,EAAC,eAAe;MAAAzB,QAAA,EAAC;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACrExC,OAAA;MACE8D,IAAI,EAAC,KAAK;MACVC,EAAE,EAAC,eAAe;MAClBC,IAAI,EAAC,eAAe;MACpBC,WAAW,EAAC,+BAA+B;MAC3CC,QAAQ;MACRC,KAAK,EAAE3D,aAAc;MACrB4D,QAAQ,EAAEC,CAAC,IAAI5D,gBAAgB,CAAC4D,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAA9B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eAAAxC,OAAA;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAAAxC,OAAA;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEdxC,OAAA;MAAQuE,OAAO,EAAEtD,YAAa;MAAC6C,IAAI,EAAC,QAAQ;MAACC,EAAE,EAAC,SAAS;MAAA3B,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE1ExC,OAAA;MAAQuE,OAAO,EAAE9B,mBAAoB;MAAAL,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEV;AAACrC,EAAA,CArIeF,YAAY;AAAAuE,EAAA,GAAZvE,YAAY;AAuI5B,SAASiB,UAAUA,CAACb,WAAW,EAAEG,aAAa,EAAEW,mBAAmB,EAAER,YAAY,EAAES,oBAAoB,EAAE;EACvGsC,OAAO,CAACe,GAAG,CAAC,kBAAkB,EAAE;IAAEpE,WAAW;IAAEG;EAAc,CAAC,CAAC;EAE/DV,WAAW,CAAC,CAAC,CAAC4E,IAAI,CAACC,IAAI,IAAI;IACzBA,IAAI,CAAC,OAAO,CAAC,GAAG,KAAK;IACrBA,IAAI,CAAC,UAAU,CAAC,GAAG,CAACtE,WAAW,EAAEG,aAAa,CAAC;IAC/CX,OAAO,CAAC8E,IAAI,CAAC;;IAEb;IACA,IAAIvD,oBAAoB,EAAE;MACxBA,oBAAoB,CAAC,CAAC;IACxB;IAEAD,mBAAmB,CAACwD,IAAI,CAAC;IACzBhE,YAAY,CAAC,IAAI,CAAC;IAClBiE,UAAU,CAAC,MAAMjE,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;EAC7C,CAAC,CAAC,CAACkE,KAAK,CAAClB,KAAK,IAAI;IAChBD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;EAClD,CAAC,CAAC;AACJ;AAAC,IAAAa,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}