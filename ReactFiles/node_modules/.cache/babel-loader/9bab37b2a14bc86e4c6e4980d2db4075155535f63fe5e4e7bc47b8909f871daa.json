{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate,useParams}from'react-router-dom';import{DashboardFrame}from'./dashboard_frame';import{ClientManager}from'./subApps/cm/cm.js';import{DirectMessage}from'./subApps/dm.js';import{AppointmentManager}from'./subApps/am.js';import{GroupManager}from'./subApps/gm.js';import{SettingsForm}from'../setup/settings.js';import{jsx as _jsx}from\"react/jsx-runtime\";export function RenderDashboard(props){const[currentPage,setPage]=useState(0);const navigate=useNavigate();const{route}=useParams();// Destructure route from useParams\nconst routeToPage={'clientmanager':1,'groupmessage':2,'appointmentmanager':3,'clientgroups':4,'settings':5};useEffect(()=>{// Update the page state based on the URL route\nconst page=route?routeToPage[route]:0;setPage(page);},[route]);// React to changes in the route parameter\nfunction handleNavButtonClick(i){const routeName=Object.keys(routeToPage).find(key=>routeToPage[key]===i);navigate(\"/\".concat(routeName||''),{replace:true});setPage(i);}return/*#__PURE__*/_jsx(DashboardFrame,{userData:props.userData,displayNum:currentPage,navButtonClicked:i=>handleNavButtonClick(i),children:/*#__PURE__*/_jsx(DirectContent,{user:props.user,userData:props.userData,currentPage:currentPage,changeUserDataState:props.changeUserDataState})});}function DirectContent(props){switch(props.currentPage){case 1:return/*#__PURE__*/_jsx(ClientManager,{userData:props.userData});case 2:return/*#__PURE__*/_jsx(DirectMessage,{userData:props.userData});case 3:return/*#__PURE__*/_jsx(AppointmentManager,{userData:props.userData});case 4:return/*#__PURE__*/_jsx(GroupManager,{userData:props.userData});case 5:return/*#__PURE__*/_jsx(SettingsForm,{userData:props.userData,changeUserDataState:props.changeUserDataState,user:props.user});default:return null;// Render nothing if no valid page is selected\n}}","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","DashboardFrame","ClientManager","DirectMessage","AppointmentManager","GroupManager","SettingsForm","jsx","_jsx","RenderDashboard","props","currentPage","setPage","navigate","route","routeToPage","page","handleNavButtonClick","i","routeName","Object","keys","find","key","concat","replace","userData","displayNum","navButtonClicked","children","DirectContent","user","changeUserDataState"],"sources":["D:/development/AthertonReact/ReactFiles/src/dashboard/dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { DashboardFrame } from './dashboard_frame';\r\nimport { ClientManager } from './subApps/cm/cm.js';\r\nimport { DirectMessage } from './subApps/dm.js';\r\nimport { AppointmentManager } from './subApps/am.js';\r\nimport { GroupManager } from './subApps/gm.js';\r\nimport { SettingsForm } from '../setup/settings.js';\r\n\r\nexport function RenderDashboard(props) {\r\n    const [currentPage, setPage] = useState(0);\r\n    const navigate = useNavigate();\r\n    const { route } = useParams();  // Destructure route from useParams\r\n\r\n    const routeToPage = {\r\n        'clientmanager': 1,\r\n        'groupmessage': 2,\r\n        'appointmentmanager': 3,\r\n        'clientgroups': 4,\r\n        'settings': 5\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Update the page state based on the URL route\r\n        const page = route ? routeToPage[route] : 0;\r\n        setPage(page);\r\n    }, [route]); // React to changes in the route parameter\r\n\r\n    function handleNavButtonClick(i) {\r\n        const routeName = Object.keys(routeToPage).find(key => routeToPage[key] === i);\r\n        navigate(`/${routeName || ''}`, { replace: true });\r\n        setPage(i);\r\n    }\r\n\r\n    return (\r\n        <DashboardFrame userData={props.userData} displayNum={currentPage} navButtonClicked={(i) => handleNavButtonClick(i)}>\r\n            <DirectContent user={props.user} userData={props.userData} currentPage={currentPage} changeUserDataState={props.changeUserDataState}/>\r\n        </DashboardFrame>\r\n    );\r\n}\r\n\r\nfunction DirectContent(props) {\r\n    switch (props.currentPage) {\r\n        case 1:\r\n            return <ClientManager userData={props.userData} />;\r\n        case 2:\r\n            return <DirectMessage userData={props.userData} />;\r\n        case 3:\r\n            return <AppointmentManager userData={props.userData} />;\r\n        case 4:\r\n            return <GroupManager userData={props.userData} />;\r\n        case 5:\r\n            return <SettingsForm userData={props.userData} changeUserDataState={props.changeUserDataState} user={props.user} />;\r\n        default:\r\n            return null;  // Render nothing if no valid page is selected\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}