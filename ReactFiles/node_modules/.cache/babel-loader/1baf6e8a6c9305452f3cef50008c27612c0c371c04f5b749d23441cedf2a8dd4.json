{"ast":null,"code":"var _jsxFileName = \"D:\\\\development\\\\AthertonReact\\\\ReactFiles\\\\src\\\\dashboard\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { DashboardFrame } from './dashboard_frame';\nimport { ClientManager } from './subApps/cm/cm.js';\nimport { DirectMessage } from './subApps/dm.js';\nimport { AppointmentManager } from './subApps/am.js';\nimport { GroupManager } from './subApps/gm.js';\nimport { SettingsForm } from '../setup/settings.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function RenderDashboard(props) {\n  _s();\n  const [currentPage, setPage] = useState(0);\n  const navigate = useNavigate();\n  const {\n    route\n  } = useParams(); // Destructure route from useParams\n\n  const routeToPage = {\n    'clientmanager': 1,\n    'groupmessage': 2,\n    'appointmentmanager': 3,\n    'clientgroups': 4,\n    'settings': 5\n  };\n  useEffect(() => {\n    // Update the page state based on the URL route\n    const page = route ? routeToPage[route] : 0;\n    setPage(page);\n  }, [route]); // React to changes in the route parameter\n\n  function handleNavButtonClick(i) {\n    const routeName = Object.keys(routeToPage).find(key => routeToPage[key] === i);\n    navigate(`/${routeName || ''}`, {\n      replace: true\n    });\n    setPage(i);\n  }\n  return /*#__PURE__*/_jsxDEV(DashboardFrame, {\n    userData: props.userData,\n    displayNum: currentPage,\n    navButtonClicked: i => handleNavButtonClick(i),\n    children: /*#__PURE__*/_jsxDEV(DirectContent, {\n      user: props.user,\n      userData: props.userData,\n      currentPage: currentPage,\n      changeUserDataState: props.changeUserDataState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(RenderDashboard, \"mteze1MwrA5QBKyuqsjkL86qJ7M=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = RenderDashboard;\nfunction DirectContent(props) {\n  switch (props.currentPage) {\n    case 1:\n      return /*#__PURE__*/_jsxDEV(ClientManager, {\n        userData: props.userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 20\n      }, this);\n    case 2:\n      return /*#__PURE__*/_jsxDEV(DirectMessage, {\n        userData: props.userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 20\n      }, this);\n    case 3:\n      return /*#__PURE__*/_jsxDEV(AppointmentManager, {\n        userData: props.userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 20\n      }, this);\n    case 4:\n      return /*#__PURE__*/_jsxDEV(GroupManager, {\n        userData: props.userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }, this);\n    case 5:\n      return /*#__PURE__*/_jsxDEV(SettingsForm, {\n        userData: props.userData,\n        changeUserDataState: props.changeUserDataState,\n        user: props.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 20\n      }, this);\n    default:\n      return null;\n    // Render nothing if no valid page is selected\n  }\n}\n_c2 = DirectContent;\nvar _c, _c2;\n$RefreshReg$(_c, \"RenderDashboard\");\n$RefreshReg$(_c2, \"DirectContent\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","DashboardFrame","ClientManager","DirectMessage","AppointmentManager","GroupManager","SettingsForm","jsxDEV","_jsxDEV","RenderDashboard","props","_s","currentPage","setPage","navigate","route","routeToPage","page","handleNavButtonClick","i","routeName","Object","keys","find","key","replace","userData","displayNum","navButtonClicked","children","DirectContent","user","changeUserDataState","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","$RefreshReg$"],"sources":["D:/development/AthertonReact/ReactFiles/src/dashboard/dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { DashboardFrame } from './dashboard_frame';\r\nimport { ClientManager } from './subApps/cm/cm.js';\r\nimport { DirectMessage } from './subApps/dm.js';\r\nimport { AppointmentManager } from './subApps/am.js';\r\nimport { GroupManager } from './subApps/gm.js';\r\nimport { SettingsForm } from '../setup/settings.js';\r\n\r\nexport function RenderDashboard(props) {\r\n    const [currentPage, setPage] = useState(0);\r\n    const navigate = useNavigate();\r\n    const { route } = useParams();  // Destructure route from useParams\r\n\r\n    const routeToPage = {\r\n        'clientmanager': 1,\r\n        'groupmessage': 2,\r\n        'appointmentmanager': 3,\r\n        'clientgroups': 4,\r\n        'settings': 5\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Update the page state based on the URL route\r\n        const page = route ? routeToPage[route] : 0;\r\n        setPage(page);\r\n    }, [route]); // React to changes in the route parameter\r\n\r\n    function handleNavButtonClick(i) {\r\n        const routeName = Object.keys(routeToPage).find(key => routeToPage[key] === i);\r\n        navigate(`/${routeName || ''}`, { replace: true });\r\n        setPage(i);\r\n    }\r\n\r\n    return (\r\n        <DashboardFrame userData={props.userData} displayNum={currentPage} navButtonClicked={(i) => handleNavButtonClick(i)}>\r\n            <DirectContent user={props.user} userData={props.userData} currentPage={currentPage} changeUserDataState={props.changeUserDataState}/>\r\n        </DashboardFrame>\r\n    );\r\n}\r\n\r\nfunction DirectContent(props) {\r\n    switch (props.currentPage) {\r\n        case 1:\r\n            return <ClientManager userData={props.userData} />;\r\n        case 2:\r\n            return <DirectMessage userData={props.userData} />;\r\n        case 3:\r\n            return <AppointmentManager userData={props.userData} />;\r\n        case 4:\r\n            return <GroupManager userData={props.userData} />;\r\n        case 5:\r\n            return <SettingsForm userData={props.userData} changeUserDataState={props.changeUserDataState} user={props.user} />;\r\n        default:\r\n            return null;  // Render nothing if no valid page is selected\r\n    }\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,OAAO,SAASC,eAAeA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,WAAW,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAC1C,MAAMiB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEgB;EAAM,CAAC,GAAGf,SAAS,CAAC,CAAC,CAAC,CAAE;;EAEhC,MAAMgB,WAAW,GAAG;IAChB,eAAe,EAAE,CAAC;IAClB,cAAc,EAAE,CAAC;IACjB,oBAAoB,EAAE,CAAC;IACvB,cAAc,EAAE,CAAC;IACjB,UAAU,EAAE;EAChB,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACZ;IACA,MAAMmB,IAAI,GAAGF,KAAK,GAAGC,WAAW,CAACD,KAAK,CAAC,GAAG,CAAC;IAC3CF,OAAO,CAACI,IAAI,CAAC;EACjB,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,SAASG,oBAAoBA,CAACC,CAAC,EAAE;IAC7B,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAI,CAACN,WAAW,CAAC,CAACO,IAAI,CAACC,GAAG,IAAIR,WAAW,CAACQ,GAAG,CAAC,KAAKL,CAAC,CAAC;IAC9EL,QAAQ,CAAE,IAAGM,SAAS,IAAI,EAAG,EAAC,EAAE;MAAEK,OAAO,EAAE;IAAK,CAAC,CAAC;IAClDZ,OAAO,CAACM,CAAC,CAAC;EACd;EAEA,oBACIX,OAAA,CAACP,cAAc;IAACyB,QAAQ,EAAEhB,KAAK,CAACgB,QAAS;IAACC,UAAU,EAAEf,WAAY;IAACgB,gBAAgB,EAAGT,CAAC,IAAKD,oBAAoB,CAACC,CAAC,CAAE;IAAAU,QAAA,eAChHrB,OAAA,CAACsB,aAAa;MAACC,IAAI,EAAErB,KAAK,CAACqB,IAAK;MAACL,QAAQ,EAAEhB,KAAK,CAACgB,QAAS;MAACd,WAAW,EAAEA,WAAY;MAACoB,mBAAmB,EAAEtB,KAAK,CAACsB;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1H,CAAC;AAEzB;AAACzB,EAAA,CA9BeF,eAAe;EAAA,QAEVV,WAAW,EACVC,SAAS;AAAA;AAAAqC,EAAA,GAHf5B,eAAe;AAgC/B,SAASqB,aAAaA,CAACpB,KAAK,EAAE;EAC1B,QAAQA,KAAK,CAACE,WAAW;IACrB,KAAK,CAAC;MACF,oBAAOJ,OAAA,CAACN,aAAa;QAACwB,QAAQ,EAAEhB,KAAK,CAACgB;MAAS;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACtD,KAAK,CAAC;MACF,oBAAO5B,OAAA,CAACL,aAAa;QAACuB,QAAQ,EAAEhB,KAAK,CAACgB;MAAS;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACtD,KAAK,CAAC;MACF,oBAAO5B,OAAA,CAACJ,kBAAkB;QAACsB,QAAQ,EAAEhB,KAAK,CAACgB;MAAS;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC3D,KAAK,CAAC;MACF,oBAAO5B,OAAA,CAACH,YAAY;QAACqB,QAAQ,EAAEhB,KAAK,CAACgB;MAAS;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACrD,KAAK,CAAC;MACF,oBAAO5B,OAAA,CAACF,YAAY;QAACoB,QAAQ,EAAEhB,KAAK,CAACgB,QAAS;QAACM,mBAAmB,EAAEtB,KAAK,CAACsB,mBAAoB;QAACD,IAAI,EAAErB,KAAK,CAACqB;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACvH;MACI,OAAO,IAAI;IAAG;EACtB;AACJ;AAACE,GAAA,GAfQR,aAAa;AAAA,IAAAO,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}