{"ast":null,"code":"var _jsxFileName = \"D:\\\\development\\\\AthertonReact\\\\ReactFiles\\\\src\\\\dashboard\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { DashboardFrame } from './dashboard_frame';\nimport { ClientManager } from './subApps/cm/cm.js';\nimport { DirectMessage } from './subApps/dm.js';\nimport { AppointmentManager } from './subApps/am.js';\nimport { GroupManager } from './subApps/gm.js';\nimport { SettingsForm } from '../setup/settings.js';\nimport { getUserData } from '../database/database.js';\n\n/* KEY: 1 = Cleint Manager, 2 = Direct Message, 3 = Appointment Manager, 4 = Group Manager */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function RenderDashboard(props) {\n  _s();\n  const [currentPage, setPage] = useState(0);\n  function handleNavButtonClick(i) {\n    setPage(i);\n  }\n  if (props.route == \"settings\") {\n    setPage(5);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DashboardFrame, {\n      userData: props.userData,\n      displayNum: currentPage,\n      navButtonClicked: i => handleNavButtonClick(i),\n      children: /*#__PURE__*/_jsxDEV(DirectContent, {\n        user: props.user,\n        userData: props.userData,\n        currentPage: currentPage,\n        changeUserDataState: props.changeUserDataState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(RenderDashboard, \"DnCQEVyM6evSB1+z3g4NIbaGQ9o=\");\n_c = RenderDashboard;\nfunction DirectContent(props) {\n  if (props.currentPage == 1) {\n    return /*#__PURE__*/_jsxDEV(ClientManager, {\n      userData: props.userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  } else if (props.currentPage == 2) {\n    return /*#__PURE__*/_jsxDEV(DirectMessage, {\n      userData: props.userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  } else if (props.currentPage == 3) {\n    return /*#__PURE__*/_jsxDEV(AppointmentManager, {\n      userData: props.userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  } else if (props.currentPage == 4) {\n    return /*#__PURE__*/_jsxDEV(GroupManager, {\n      userData: props.userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  } else if (props.currentPage == 5) {\n    return /*#__PURE__*/_jsxDEV(SettingsForm, {\n      userData: props.userData,\n      changeUserDataState: props.changeUserDataState,\n      user: props.user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n}\n_c2 = DirectContent;\nvar _c, _c2;\n$RefreshReg$(_c, \"RenderDashboard\");\n$RefreshReg$(_c2, \"DirectContent\");","map":{"version":3,"names":["useState","DashboardFrame","ClientManager","DirectMessage","AppointmentManager","GroupManager","SettingsForm","getUserData","jsxDEV","_jsxDEV","Fragment","_Fragment","RenderDashboard","props","_s","currentPage","setPage","handleNavButtonClick","i","route","children","userData","displayNum","navButtonClicked","DirectContent","user","changeUserDataState","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","$RefreshReg$"],"sources":["D:/development/AthertonReact/ReactFiles/src/dashboard/dashboard.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { DashboardFrame } from './dashboard_frame';\r\nimport { ClientManager } from './subApps/cm/cm.js'\r\nimport { DirectMessage } from './subApps/dm.js'\r\nimport { AppointmentManager } from './subApps/am.js'\r\nimport { GroupManager } from './subApps/gm.js'\r\nimport { SettingsForm } from '../setup/settings.js';\r\nimport { getUserData } from '../database/database.js';\r\n\r\n\r\n\r\n/* KEY: 1 = Cleint Manager, 2 = Direct Message, 3 = Appointment Manager, 4 = Group Manager */\r\n\r\nexport function RenderDashboard(props){\r\n    const [currentPage, setPage] = useState(0)\r\n    function handleNavButtonClick(i){\r\n      setPage(i)\r\n    }\r\n\r\n    if (props.route == \"settings\"){\r\n      setPage(5)\r\n    }\r\n\r\n\r\n    return (\r\n  \r\n      <>\r\n      \r\n        <DashboardFrame userData={props.userData} displayNum={currentPage} navButtonClicked={(i) => handleNavButtonClick(i)}>\r\n          <DirectContent user={props.user} userData={props.userData} currentPage={currentPage} changeUserDataState={props.changeUserDataState}/>\r\n        </DashboardFrame>\r\n  \r\n      </>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction DirectContent(props){\r\n\r\n\r\n\r\n\r\n\r\n  if (props.currentPage == 1){\r\n    return <ClientManager userData={props.userData}></ClientManager>\r\n  } else if (props.currentPage == 2){\r\n    return <DirectMessage userData={props.userData}></DirectMessage>\r\n  } else if (props.currentPage == 3){\r\n    return <AppointmentManager userData={props.userData}></AppointmentManager>\r\n  } else if (props.currentPage == 4){\r\n    return <GroupManager userData={props.userData}></GroupManager>\r\n  } else if (props.currentPage == 5){\r\n    return <SettingsForm userData={props.userData} changeUserDataState={props.changeUserDataState} user={props.user}></SettingsForm>\r\n  } else {\r\n    return <>\r\n  \r\n  \r\n  </>\r\n  }\r\n\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAQ,sBAAsB;AACnD,SAASC,WAAW,QAAQ,yBAAyB;;AAIrD;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,OAAO,SAASC,eAAeA,CAACC,KAAK,EAAC;EAAAC,EAAA;EAClC,MAAM,CAACC,WAAW,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAC1C,SAASiB,oBAAoBA,CAACC,CAAC,EAAC;IAC9BF,OAAO,CAACE,CAAC,CAAC;EACZ;EAEA,IAAIL,KAAK,CAACM,KAAK,IAAI,UAAU,EAAC;IAC5BH,OAAO,CAAC,CAAC,CAAC;EACZ;EAGA,oBAEEP,OAAA,CAAAE,SAAA;IAAAS,QAAA,eAEEX,OAAA,CAACR,cAAc;MAACoB,QAAQ,EAAER,KAAK,CAACQ,QAAS;MAACC,UAAU,EAAEP,WAAY;MAACQ,gBAAgB,EAAGL,CAAC,IAAKD,oBAAoB,CAACC,CAAC,CAAE;MAAAE,QAAA,eAClHX,OAAA,CAACe,aAAa;QAACC,IAAI,EAAEZ,KAAK,CAACY,IAAK;QAACJ,QAAQ,EAAER,KAAK,CAACQ,QAAS;QAACN,WAAW,EAAEA,WAAY;QAACW,mBAAmB,EAAEb,KAAK,CAACa;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxH;EAAC,gBAEjB,CAAC;AAET;AAAChB,EAAA,CArBeF,eAAe;AAAAmB,EAAA,GAAfnB,eAAe;AA6B/B,SAASY,aAAaA,CAACX,KAAK,EAAC;EAM3B,IAAIA,KAAK,CAACE,WAAW,IAAI,CAAC,EAAC;IACzB,oBAAON,OAAA,CAACP,aAAa;MAACmB,QAAQ,EAAER,KAAK,CAACQ;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC;EAClE,CAAC,MAAM,IAAIjB,KAAK,CAACE,WAAW,IAAI,CAAC,EAAC;IAChC,oBAAON,OAAA,CAACN,aAAa;MAACkB,QAAQ,EAAER,KAAK,CAACQ;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC;EAClE,CAAC,MAAM,IAAIjB,KAAK,CAACE,WAAW,IAAI,CAAC,EAAC;IAChC,oBAAON,OAAA,CAACL,kBAAkB;MAACiB,QAAQ,EAAER,KAAK,CAACQ;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqB,CAAC;EAC5E,CAAC,MAAM,IAAIjB,KAAK,CAACE,WAAW,IAAI,CAAC,EAAC;IAChC,oBAAON,OAAA,CAACJ,YAAY;MAACgB,QAAQ,EAAER,KAAK,CAACQ;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC;EAChE,CAAC,MAAM,IAAIjB,KAAK,CAACE,WAAW,IAAI,CAAC,EAAC;IAChC,oBAAON,OAAA,CAACH,YAAY;MAACe,QAAQ,EAAER,KAAK,CAACQ,QAAS;MAACK,mBAAmB,EAAEb,KAAK,CAACa,mBAAoB;MAACD,IAAI,EAAEZ,KAAK,CAACY;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC;EAClI,CAAC,MAAM;IACL,oBAAOrB,OAAA,CAAAE,SAAA,mBAGP,CAAC;EACH;AAEF;AAACqB,GAAA,GAvBQR,aAAa;AAAA,IAAAO,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}