{"ast":null,"code":"var _jsxFileName = \"/Users/jscarbrough/Desktop/AthertonReact/src/dashboard/subApps/cm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"../../cssFiles/cm.css\";\nimport AddClientForm from './addClientForm.js'; // Import the AddClientForm component\nimport searchIcon from '../../images/search.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ClientManager(props) {\n  _s();\n  const [showAddClientForm, setShowAddClientForm] = useState(false);\n  const toggleAddClientForm = () => setShowAddClientForm(!showAddClientForm);\n\n  // Assuming clientData parsing and the rest of the component's logic remains here\n  const clientData = JSON.parse(props.userData.clientData);\n  const groupData = props.userData.groupData;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cm-top-headers\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"cm-toggle-add-client\",\n        onClick: toggleAddClientForm,\n        children: \"Add Client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"cm-search\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"cm-search-icon\",\n          src: searchIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), showAddClientForm && /*#__PURE__*/_jsxDEV(AddClientForm, {\n      setCurrentDateTime: setCurrentDateTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true);\n}\n_s(ClientManager, \"FlY2EebNKlpAYb4MXl5v87liN94=\");\n_c = ClientManager;\nvar _c;\n$RefreshReg$(_c, \"ClientManager\");","map":{"version":3,"names":["React","useState","AddClientForm","searchIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","ClientManager","props","_s","showAddClientForm","setShowAddClientForm","toggleAddClientForm","clientData","JSON","parse","userData","groupData","children","className","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","setCurrentDateTime","_c","$RefreshReg$"],"sources":["/Users/jscarbrough/Desktop/AthertonReact/src/dashboard/subApps/cm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport \"../../cssFiles/cm.css\";\nimport AddClientForm from './addClientForm.js'; // Import the AddClientForm component\nimport searchIcon from '../../images/search.png';\n\nexport function ClientManager(props) {\n  const [showAddClientForm, setShowAddClientForm] = useState(false);\n  const toggleAddClientForm = () => setShowAddClientForm(!showAddClientForm);\n\n  // Assuming clientData parsing and the rest of the component's logic remains here\n  const clientData = JSON.parse(props.userData.clientData);\n  const groupData = props.userData.groupData;\n\n  return (\n    <>\n      <div className=\"cm-top-headers\">\n        <div id=\"cm-toggle-add-client\" onClick={toggleAddClientForm}>Add Client</div>\n        <div id=\"cm-search\"><h1>Search</h1><img id='cm-search-icon' src={searchIcon} /></div>\n      </div>\n\n      {showAddClientForm && <AddClientForm setCurrentDateTime={setCurrentDateTime} />}\n      \n      {/* The rest of your component that renders clientData */}\n    </>\n  );\n}\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,uBAAuB;AAC9B,OAAOC,aAAa,MAAM,oBAAoB,CAAC,CAAC;AAChD,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjD,OAAO,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAMY,mBAAmB,GAAGA,CAAA,KAAMD,oBAAoB,CAAC,CAACD,iBAAiB,CAAC;;EAE1E;EACA,MAAMG,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACP,KAAK,CAACQ,QAAQ,CAACH,UAAU,CAAC;EACxD,MAAMI,SAAS,GAAGT,KAAK,CAACQ,QAAQ,CAACC,SAAS;EAE1C,oBACEb,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA;MAAKe,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC7Bd,OAAA;QAAKgB,EAAE,EAAC,sBAAsB;QAACC,OAAO,EAAET,mBAAoB;QAAAM,QAAA,EAAC;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7ErB,OAAA;QAAKgB,EAAE,EAAC,WAAW;QAAAF,QAAA,gBAACd,OAAA;UAAAc,QAAA,EAAI;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAAArB,OAAA;UAAKgB,EAAE,EAAC,gBAAgB;UAACM,GAAG,EAAExB;QAAW;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClF,CAAC,EAELf,iBAAiB,iBAAIN,OAAA,CAACH,aAAa;MAAC0B,kBAAkB,EAAEA;IAAmB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAG/E,CAAC;AAEP;AAAChB,EAAA,CApBeF,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}