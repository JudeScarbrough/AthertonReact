{"ast":null,"code":"var _jsxFileName = \"/Users/jscarbrough/Desktop/AthertonReact/src/setup/settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../cssFiles/settings.css';\nimport { setData, getUserData } from '../database/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SettingsForm(props) {\n  _s();\n  const [companyName, setCompanyName] = useState('');\n  const [customerEmail, setCustomerEmail] = useState('');\n  const [customerPhone, setCustomerPhone] = useState('');\n  const validateInputs = () => {\n    // Basic validation criteria\n    const emailRegex = /\\S+@\\S+\\.\\S+/;\n    const phoneRegex = /^[0-9]{10}$/; // Simplistic validation for a 10-digit phone number\n\n    if (!companyName.trim()) alert(\"Company name is required.\");else if (!emailRegex.test(customerEmail)) alert(\"Please enter a valid email address.\");else if (!phoneRegex.test(customerPhone)) alert(\"Please enter a valid phone number.\");else return true; // All validations passed\n\n    return false; // If any validation fails\n  };\n  const handleSubmit = setUserDataState => {\n    if (validateInputs()) {\n      // If validation passes, call submitData\n      submitData(companyName, customerEmail, customerPhone, setUserDataState);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: () => handleSubmit(props.setUserDataState),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"companyName\",\n        children: \"Company Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"companyName\",\n        name: \"companyName\",\n        placeholder: \"Company Name\",\n        required: true,\n        value: companyName,\n        onChange: e => setCompanyName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"customerEmail\",\n        children: \"Customer Contact Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"customerEmail\",\n        name: \"customerEmail\",\n        placeholder: \"Customer Contact Email\",\n        required: true,\n        value: customerEmail,\n        onChange: e => setCustomerEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"customerPhone\",\n        children: \"Customer Contact Phone Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        id: \"customerPhone\",\n        name: \"customerPhone\",\n        placeholder: \"Customer Contact Phone Number\",\n        required: true,\n        value: customerPhone,\n        onChange: e => setCustomerPhone(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        id: \"confirm\",\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n// Example submitData function\n_s(SettingsForm, \"71/gMrHF5fUsAXUZu8psfVNgaNM=\");\n_c = SettingsForm;\nfunction submitData(companyName, customerEmail, customerPhone, setUserDataState) {\n  console.log('Submitting data:', {\n    companyName,\n    customerEmail,\n    customerPhone\n  });\n  // Implementation for data submission here\n\n  getUserData().then(data => {\n    data[\"setup\"] = \"Yes\";\n    data[\"settings\"] = [companyName, customerEmail, customerPhone];\n    setData(data);\n    setUserDataState(data);\n  }).catch(error => {\n    console.error(\"Failed to get user data:\", error);\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"SettingsForm\");","map":{"version":3,"names":["React","useState","setData","getUserData","jsxDEV","_jsxDEV","SettingsForm","props","_s","companyName","setCompanyName","customerEmail","setCustomerEmail","customerPhone","setCustomerPhone","validateInputs","emailRegex","phoneRegex","trim","alert","test","handleSubmit","setUserDataState","submitData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","name","placeholder","required","value","onChange","e","target","_c","console","log","then","data","catch","error","$RefreshReg$"],"sources":["/Users/jscarbrough/Desktop/AthertonReact/src/setup/settings.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../cssFiles/settings.css'\nimport { setData, getUserData } from '../database/database';\n\n\nexport function SettingsForm(props) {\n  const [companyName, setCompanyName] = useState('');\n  const [customerEmail, setCustomerEmail] = useState('');\n  const [customerPhone, setCustomerPhone] = useState('');\n\n  const validateInputs = () => {\n    // Basic validation criteria\n    const emailRegex = /\\S+@\\S+\\.\\S+/;\n    const phoneRegex = /^[0-9]{10}$/; // Simplistic validation for a 10-digit phone number\n\n    if (!companyName.trim()) alert(\"Company name is required.\");\n    else if (!emailRegex.test(customerEmail)) alert(\"Please enter a valid email address.\");\n    else if (!phoneRegex.test(customerPhone)) alert(\"Please enter a valid phone number.\");\n    else return true; // All validations passed\n\n    return false; // If any validation fails\n  };\n\n  const handleSubmit = (setUserDataState) => {\n\n\n    if (validateInputs()) {\n      // If validation passes, call submitData\n      submitData(companyName, customerEmail, customerPhone, setUserDataState);\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <h2>Settings</h2>\n      <form onSubmit={() => handleSubmit(props.setUserDataState)}>\n        <label htmlFor=\"companyName\">Company Name:</label>\n        <input\n          type=\"text\"\n          id=\"companyName\"\n          name=\"companyName\"\n          placeholder=\"Company Name\"\n          required\n          value={companyName}\n          onChange={e => setCompanyName(e.target.value)}\n        /><br /><br />\n\n        <label htmlFor=\"customerEmail\">Customer Contact Email:</label>\n        <input\n          type=\"email\"\n          id=\"customerEmail\"\n          name=\"customerEmail\"\n          placeholder=\"Customer Contact Email\"\n          required\n          value={customerEmail}\n          onChange={e => setCustomerEmail(e.target.value)}\n        /><br /><br />\n\n        <label htmlFor=\"customerPhone\">Customer Contact Phone Number:</label>\n        <input\n          type=\"tel\"\n          id=\"customerPhone\"\n          name=\"customerPhone\"\n          placeholder=\"Customer Contact Phone Number\"\n          required\n          value={customerPhone}\n          onChange={e => setCustomerPhone(e.target.value)}\n        /><br /><br />\n\n        <button type=\"submit\" id=\"confirm\">Confirm</button>\n      </form>\n    </div>\n  );\n}\n\n// Example submitData function\nfunction submitData(companyName, customerEmail, customerPhone, setUserDataState) {\n  console.log('Submitting data:', { companyName, customerEmail, customerPhone });\n  // Implementation for data submission here\n    \n  getUserData().then(data => {\n    data[\"setup\"] = \"Yes\"\n    data[\"settings\"] = [companyName, customerEmail, customerPhone]\n    setData(data)\n    setUserDataState(data)\n\n  }).catch(error => {console.error(\"Failed to get user data:\", error)})\n\n\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}