{"ast":null,"code":"var _jsxFileName = \"/Users/jscarbrough/Desktop/AthertonReact/src/dashboard/subApps/addClientForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddClientForm = ({\n  setCurrentDateTime\n}) => {\n  _s();\n  const now = new Date();\n  const [year, setYear] = useState(now.getFullYear());\n  const [month, setMonth] = useState(now.getMonth() + 1);\n  const [day, setDay] = useState(now.getDate());\n  const [hour, setHour] = useState(now.getHours() % 12 || 12);\n  const [minute, setMinute] = useState(now.getMinutes());\n  const [amPm, setAmPm] = useState(now.getHours() >= 12 ? 'PM' : 'AM');\n  const generateOptions = (start, end) => {\n    let options = [];\n    for (let i = start; i <= end; i++) {\n      options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: i,\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 20\n      }, this));\n    }\n    return options;\n  };\n\n  // This function needs to be adjusted or passed down as props to handle setting the current date and time\n  const handleSetCurrentDateTime = () => {\n    // Implementation for setting current date and time\n    setCurrentDateTime();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userblock\",\n    id: \"addClientBlock\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"firstName\",\n      placeholder: \"First Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"lastName\",\n      placeholder: \"Last Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"phoneNumber\",\n      placeholder: \"Phone Number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-time-selectors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSetCurrentDateTime,\n      className: \"set-current-time\",\n      children: \"Set to Current Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groupcontainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addgroup\",\n        children: \"Add Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editstack\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"addClient\",\n        children: \"Confirm Client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(AddClientForm, \"Nx3vCLWR46p9edjZU+h3FCgYTXA=\");\n_c = AddClientForm;\nexport default AddClientForm;\nvar _c;\n$RefreshReg$(_c, \"AddClientForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddClientForm","setCurrentDateTime","_s","now","Date","year","setYear","getFullYear","month","setMonth","getMonth","day","setDay","getDate","hour","setHour","getHours","minute","setMinute","getMinutes","amPm","setAmPm","generateOptions","start","end","options","i","push","value","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSetCurrentDateTime","className","id","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/jscarbrough/Desktop/AthertonReact/src/dashboard/subApps/addClientForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst AddClientForm = ({ setCurrentDateTime }) => {\n  const now = new Date();\n  const [year, setYear] = useState(now.getFullYear());\n  const [month, setMonth] = useState(now.getMonth() + 1);\n  const [day, setDay] = useState(now.getDate());\n  const [hour, setHour] = useState(now.getHours() % 12 || 12);\n  const [minute, setMinute] = useState(now.getMinutes());\n  const [amPm, setAmPm] = useState(now.getHours() >= 12 ? 'PM' : 'AM');\n\n  const generateOptions = (start, end) => {\n    let options = [];\n    for (let i = start; i <= end; i++) {\n      options.push(<option key={i} value={i}>{i}</option>);\n    }\n    return options;\n  };\n\n  // This function needs to be adjusted or passed down as props to handle setting the current date and time\n  const handleSetCurrentDateTime = () => {\n    // Implementation for setting current date and time\n    setCurrentDateTime();\n  };\n\n  return (\n    <div className=\"userblock\" id=\"addClientBlock\">\n      {/* Inputs and Selects for adding a client */}\n      <input type=\"text\" className=\"firstName\" placeholder=\"First Name\"/>\n      <input type=\"text\" className=\"lastName\" placeholder=\"Last Name\"/>\n      <input type=\"text\" className=\"phoneNumber\" placeholder=\"Phone Number\"/>\n\n      <div className=\"date-time-selectors\">\n        {/* Date and time dropdowns here */}\n      </div>\n\n      <button onClick={handleSetCurrentDateTime} className=\"set-current-time\">Set to Current Time</button>\n      \n      <div className=\"groupcontainer\">\n        <div className=\"addgroup\">Add Group</div>\n      </div>\n      <div className=\"editstack\">\n        <button className=\"addClient\">Confirm Client</button>\n      </div>\n    </div>\n  );\n};\n\nexport default AddClientForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAACM,GAAG,CAACI,WAAW,CAAC,CAAC,CAAC;EACnD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACM,GAAG,CAACO,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EACtD,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGf,QAAQ,CAACM,GAAG,CAACU,OAAO,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAACM,GAAG,CAACa,QAAQ,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC;EAC3D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAACM,GAAG,CAACgB,UAAU,CAAC,CAAC,CAAC;EACtD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAACM,GAAG,CAACa,QAAQ,CAAC,CAAC,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC;EAEpE,MAAMM,eAAe,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAK;IACtC,IAAIC,OAAO,GAAG,EAAE;IAChB,KAAK,IAAIC,CAAC,GAAGH,KAAK,EAAEG,CAAC,IAAIF,GAAG,EAAEE,CAAC,EAAE,EAAE;MACjCD,OAAO,CAACE,IAAI,eAAC5B,OAAA;QAAgB6B,KAAK,EAAEF,CAAE;QAAAG,QAAA,EAAEH;MAAC,GAAfA,CAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuB,CAAC,CAAC;IACtD;IACA,OAAOR,OAAO;EAChB,CAAC;;EAED;EACA,MAAMS,wBAAwB,GAAGA,CAAA,KAAM;IACrC;IACAjC,kBAAkB,CAAC,CAAC;EACtB,CAAC;EAED,oBACEF,OAAA;IAAKoC,SAAS,EAAC,WAAW;IAACC,EAAE,EAAC,gBAAgB;IAAAP,QAAA,gBAE5C9B,OAAA;MAAOsC,IAAI,EAAC,MAAM;MAACF,SAAS,EAAC,WAAW;MAACG,WAAW,EAAC;IAAY;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnElC,OAAA;MAAOsC,IAAI,EAAC,MAAM;MAACF,SAAS,EAAC,UAAU;MAACG,WAAW,EAAC;IAAW;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACjElC,OAAA;MAAOsC,IAAI,EAAC,MAAM;MAACF,SAAS,EAAC,aAAa;MAACG,WAAW,EAAC;IAAc;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAEvElC,OAAA;MAAKoC,SAAS,EAAC;IAAqB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE/B,CAAC,eAENlC,OAAA;MAAQwC,OAAO,EAAEL,wBAAyB;MAACC,SAAS,EAAC,kBAAkB;MAAAN,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEpGlC,OAAA;MAAKoC,SAAS,EAAC,gBAAgB;MAAAN,QAAA,eAC7B9B,OAAA;QAAKoC,SAAS,EAAC,UAAU;QAAAN,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACNlC,OAAA;MAAKoC,SAAS,EAAC,WAAW;MAAAN,QAAA,eACxB9B,OAAA;QAAQoC,SAAS,EAAC,WAAW;QAAAN,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA5CIF,aAAa;AAAAwC,EAAA,GAAbxC,aAAa;AA8CnB,eAAeA,aAAa;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}