{"ast":null,"code":"var _jsxFileName = \"/Users/jscarbrough/Desktop/AthertonReact/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport './firebase.js';\nimport { RenderDashboard } from './dashboard/dashboard.js';\nimport { getUserData } from './database/database.js';\nimport { GoogleLoginButton } from './setup/login.js';\nimport { SettingsForm } from './setup/settings.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst auth = getAuth();\nexport default function App() {\n  _s();\n  const [isSignedIn, setSignIn] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [userDataFetched, setUserDataFetched] = useState(false);\n  const [loading, setLoading] = useState(true); // New state for loading\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (user) {\n        if (!isSignedIn) {\n          setSignIn(true);\n        }\n      } else {\n        setSignIn(false);\n      }\n      setLoading(false); // Set loading to false once we have a response\n    });\n    return () => unsubscribe(); // Cleanup subscription\n  }, [isSignedIn]);\n  const changeUserDataState = newState => {\n    setUserData(newState);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this); // Or any other loading indicator\n  }\n  if (isSignedIn) {\n    if (userDataFetched === false) {\n      getUserData().then(data => {\n        if (!(JSON.stringify(userData) === JSON.stringify(data))) {\n          setUserData(data);\n        }\n        setUserDataFetched(true);\n      }).catch(error => {\n        console.error(\"Failed to get user data:\", error);\n      });\n    }\n    if (userData && userData[\"setup\"] === \"No\" && userDataFetched) {\n      return /*#__PURE__*/_jsxDEV(SettingsForm, {\n        changeUserDataState: changeUserDataState,\n        userData: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 14\n      }, this);\n    } else if (userData && userData[\"setup\"] === \"Yes\") {\n      return /*#__PURE__*/_jsxDEV(RenderDashboard, {\n        userData: userData,\n        changeUserDataState: changeUserDataState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }, this);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(GoogleLoginButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n}\n_s(App, \"ix5GY51kPwoqjqwjGiB2CyTdl38=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","getAuth","onAuthStateChanged","RenderDashboard","getUserData","GoogleLoginButton","SettingsForm","jsxDEV","_jsxDEV","auth","App","_s","isSignedIn","setSignIn","userData","setUserData","userDataFetched","setUserDataFetched","loading","setLoading","unsubscribe","user","changeUserDataState","newState","fileName","_jsxFileName","lineNumber","columnNumber","then","data","JSON","stringify","catch","error","console","_c","$RefreshReg$"],"sources":["/Users/jscarbrough/Desktop/AthertonReact/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport './firebase.js';\nimport { RenderDashboard } from './dashboard/dashboard.js';\nimport { getUserData } from './database/database.js';\nimport { GoogleLoginButton } from './setup/login.js';\nimport { SettingsForm } from './setup/settings.js';\n\nconst auth = getAuth();\nexport default function App() {\n  const [isSignedIn, setSignIn] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [userDataFetched, setUserDataFetched] = useState(false);\n  const [loading, setLoading] = useState(true); // New state for loading\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (user) {\n        if (!isSignedIn) { \n          setSignIn(true);\n        }\n      } else {\n        setSignIn(false);\n      }\n      setLoading(false); // Set loading to false once we have a response\n    });\n\n    return () => unsubscribe(); // Cleanup subscription\n  }, [isSignedIn]);\n\n  const changeUserDataState = (newState) => {\n    setUserData(newState);\n  };\n\n  if (loading) {\n    return <div></div>; // Or any other loading indicator\n  }\n\n  if (isSignedIn) {\n    if (userDataFetched === false) {\n      getUserData().then(data => {\n        if (!(JSON.stringify(userData) === JSON.stringify(data))) {\n          setUserData(data);\n        }\n        setUserDataFetched(true);\n      }).catch(error => {console.error(\"Failed to get user data:\", error)});\n    }\n\n    if (userData && userData[\"setup\"] === \"No\" && userDataFetched) {\n      return <SettingsForm changeUserDataState={changeUserDataState} userData={userData}></SettingsForm>;\n    } else if (userData && userData[\"setup\"] === \"Yes\") {\n      return <RenderDashboard userData={userData} changeUserDataState={changeUserDataState}></RenderDashboard>;\n    }\n  } else {\n    return <GoogleLoginButton></GoogleLoginButton>;\n  }\n}\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}