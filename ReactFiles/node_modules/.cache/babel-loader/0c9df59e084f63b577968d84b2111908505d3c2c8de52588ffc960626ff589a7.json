{"ast":null,"code":"import{useState,useEffect}from'react';import{getAuth,onAuthStateChanged}from'firebase/auth';import'./firebase.js';import{RenderDashboard}from'./dashboard/dashboard.js';import{getUserData}from'./database/database.js';import{GoogleLoginButton}from'./setup/login.js';import{SettingsForm}from'./setup/settings.js';import'normalize.css';import{getServerIp,getReturnUrl}from'./config.js';import{get}from'firebase/database';import{Fragment as _Fragment,jsx as _jsx}from\"react/jsx-runtime\";const auth=getAuth();export default function App(props){const[isSignedIn,setSignIn]=useState(null);const[user,setUser]=useState(null);const[userData,setUserData]=useState(null);const[userDataFetched,setUserDataFetched]=useState(false);const[loading,setLoading]=useState(true);const[settingsDone,setSettingsDone]=useState(false);const[subUrl,setSubUrl]=useState(\"\");useEffect(()=>{const unsubscribe=onAuthStateChanged(auth,user=>{if(user){setUser(user);if(!isSignedIn){setSignIn(true);}}else{setSignIn(false);}setLoading(false);});return()=>unsubscribe();},[isSignedIn]);useEffect(()=>{if(isSignedIn&&!userDataFetched){fetchUserData();}},[isSignedIn,userDataFetched]);const fetchUserData=()=>{getUserData().then(data=>{if(!(JSON.stringify(userData)===JSON.stringify(data))){setUserData(data);}setUserDataFetched(true);}).catch(error=>{console.error(\"Failed to get user data:\",error);});};const firstSubscription=async()=>{// Construct the URL securely\nconst url=getServerIp();let email=user.email;let userId=user.uid;const data={call:\"create-checkout-session\",appUrl:getReturnUrl(),email:email,user_id:userId};try{const response=await fetch(url,{method:'POST',// or 'PUT'\nheaders:{'Content-Type':'application/json'},body:JSON.stringify(data)});const session=await response.json();if(response.ok){return session.url;}else{console.error(\"error in creating checkout session\");}}catch(error){console.error('Error creating checkout session:',error);}};const handleSubscription=async()=>{// Construct the URL securely\nconst url=getServerIp();let email=user.email;let userId=user.uid;const data={call:\"create-checkout-session\",appUrl:getReturnUrl(),email:email,user_id:userId};try{const response=await fetch(url,{method:'POST',// or 'PUT'\nheaders:{'Content-Type':'application/json'},body:JSON.stringify(data)});const session=await response.json();if(response.ok){window.location.href=session.url;}else{console.error(\"error in creating checkout session\");}}catch(error){console.error('Error creating checkout session:',error);}};const checkPayerByEmail=async()=>{// Construct the URL securely\nconst url=getServerIp();let email=user.email;let userId=user.uid;const data={call:\"check-payer-by-email\",email:email,user_id:userId};try{const response=await fetch(url,{method:'POST',// or 'PUT'\nheaders:{'Content-Type':'application/json'},body:JSON.stringify(data)});if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}const result=await response.json();if(result.is_paying==true){userData.paid=\"Yes\";console.log(\"customer is paying\");}else{console.log(\"customer not paying\");handleSubscription();}}catch(error){console.error('Error Check Payer',error);}};const handleUserPaymentStatus=async()=>{console.log(\"handle payment status\");if(!userData){console.log('User data is not available yet.');return;}const lastCheckedTime=localStorage.getItem('lastPaymentCheckTime');const currentTime=new Date().getTime();// Check if it has been less than an hour since the last check\nif('paid'in userData){if(userData.setup==\"Yes\"&&userData.paid==\"Yes\"){if(lastCheckedTime&&currentTime-lastCheckedTime<1){// Fixed time comparison\nconsole.log('Checked less than an hour ago.');return;}}}// Update the last checked time\nlocalStorage.setItem('lastPaymentCheckTime',currentTime);await checkPayerByEmail();// Always check payer status\nawait fetchUserData();// Always refresh user data\n// Check updated payment status and take action\nif(userData.paid===\"No\"){checkPayerByEmail();}};// Add this effect to check payment status whenever user data is fetched or updated\nuseEffect(()=>{if(isSignedIn&&userDataFetched&&userData){if(!userData.setup){// bypass\n}else if(userData.setup==\"Yes\"&&userData.paid==\"Yes\"){handleUserPaymentStatus();}}},[userData]);// React on userData updates\nif(userData){if('paid'in userData){if(userData.setup==\"Yes\"&&userData.paid==\"No\"){console.log(\"handle payment status\");handleUserPaymentStatus();return/*#__PURE__*/_jsx(_Fragment,{});}}}const finishedInitSettings=()=>{handleSubscription();setSettingsDone(true);};if(settingsDone){return;}if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}if(isSignedIn){if(userData&&userData[\"setup\"]===\"No\"&&userDataFetched){if(subUrl==\"\"){(async()=>{const url=await firstSubscription();setSubUrl(url);})();}return/*#__PURE__*/_jsx(SettingsForm,{changeUserDataState:setUserData,userData:userData,finishedInitSettings:finishedInitSettings,subUrl:subUrl});}else if(userData&&userData[\"setup\"]===\"Yes\"&&userDataFetched){return/*#__PURE__*/_jsx(RenderDashboard,{userData:userData,changeUserDataState:setUserData,user:user});}}else{return/*#__PURE__*/_jsx(GoogleLoginButton,{});}}","map":{"version":3,"names":["useState","useEffect","getAuth","onAuthStateChanged","RenderDashboard","getUserData","GoogleLoginButton","SettingsForm","getServerIp","getReturnUrl","get","Fragment","_Fragment","jsx","_jsx","auth","App","props","isSignedIn","setSignIn","user","setUser","userData","setUserData","userDataFetched","setUserDataFetched","loading","setLoading","settingsDone","setSettingsDone","subUrl","setSubUrl","unsubscribe","fetchUserData","then","data","JSON","stringify","catch","error","console","firstSubscription","url","email","userId","uid","call","appUrl","user_id","response","fetch","method","headers","body","session","json","ok","handleSubscription","window","location","href","checkPayerByEmail","Error","concat","status","result","is_paying","paid","log","handleUserPaymentStatus","lastCheckedTime","localStorage","getItem","currentTime","Date","getTime","setup","setItem","finishedInitSettings","children","changeUserDataState"],"sources":["D:/development/AthertonReact/ReactFiles/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\r\nimport './firebase.js';\r\nimport { RenderDashboard } from './dashboard/dashboard.js';\r\nimport { getUserData } from './database/database.js';\r\nimport { GoogleLoginButton } from './setup/login.js';\r\nimport { SettingsForm } from './setup/settings.js';\r\nimport 'normalize.css';\r\nimport { getServerIp, getReturnUrl } from './config.js';\r\nimport { get } from 'firebase/database';\r\n\r\nconst auth = getAuth();\r\n\r\n\r\nexport default function App(props) {\r\n  const [isSignedIn, setSignIn] = useState(null);\r\n  const [user, setUser] = useState(null); \r\n  const [userData, setUserData] = useState(null);\r\n  const [userDataFetched, setUserDataFetched] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [settingsDone, setSettingsDone] = useState(false);\r\n  const [subUrl, setSubUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, user => {\r\n      if (user) {\r\n        setUser(user); \r\n        if (!isSignedIn) { \r\n          setSignIn(true);\r\n        }\r\n      } else {\r\n        setSignIn(false);\r\n      }\r\n      setLoading(false); \r\n    });\r\n\r\n    return () => unsubscribe(); \r\n  }, [isSignedIn]);\r\n\r\n  useEffect(() => {\r\n    if (isSignedIn && !userDataFetched) {\r\n      fetchUserData();\r\n    }\r\n  }, [isSignedIn, userDataFetched]);\r\n\r\n  const fetchUserData = () => {\r\n    getUserData().then(data => {\r\n      if (!(JSON.stringify(userData) === JSON.stringify(data))) {\r\n        setUserData(data);\r\n      }\r\n      setUserDataFetched(true);\r\n    }).catch(error => {\r\n      console.error(\"Failed to get user data:\", error);\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const firstSubscription = async () => {\r\n    // Construct the URL securely\r\n    const url = getServerIp();\r\n    let email = user.email\r\n    let userId = user.uid\r\n    const data = {\r\n      call: \"create-checkout-session\",\r\n      appUrl: getReturnUrl(),\r\n      email: email,\r\n      user_id: userId,\r\n    };\r\n  \r\n    try {\r\n      const response = await fetch(url, {\r\n        method: 'POST', // or 'PUT'\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      const session = await response.json()\r\n  \r\n      if (response.ok) {\r\n        return session.url;\r\n      } else {\r\n        console.error(\"error in creating checkout session\")\r\n      }\r\n  \r\n    } catch (error) {\r\n      console.error('Error creating checkout session:', error);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleSubscription = async () => {\r\n    // Construct the URL securely\r\n    const url = getServerIp();\r\n    let email = user.email\r\n    let userId = user.uid\r\n    const data = {\r\n      call: \"create-checkout-session\",\r\n      appUrl: getReturnUrl(),\r\n      email: email,\r\n      user_id: userId,\r\n    };\r\n  \r\n    try {\r\n      const response = await fetch(url, {\r\n        method: 'POST', // or 'PUT'\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      const session = await response.json()\r\n  \r\n      if (response.ok) {\r\n        window.location.href = session.url;\r\n      } else {\r\n        console.error(\"error in creating checkout session\")\r\n      }\r\n  \r\n    } catch (error) {\r\n      console.error('Error creating checkout session:', error);\r\n    }\r\n};\r\n\r\n\r\n  \r\n  \r\n  const checkPayerByEmail = async () => {\r\n\r\n\r\n    // Construct the URL securely\r\n    const url = getServerIp();\r\n    let email = user.email\r\n    let userId = user.uid\r\n    const data = {\r\n      call: \"check-payer-by-email\",\r\n      email: email,\r\n      user_id: userId,\r\n\r\n    };\r\n  \r\n    try {\r\n      const response = await fetch(url, {\r\n        method: 'POST', // or 'PUT'\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n  \r\n      const result = await response.json();\r\n\r\n      if (result.is_paying == true){\r\n        \r\n        userData.paid = \"Yes\"\r\n        console.log(\"customer is paying\")\r\n      } else {\r\n        console.log(\"customer not paying\")\r\n        handleSubscription()\r\n      }\r\n    } catch (error) {\r\n      console.error('Error Check Payer', error);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n \r\n  \r\n\r\n  \r\n  const handleUserPaymentStatus = async () => {\r\n    console.log(\"handle payment status\")\r\n    if (!userData) {\r\n      console.log('User data is not available yet.');\r\n      return;\r\n    }\r\n  \r\n    const lastCheckedTime = localStorage.getItem('lastPaymentCheckTime');\r\n    const currentTime = new Date().getTime();\r\n  \r\n    // Check if it has been less than an hour since the last check\r\n    if ('paid' in userData) {\r\n      if (userData.setup == \"Yes\" && userData.paid == \"Yes\") {\r\n        if (lastCheckedTime && (currentTime - lastCheckedTime < 1)) {  // Fixed time comparison\r\n          console.log('Checked less than an hour ago.');\r\n          return;\r\n        }\r\n\r\n\r\n      \r\n    }\r\n  }\r\n    \r\n  \r\n    // Update the last checked time\r\n    localStorage.setItem('lastPaymentCheckTime', currentTime);\r\n    await checkPayerByEmail();  // Always check payer status\r\n    await fetchUserData();  // Always refresh user data\r\n  \r\n    // Check updated payment status and take action\r\n    if (userData.paid === \"No\") {\r\n      checkPayerByEmail();\r\n    }\r\n  };\r\n  \r\n  // Add this effect to check payment status whenever user data is fetched or updated\r\n  useEffect(() => {\r\n    if (isSignedIn && userDataFetched && userData) {\r\n      if (!userData.setup){\r\n        // bypass\r\n      } else if (userData.setup == \"Yes\" && userData.paid == \"Yes\"){\r\n        handleUserPaymentStatus();\r\n      }\r\n    \r\n    }\r\n  }, [userData]);  // React on userData updates\r\n  \r\n\r\n  if (userData) {\r\n      if ('paid' in userData) {\r\n        if (userData.setup == \"Yes\" && userData.paid == \"No\") {\r\n        console.log(\"handle payment status\")\r\n        handleUserPaymentStatus();\r\n\r\n\r\n        return <></>\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\nconst finishedInitSettings = () => {\r\n  handleSubscription()\r\n  setSettingsDone(true)\r\n}\r\n\r\n\r\nif (settingsDone){\r\n  return;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  if (isSignedIn) {\r\n    if (userData && userData[\"setup\"] === \"No\" && userDataFetched) {\r\n      if (subUrl == \"\"){\r\n        (async () => {\r\n            const url = await firstSubscription();\r\n            setSubUrl(url);\r\n        })();\r\n    }\r\n\r\n      return <SettingsForm changeUserDataState={setUserData} userData={userData} finishedInitSettings={finishedInitSettings} subUrl={subUrl}/>;\r\n    } else if (userData && userData[\"setup\"] === \"Yes\" && userDataFetched) {\r\n      \r\n      return <RenderDashboard userData={userData} changeUserDataState={setUserData} user={user}/>;\r\n    }\r\n  } else {\r\n    return <GoogleLoginButton />;\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}