{"ast":null,"code":"var _jsxFileName = \"D:\\\\development\\\\AthertonReact\\\\ReactFiles\\\\src\\\\dashboard\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { DashboardFrame } from './dashboard_frame';\nimport { ClientManager } from './subApps/cm/cm.js';\nimport { DirectMessage } from './subApps/dm.js';\nimport { AppointmentManager } from './subApps/am.js';\nimport { GroupManager } from './subApps/gm.js';\nimport { SettingsForm } from '../setup/settings.js';\nimport { getUserData } from '../database/database.js';\n\n/* KEY: 1 = Cleint Manager, 2 = Direct Message, 3 = Appointment Manager, 4 = Group Manager */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function RenderDashboard(props) {\n  _s();\n  const [currentPage, setPage] = useState(0);\n  function handleNavButtonClick(i) {\n    setPage(i);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DashboardFrame, {\n      userData: props.userData,\n      displayNum: currentPage,\n      navButtonClicked: i => handleNavButtonClick(i),\n      children: /*#__PURE__*/_jsxDEV(DirectContent, {\n        user: props.user,\n        userData: props.userData,\n        currentPage: currentPage,\n        changeUserDataState: props.changeUserDataState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(RenderDashboard, \"DnCQEVyM6evSB1+z3g4NIbaGQ9o=\");\n_c = RenderDashboard;\nfunction DirectContent(props) {\n  const handleSubscription = async () => {\n    const response = await fetch('http://127.0.0.1:4242/create-checkout-session', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: props.user.email,\n        user_id: props.user.uid\n      })\n    });\n    const session = await response.json();\n    if (response.ok) {\n      window.location.href = session.url;\n    } else {\n      console.error('Failed to create checkout session:', session);\n    }\n  };\n  const checkSubscription = async () => {\n    // Check if session_id is available in the props\n    if (!props.userData.paymentData.session_id) {\n      alert('Session ID is required');\n      return; // Exit the function if session_id is not available\n    }\n\n    // Extract DBuserid and sessionId from props\n    let DBuserid = props.user.uid; // User ID from props\n    let sessionId = props.userData.paymentData.session_id;\n    try {\n      // Construct the URL with both DBuserid and sessionId\n      const url = `http://localhost:4242/check-subscription-status?DBuserid=${DBuserid}&session_id=${sessionId}`;\n      const response = await fetch(url);\n      const data = await response.json();\n\n      // Check the response and display appropriate alert\n      if (response.ok) {\n        alert(data.message);\n      } else {\n        alert(data.error || 'Error occurred while checking subscription status');\n      }\n    } catch (error) {\n      console.error('Failed to fetch subscription status:', error);\n      alert('Failed to communicate with the server');\n    }\n  };\n  const checkClientSubscription = async () => {\n    // Check if session_id is available in the props\n    if (!props.userData.paymentData.client_id) {\n      alert('Client ID is required');\n      return; // Exit the function if session_id is not available\n    }\n\n    // Extract DBuserid and sessionId from props\n    let DBuserid = props.user.uid; // User ID from props\n    let clientid = props.userData.paymentData.client_id;\n    try {\n      // Construct the URL with query parameters\n      const url = `http://localhost:4242/check-client-subscription?clientid=${clientid}&DBuserid=${DBuserid}`;\n      const response = await fetch(url);\n      const data = await response.json();\n\n      // Handle the server response\n      if (response.ok) {\n        alert(data.message);\n        console.log('Subscription status:', data.active ? 'Active' : 'Not Active');\n      } else {\n        alert(data.error || 'Error occurred while checking client subscription');\n      }\n    } catch (error) {\n      console.error('Failed to fetch client subscription status:', error);\n      alert('Failed to communicate with the server');\n    }\n  };\n  if (props.currentPage == 1) {\n    return /*#__PURE__*/_jsxDEV(ClientManager, {\n      userData: props.userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 12\n    }, this);\n  } else if (props.currentPage == 2) {\n    return /*#__PURE__*/_jsxDEV(DirectMessage, {\n      userData: props.userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 12\n    }, this);\n  } else if (props.currentPage == 3) {\n    return /*#__PURE__*/_jsxDEV(AppointmentManager, {\n      userData: props.userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 12\n    }, this);\n  } else if (props.currentPage == 4) {\n    return /*#__PURE__*/_jsxDEV(GroupManager, {\n      userData: props.userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 12\n    }, this);\n  } else if (props.currentPage == 5) {\n    return /*#__PURE__*/_jsxDEV(SettingsForm, {\n      userData: props.userData,\n      changeUserDataState: props.changeUserDataState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubscription,\n        children: \"Checkout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkSubscription,\n        children: \"Test Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkClientSubscription,\n        children: \"Test Subscription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  }\n}\n_c2 = DirectContent;\nvar _c, _c2;\n$RefreshReg$(_c, \"RenderDashboard\");\n$RefreshReg$(_c2, \"DirectContent\");","map":{"version":3,"names":["useState","DashboardFrame","ClientManager","DirectMessage","AppointmentManager","GroupManager","SettingsForm","getUserData","jsxDEV","_jsxDEV","Fragment","_Fragment","RenderDashboard","props","_s","currentPage","setPage","handleNavButtonClick","i","children","userData","displayNum","navButtonClicked","DirectContent","user","changeUserDataState","fileName","_jsxFileName","lineNumber","columnNumber","_c","handleSubscription","response","fetch","method","headers","body","JSON","stringify","email","user_id","uid","session","json","ok","window","location","href","url","console","error","checkSubscription","paymentData","session_id","alert","DBuserid","sessionId","data","message","checkClientSubscription","client_id","clientid","log","active","onClick","_c2","$RefreshReg$"],"sources":["D:/development/AthertonReact/ReactFiles/src/dashboard/dashboard.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { DashboardFrame } from './dashboard_frame';\r\nimport { ClientManager } from './subApps/cm/cm.js'\r\nimport { DirectMessage } from './subApps/dm.js'\r\nimport { AppointmentManager } from './subApps/am.js'\r\nimport { GroupManager } from './subApps/gm.js'\r\nimport { SettingsForm } from '../setup/settings.js';\r\nimport { getUserData } from '../database/database.js';\r\n\r\n\r\n\r\n/* KEY: 1 = Cleint Manager, 2 = Direct Message, 3 = Appointment Manager, 4 = Group Manager */\r\n\r\nexport function RenderDashboard(props){\r\n    const [currentPage, setPage] = useState(0)\r\n    function handleNavButtonClick(i){\r\n      setPage(i)\r\n    }\r\n\r\n\r\n    return (\r\n  \r\n      <>\r\n      \r\n        <DashboardFrame userData={props.userData} displayNum={currentPage} navButtonClicked={(i) => handleNavButtonClick(i)}>\r\n          <DirectContent user={props.user} userData={props.userData} currentPage={currentPage} changeUserDataState={props.changeUserDataState}/>\r\n        </DashboardFrame>\r\n  \r\n      </>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction DirectContent(props){\r\n\r\n  const handleSubscription = async () => {\r\n    const response = await fetch('http://127.0.0.1:4242/create-checkout-session', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email: props.user.email, user_id: props.user.uid })\r\n    });\r\n    const session = await response.json();\r\n    if (response.ok) {\r\n        window.location.href = session.url;\r\n    } else {\r\n        console.error('Failed to create checkout session:', session);\r\n    }\r\n};\r\n\r\nconst checkSubscription = async () => {\r\n  // Check if session_id is available in the props\r\n  if (!props.userData.paymentData.session_id) {\r\n    alert('Session ID is required');\r\n    return; // Exit the function if session_id is not available\r\n  }\r\n\r\n  // Extract DBuserid and sessionId from props\r\n  let DBuserid = props.user.uid;  // User ID from props\r\n  let sessionId = props.userData.paymentData.session_id;\r\n\r\n  try {\r\n    // Construct the URL with both DBuserid and sessionId\r\n    const url = `http://localhost:4242/check-subscription-status?DBuserid=${DBuserid}&session_id=${sessionId}`;\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    // Check the response and display appropriate alert\r\n    if (response.ok) {\r\n      alert(data.message);\r\n    } else {\r\n      alert(data.error || 'Error occurred while checking subscription status');\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to fetch subscription status:', error);\r\n    alert('Failed to communicate with the server');\r\n  }\r\n};\r\n\r\n\r\nconst checkClientSubscription = async () => {\r\n    // Check if session_id is available in the props\r\n    if (!props.userData.paymentData.client_id) {\r\n      alert('Client ID is required');\r\n      return; // Exit the function if session_id is not available\r\n    }\r\n  \r\n    // Extract DBuserid and sessionId from props\r\n    let DBuserid = props.user.uid;  // User ID from props\r\n    let clientid = props.userData.paymentData.client_id;\r\n\r\n  try {\r\n    // Construct the URL with query parameters\r\n    const url = `http://localhost:4242/check-client-subscription?clientid=${clientid}&DBuserid=${DBuserid}`;\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    // Handle the server response\r\n    if (response.ok) {\r\n      alert(data.message);\r\n      console.log('Subscription status:', data.active ? 'Active' : 'Not Active');\r\n    } else {\r\n      alert(data.error || 'Error occurred while checking client subscription');\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to fetch client subscription status:', error);\r\n    alert('Failed to communicate with the server');\r\n  }\r\n};\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  if (props.currentPage == 1){\r\n    return <ClientManager userData={props.userData}></ClientManager>\r\n  } else if (props.currentPage == 2){\r\n    return <DirectMessage userData={props.userData}></DirectMessage>\r\n  } else if (props.currentPage == 3){\r\n    return <AppointmentManager userData={props.userData}></AppointmentManager>\r\n  } else if (props.currentPage == 4){\r\n    return <GroupManager userData={props.userData}></GroupManager>\r\n  } else if (props.currentPage == 5){\r\n    return <SettingsForm userData={props.userData} changeUserDataState={props.changeUserDataState}></SettingsForm>\r\n  } else {\r\n    return <>\r\n  \r\n    <button onClick={handleSubscription}>Checkout</button>\r\n    <button onClick={checkSubscription}>Test Session</button>\r\n    <button onClick={checkClientSubscription}>Test Subscription</button>\r\n  </>\r\n  }\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}