{"ast":null,"code":"import React,{useState,useEffect}from'react';import\"../../cssFiles/cm.css\";import\"../../cssFiles/gm.css\";import{setData,getUserData}from\"../../database/database\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function GroupManager(props){const[showAddGroup,setShowAddGroup]=useState(false);const[userData,setUserData]=useState({...props.userData,groupData:props.userData.groupData||[]});const[editIndex,setEditIndex]=useState(null);const[editValue,setEditValue]=useState('');useEffect(()=>{getUserData().then(data=>setUserData(data));},[]);const handleConfirm=()=>{if(editIndex!=null){const updatedGroups=[...userData.groupData];const actualIndex=editIndex;//updatedGroups.length - 1 - editIndex;\nupdatedGroups[actualIndex]=editValue;const updatedUserData={...userData,groupData:updatedGroups};setData(updatedUserData).then(()=>{getUserData().then(data=>{setUserData(data);setEditIndex(null);setEditValue('');});});}};const toggleAddGroup=()=>{if(editIndex!=null){handleConfirm();}setShowAddGroup(!showAddGroup);};const addGroupToUserData=groupName=>{const updatedGroupData=[...(userData.groupData||[]),groupName];const updatedUserData={...userData,groupData:updatedGroupData};setData(updatedUserData).then(()=>{getUserData().then(data=>setUserData(data));});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(GMHeader,{toggleAddGroup:toggleAddGroup}),showAddGroup&&/*#__PURE__*/_jsx(GMAddGroup,{toggleAddGroup:toggleAddGroup,addGroupToUserData:addGroupToUserData}),/*#__PURE__*/_jsx(GroupsList,{userData:userData,setUserData:setUserData,editIndex:editIndex,setEditIndex:setEditIndex,editValue:editValue,setEditValue:setEditValue,handleConfirm:handleConfirm})]});}function GMAddGroup(_ref){let{toggleAddGroup,addGroupToUserData}=_ref;const[groupName,setGroupName]=useState('');const handleConfirm=()=>{console.log('Group Name:',groupName);addGroupToUserData(groupName);toggleAddGroup();};return/*#__PURE__*/_jsxs(\"div\",{className:\"addGroupBlock\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"groupName\",placeholder:\"Group Name\",value:groupName,onChange:e=>setGroupName(e.target.value),onKeyPress:e=>e.key==='Enter'&&handleConfirm(),id:\"addGroupInput\",autoFocus:true}),/*#__PURE__*/_jsx(\"button\",{onClick:handleConfirm,id:\"addGroupConfirm\",children:\"Confirm\"})]});}function GMHeader(_ref2){let{toggleAddGroup}=_ref2;return/*#__PURE__*/_jsx(\"div\",{className:\"cm-top-headers\",children:/*#__PURE__*/_jsx(\"div\",{id:\"cm-toggle-add-client\",className:\"no-select\",onClick:toggleAddGroup,children:\"Add Group\"})});}function GroupsList(_ref3){let{userData,setUserData,editIndex,setEditIndex,editValue,setEditValue,handleConfirm}=_ref3;const groupData=userData.groupData||[];const handleEdit=(index,groupName)=>{setEditIndex(groupData.length-1-index);setEditValue(groupName);};const handleDelete=index=>{if(Array.isArray(userData.clientData)){for(let i=0;i<userData.clientData.length;i++){const client=userData.clientData[i];if(Array.isArray(client.groups)){const updatedGroups=[];for(let j=0;j<client.groups.length;j++){const groupIndex=client.groups[j];if(groupIndex!==index){updatedGroups.push(groupIndex>index?groupIndex-1:groupIndex);}}userData.clientData[i].groups=updatedGroups;}}}const actualIndex=groupData.length-1-index;const updatedGroupData=groupData.filter((_,i)=>i!==actualIndex);const updatedUserData={...userData,groupData:updatedGroupData};setData(updatedUserData).then(()=>{setUserData(updatedUserData);setEditIndex(null);setEditValue('');});};return/*#__PURE__*/_jsx(_Fragment,{children:[...groupData].reverse().map((group,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"groupItem\",children:editIndex===groupData.length-1-index?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{id:\"groupEditInput-\".concat(index),className:\"groupEditInput\",style:{display:'block'},value:editValue,onChange:e=>setEditValue(e.target.value),onKeyPress:e=>e.key==='Enter'&&handleConfirm(),autoFocus:true}),/*#__PURE__*/_jsx(\"button\",{style:{display:'block'},onClick:handleConfirm,className:\"groupEdit\",children:\"Confirm\"}),/*#__PURE__*/_jsx(\"button\",{style:{display:'block'},onClick:()=>handleDelete(index),className:\"groupDelete\",children:\"Delete\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"groupNameDisplay\",children:group}),/*#__PURE__*/_jsx(\"button\",{className:\"groupEdit\",onClick:()=>handleEdit(index,group),children:\"Edit\"})]})},index))});}","map":{"version":3,"names":["React","useState","useEffect","setData","getUserData","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","GroupManager","props","showAddGroup","setShowAddGroup","userData","setUserData","groupData","editIndex","setEditIndex","editValue","setEditValue","then","data","handleConfirm","updatedGroups","actualIndex","updatedUserData","toggleAddGroup","addGroupToUserData","groupName","updatedGroupData","children","GMHeader","GMAddGroup","GroupsList","_ref","setGroupName","console","log","className","type","placeholder","value","onChange","e","target","onKeyPress","key","id","autoFocus","onClick","_ref2","_ref3","handleEdit","index","length","handleDelete","Array","isArray","clientData","i","client","groups","j","groupIndex","push","filter","_","reverse","map","group","concat","style","display"],"sources":["/Users/jscarbrough/Desktop/AthertonReact/src/dashboard/subApps/gm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"../../cssFiles/cm.css\";\nimport \"../../cssFiles/gm.css\";\nimport { setData, getUserData } from \"../../database/database\";\n\nexport function GroupManager(props) {\n    const [showAddGroup, setShowAddGroup] = useState(false);\n    const [userData, setUserData] = useState({ ...props.userData, groupData: props.userData.groupData || [] });\n    const [editIndex, setEditIndex] = useState(null);\n    const [editValue, setEditValue] = useState('');\n\n    useEffect(() => {\n        getUserData().then(data => setUserData(data));\n    }, []);\n\n    const handleConfirm = () => {\n        if (editIndex != null) {\n            const updatedGroups = [...userData.groupData];\n            const actualIndex = editIndex//updatedGroups.length - 1 - editIndex;\n            updatedGroups[actualIndex] = editValue;\n            const updatedUserData = { ...userData, groupData: updatedGroups };\n            setData(updatedUserData).then(() => {\n                getUserData().then(data => {\n                    setUserData(data);\n                    setEditIndex(null);\n                    setEditValue('');\n                });\n            });\n        }\n    };\n\n    const toggleAddGroup = () => {\n        if (editIndex != null) {\n            handleConfirm();\n        }\n        setShowAddGroup(!showAddGroup);\n    };\n\n    const addGroupToUserData = (groupName) => {\n        const updatedGroupData = [...(userData.groupData || []), groupName];\n        const updatedUserData = { ...userData, groupData: updatedGroupData };\n        setData(updatedUserData).then(() => {\n            getUserData().then(data => setUserData(data));\n        });\n    };\n\n    return (\n        <>\n            <GMHeader toggleAddGroup={toggleAddGroup} />\n            {showAddGroup && <GMAddGroup toggleAddGroup={toggleAddGroup} addGroupToUserData={addGroupToUserData} />}\n            <GroupsList\n                userData={userData}\n                setUserData={setUserData}\n                editIndex={editIndex}\n                setEditIndex={setEditIndex}\n                editValue={editValue}\n                setEditValue={setEditValue}\n                handleConfirm={handleConfirm}\n            />\n        </>\n    );\n}\n\nfunction GMAddGroup({ toggleAddGroup, addGroupToUserData }) {\n    const [groupName, setGroupName] = useState('');\n\n    const handleConfirm = () => {\n        console.log('Group Name:', groupName);\n        addGroupToUserData(groupName);\n        toggleAddGroup();\n    };\n\n    return (\n        <div className=\"addGroupBlock\">\n            <input\n                type=\"text\"\n                className=\"groupName\"\n                placeholder=\"Group Name\"\n                value={groupName}\n                onChange={(e) => setGroupName(e.target.value)}\n                onKeyPress={(e) => e.key === 'Enter' && handleConfirm()}\n                id=\"addGroupInput\"\n                autoFocus\n            />\n\n            <button onClick={handleConfirm} id=\"addGroupConfirm\">Confirm</button>\n        </div>\n    );\n}\n\nfunction GMHeader({ toggleAddGroup }) {\n    return (\n        <div className=\"cm-top-headers\">\n            <div id=\"cm-toggle-add-client\" className='no-select' onClick={toggleAddGroup}>Add Group</div>\n        </div>\n    );\n}\n\nfunction GroupsList({ userData, setUserData, editIndex, setEditIndex, editValue, setEditValue, handleConfirm }) {\n    const groupData = userData.groupData || [];\n\n    const handleEdit = (index, groupName) => {\n        setEditIndex(groupData.length - 1 - index);\n        setEditValue(groupName);\n    };\n\n    const handleDelete = (index) => {\n        if (Array.isArray(userData.clientData)) {\n            for (let i = 0; i < userData.clientData.length; i++) {\n                const client = userData.clientData[i];\n                if (Array.isArray(client.groups)) {\n                    const updatedGroups = [];\n\n                    for (let j = 0; j < client.groups.length; j++) {\n                        const groupIndex = client.groups[j];\n                        if (groupIndex !== index) {\n                            updatedGroups.push(groupIndex > index ? groupIndex - 1 : groupIndex);\n                        }\n                    }\n\n                    userData.clientData[i].groups = updatedGroups;\n                }\n            }\n        }\n\n        const actualIndex = groupData.length - 1 - index;\n        const updatedGroupData = groupData.filter((_, i) => i !== actualIndex);\n\n        const updatedUserData = { ...userData, groupData: updatedGroupData };\n        setData(updatedUserData).then(() => {\n            setUserData(updatedUserData);\n            setEditIndex(null);\n            setEditValue('');\n        });\n    };\n\n    return (\n        <>\n            {[...groupData].reverse().map((group, index) => (\n                <div key={index} className=\"groupItem\">\n                    {editIndex === groupData.length - 1 - index ? (\n                        <>\n                            <input\n                                id={`groupEditInput-${index}`}\n                                className=\"groupEditInput\"\n                                style={{ display: 'block' }}\n                                value={editValue}\n                                onChange={(e) => setEditValue(e.target.value)}\n                                onKeyPress={(e) => e.key === 'Enter' && handleConfirm()}\n                                autoFocus\n                            />\n                            <button style={{ display: 'block' }} onClick={handleConfirm} className=\"groupEdit\">Confirm</button>\n                            <button style={{ display: 'block' }} onClick={() => handleDelete(index)} className=\"groupDelete\">Delete</button>\n                        </>\n                    ) : (\n                        <>\n                            <h1 className='groupNameDisplay'>{group}</h1>\n                            <button className=\"groupEdit\" onClick={() => handleEdit(index, group)}>Edit</button>\n                        </>\n                    )}\n                </div>\n            ))}\n        </>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}