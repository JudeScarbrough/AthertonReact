{"ast":null,"code":"var _jsxFileName = \"D:\\\\development\\\\AthertonReact\\\\ReactFiles\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport './firebase.js';\nimport { RenderDashboard } from './dashboard/dashboard.js';\nimport { getUserData } from './database/database.js';\nimport { GoogleLoginButton } from './setup/login.js';\nimport { SettingsForm } from './setup/settings.js';\nimport 'normalize.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst auth = getAuth();\nexport default function App() {\n  _s();\n  const [isSignedIn, setSignIn] = useState(null);\n  const [user, setUser] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [userDataFetched, setUserDataFetched] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n        if (!isSignedIn) {\n          setSignIn(true);\n        }\n      } else {\n        setSignIn(false);\n      }\n      setLoading(false);\n    });\n    return () => unsubscribe();\n  }, [isSignedIn]);\n  const changeUserDataState = newState => {\n    setUserData(newState);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  if (isSignedIn) {\n    if (!userDataFetched) {\n      getUserData().then(data => {\n        if (!(JSON.stringify(userData) === JSON.stringify(data))) {\n          setUserData(data);\n        }\n        setUserDataFetched(true);\n      }).catch(error => {\n        console.error(\"Failed to get user data:\", error);\n      });\n    }\n    const handleSubscription = async () => {\n      const response = await fetch('http://127.0.0.1:4242/create-checkout-session', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: props.user.email,\n          user_id: props.user.uid\n        })\n      });\n      const session = await response.json();\n      if (response.ok) {\n        window.location.href = session.url;\n      } else {\n        console.error('Failed to create checkout session:', session);\n      }\n    };\n    const checkPayerByEmail = async () => {\n      let email = props.user.email;\n      let userId = props.user.uid;\n      if (!email || !userId) {\n        console.log('Email and User ID are required');\n        return;\n      }\n      try {\n        const url = `http://localhost:4242/check-payer-by-email?email=${encodeURIComponent(email)}&user_id=${userId}`;\n        const response = await fetch(url);\n        const data = await response.json();\n        if (response.ok) {\n          if (data.is_paying) {\n            console.log('Paid user');\n          } else {\n            console.log('Unpaid user');\n          }\n        } else {\n          console.error(data.error || 'Error occurred while checking payer status');\n        }\n      } catch (error) {\n        console.error('Failed to fetch payer status:', error);\n      }\n    };\n    if (props.userData.paid == \"No\") {\n\n      // if it equals No then I want to call checkPayerByEmail() and then re get the user data from the database because sometimes paid will change to yes\n      // if it doesnt change to yes then call handleSubscription()\n    } else {\n      checkPayerByEmail();\n    }\n    if (userData && userData[\"setup\"] === \"No\" && userDataFetched) {\n      return /*#__PURE__*/_jsxDEV(SettingsForm, {\n        changeUserDataState: changeUserDataState,\n        userData: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 14\n      }, this);\n    } else if (userData && userData[\"setup\"] === \"Yes\" && userDataFetched) {\n      return /*#__PURE__*/_jsxDEV(RenderDashboard, {\n        userData: userData,\n        changeUserDataState: changeUserDataState,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 14\n      }, this);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(GoogleLoginButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 12\n    }, this);\n  }\n}\n_s(App, \"X+c8PYHAwj3sjhMhejeECoMkx58=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","getAuth","onAuthStateChanged","RenderDashboard","getUserData","GoogleLoginButton","SettingsForm","jsxDEV","_jsxDEV","auth","App","_s","isSignedIn","setSignIn","user","setUser","userData","setUserData","userDataFetched","setUserDataFetched","loading","setLoading","unsubscribe","changeUserDataState","newState","children","fileName","_jsxFileName","lineNumber","columnNumber","then","data","JSON","stringify","catch","error","console","handleSubscription","response","fetch","method","headers","body","email","props","user_id","uid","session","json","ok","window","location","href","url","checkPayerByEmail","userId","log","encodeURIComponent","is_paying","paid","_c","$RefreshReg$"],"sources":["D:/development/AthertonReact/ReactFiles/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\r\nimport './firebase.js';\r\nimport { RenderDashboard } from './dashboard/dashboard.js';\r\nimport { getUserData } from './database/database.js';\r\nimport { GoogleLoginButton } from './setup/login.js';\r\nimport { SettingsForm } from './setup/settings.js';\r\nimport 'normalize.css';\r\n\r\nconst auth = getAuth();\r\nexport default function App() {\r\n  const [isSignedIn, setSignIn] = useState(null);\r\n  const [user, setUser] = useState(null); \r\n  const [userData, setUserData] = useState(null);\r\n  const [userDataFetched, setUserDataFetched] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, user => {\r\n      if (user) {\r\n        setUser(user); \r\n        if (!isSignedIn) { \r\n          setSignIn(true);\r\n        }\r\n      } else {\r\n        setSignIn(false);\r\n      }\r\n      setLoading(false); \r\n    });\r\n\r\n    return () => unsubscribe(); \r\n  }, [isSignedIn]);\r\n\r\n  const changeUserDataState = (newState) => {\r\n    setUserData(newState);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (isSignedIn) {\r\n    if (!userDataFetched) {\r\n      getUserData().then(data => {\r\n        if (!(JSON.stringify(userData) === JSON.stringify(data))) {\r\n          setUserData(data);\r\n        }\r\n        setUserDataFetched(true);\r\n      }).catch(error => {console.error(\"Failed to get user data:\", error)});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubscription = async () => {\r\n      const response = await fetch('http://127.0.0.1:4242/create-checkout-session', {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ email: props.user.email, user_id: props.user.uid })\r\n      });\r\n      const session = await response.json();\r\n      if (response.ok) {\r\n          window.location.href = session.url;\r\n      } else {\r\n          console.error('Failed to create checkout session:', session);\r\n      }\r\n  };\r\n  \r\n  \r\n  const checkPayerByEmail = async () => {\r\n  \r\n    let email = props.user.email\r\n    let userId = props.user.uid\r\n  \r\n    if (!email || !userId) {\r\n      console.log('Email and User ID are required');\r\n      return; \r\n    }\r\n  \r\n    try {\r\n\r\n      const url = `http://localhost:4242/check-payer-by-email?email=${encodeURIComponent(email)}&user_id=${userId}`;\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n  \r\n      \r\n      if (response.ok) {\r\n        if (data.is_paying) {\r\n          console.log('Paid user');\r\n        } else {\r\n          console.log('Unpaid user');\r\n        }\r\n      } else {\r\n        console.error(data.error || 'Error occurred while checking payer status');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch payer status:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  \r\n    if (props.userData.paid == \"No\"){\r\n\r\n      // if it equals No then I want to call checkPayerByEmail() and then re get the user data from the database because sometimes paid will change to yes\r\n      // if it doesnt change to yes then call handleSubscription()\r\n\r\n    } else {\r\n      checkPayerByEmail()\r\n    }\r\n  \r\n\r\n\r\n\r\n    if (userData && userData[\"setup\"] === \"No\" && userDataFetched) {\r\n      return <SettingsForm changeUserDataState={changeUserDataState} userData={userData}></SettingsForm>;\r\n    } else if (userData && userData[\"setup\"] === \"Yes\" && userDataFetched) {\r\n      return <RenderDashboard userData={userData} changeUserDataState={changeUserDataState} user={user}></RenderDashboard>;\r\n    }\r\n  } else {\r\n    return <GoogleLoginButton></GoogleLoginButton>;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}