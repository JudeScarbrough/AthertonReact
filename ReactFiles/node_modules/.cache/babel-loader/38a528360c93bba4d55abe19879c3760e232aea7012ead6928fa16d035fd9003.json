{"ast":null,"code":"var _jsxFileName = \"/Users/jscarbrough/Desktop/AthertonReact/ReactFiles/src/dashboard/subApps/cm/addUser.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport searchIcon from '../../../images/search.png';\nimport React, { useState, useEffect } from 'react';\nimport { setData } from '../../../database/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function AddUser(props) {\n  _s();\n  const [showAddClient, setShowAddClient] = useState(false);\n  var groupNames = props.userData.groupData;\n  var userData = props.userData;\n  const toggleAddClient = () => {\n    setShowAddClient(!showAddClient);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CMHeader, {\n      toggleAddClient: toggleAddClient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), showAddClient && /*#__PURE__*/_jsxDEV(CMAddClient, {\n      groupNames: groupNames,\n      userData: userData,\n      toggleAddClient: toggleAddClient,\n      updateUserData: props.updateUserData,\n      forceCloseEdit: props.forceCloseEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true);\n}\n_s(AddUser, \"v+mLOmdh2XfKyVnU7qWSrETqayg=\");\n_c = AddUser;\nfunction CMAddClient({\n  groupNames,\n  userData,\n  toggleAddClient,\n  updateUserData,\n  forceCloseEdit\n}) {\n  _s2();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [showGroupPopup, setShowGroupPopup] = useState(false);\n  const [selectedGroupIndexes, setSelectedGroupIndexes] = useState([]);\n  const now = new Date();\n  let initialHour = now.getHours();\n  const initialMinute = now.getMinutes();\n  const initialAmpm = initialHour >= 12 ? 'PM' : 'AM';\n  initialHour = initialHour % 12 || 12;\n  const [date, setDate] = useState({\n    day: now.getDate(),\n    month: now.getMonth() + 1,\n    year: now.getFullYear(),\n    hour: initialHour,\n    minute: initialMinute < 10 ? `0${initialMinute}` : initialMinute,\n    ampm: initialAmpm\n  });\n  const isValidPhoneNumber = phone => /^[0-9]{10}$/.test(phone);\n  const handleGroupChange = index => {\n    setSelectedGroupIndexes(prevSelectedIndexes => {\n      if (prevSelectedIndexes.includes(index)) {\n        return prevSelectedIndexes.filter(i => i !== index);\n      } else {\n        return [...prevSelectedIndexes, index];\n      }\n    });\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setDate(prevDate => ({\n      ...prevDate,\n      [name]: value\n    }));\n  };\n  const validateAndAddClient = () => {\n    if (!firstName || !lastName || !isValidPhoneNumber(phoneNumber)) {\n      alert(\"Please fill all the fields correctly.\");\n      return;\n    }\n    if (!userData.clientData) {\n      userData.clientData = [];\n    }\n    let adjustedHour = date.hour;\n    if (date.ampm === 'PM' && date.hour !== 12) {\n      adjustedHour = parseInt(date.hour) + 12;\n    } else if (date.ampm === 'AM' && date.hour === 12) {\n      adjustedHour = 0;\n    }\n    const appointmentDate = new Date(date.year, date.month - 1, date.day, adjustedHour, date.minute);\n    const unixTimestamp = Math.floor(appointmentDate.getTime() / 1000);\n    const newClient = {\n      firstName,\n      lastName,\n      phoneNumber,\n      date: unixTimestamp,\n      groups: selectedGroupIndexes\n    };\n    userData.clientData = userData.clientData || [];\n    const updatedClientData = [newClient, ...userData.clientData];\n    userData.clientData = updatedClientData;\n    updateUserData(userData);\n    toggleAddClient();\n    forceCloseEdit();\n  };\n  const renderGroupPopup = (groupNames1 = []) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-popup\",\n    style: {\n      position: 'absolute',\n      zIndex: 10,\n      background: 'white',\n      padding: '20px',\n      border: '1px solid black'\n    },\n    children: [groupNames1.length > 0 ? groupNames1.map((groupName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: `group-${index}`,\n        value: index,\n        checked: selectedGroupIndexes.includes(index),\n        onChange: () => handleGroupChange(index),\n        className: \"popupCheckbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"checkboxLabel\",\n        htmlFor: `group-${index}`,\n        children: groupName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create a group in the Group Manager Tab\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowGroupPopup(false),\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userblock\",\n      id: \"addClientBlock\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"editInputs\",\n        placeholder: \"First Name\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"lastName\",\n        placeholder: \"Last Name\",\n        value: lastName,\n        onChange: e => setLastName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"phoneNumber\",\n        placeholder: \"Phone Number\",\n        value: phoneNumber,\n        onChange: e => setPhoneNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"appointment-date-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"appointment-date-label\",\n          children: \"Appointment Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-selectors\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"day\",\n            value: date.day,\n            onChange: handleChange,\n            children: [...Array(31).keys()].map(day => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: day + 1,\n              children: day + 1\n            }, day, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-separator\",\n            children: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"month\",\n            value: date.month,\n            onChange: handleChange,\n            children: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'].map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: index + 1,\n              children: month\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-separator\",\n            children: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"year\",\n            type: \"text\",\n            className: \"yearSelector\",\n            placeholder: \"Year\",\n            value: date.year,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-selectors\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"hour\",\n            value: date.hour,\n            onChange: handleChange,\n            children: [...Array(12).keys()].map(hour => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: hour + 1,\n              children: hour + 1\n            }, hour, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-separator\",\n            children: \":\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"minute\",\n            value: date.minute,\n            onChange: handleChange,\n            children: [...Array(60).keys()].map(minute => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: minute < 10 ? `0${minute}` : minute,\n              children: minute < 10 ? `0${minute}` : minute\n            }, minute, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"ampm\",\n            value: date.ampm,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"AM\",\n              children: \"AM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"PM\",\n              children: \"PM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"groupcontainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addgroup\",\n          onClick: () => setShowGroupPopup(true),\n          children: selectedGroupIndexes.length > 0 ? 'Edit Groups' : 'Add Group'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), selectedGroupIndexes.map(index => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"groupblock\",\n          children: groupNames[index]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"addClient\",\n        onClick: validateAndAddClient,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), showGroupPopup && renderGroupPopup(groupNames), showGroupPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dim-background\",\n      onClick: () => setShowGroupPopup(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true);\n}\n_s2(CMAddClient, \"CZaFhAhzHHSO7fE5uc6kfcWYUs4=\");\n_c2 = CMAddClient;\nfunction CMHeader(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cm-top-headers\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"cm-toggle-add-client\",\n        className: \"no-select\",\n        onClick: props.toggleAddClient,\n        children: \"Add Client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c3 = CMHeader;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AddUser\");\n$RefreshReg$(_c2, \"CMAddClient\");\n$RefreshReg$(_c3, \"CMHeader\");","map":{"version":3,"names":["searchIcon","React","useState","useEffect","setData","jsxDEV","_jsxDEV","Fragment","_Fragment","AddUser","props","_s","showAddClient","setShowAddClient","groupNames","userData","groupData","toggleAddClient","children","CMHeader","fileName","_jsxFileName","lineNumber","columnNumber","CMAddClient","updateUserData","forceCloseEdit","_c","_s2","firstName","setFirstName","lastName","setLastName","phoneNumber","setPhoneNumber","showGroupPopup","setShowGroupPopup","selectedGroupIndexes","setSelectedGroupIndexes","now","Date","initialHour","getHours","initialMinute","getMinutes","initialAmpm","date","setDate","day","getDate","month","getMonth","year","getFullYear","hour","minute","ampm","isValidPhoneNumber","phone","test","handleGroupChange","index","prevSelectedIndexes","includes","filter","i","handleChange","e","name","value","target","prevDate","validateAndAddClient","alert","clientData","adjustedHour","parseInt","appointmentDate","unixTimestamp","Math","floor","getTime","newClient","groups","updatedClientData","renderGroupPopup","groupNames1","className","style","position","zIndex","background","padding","border","length","map","groupName","type","id","checked","onChange","htmlFor","onClick","placeholder","Array","keys","_c2","_c3","$RefreshReg$"],"sources":["/Users/jscarbrough/Desktop/AthertonReact/ReactFiles/src/dashboard/subApps/cm/addUser.js"],"sourcesContent":["import searchIcon from '../../../images/search.png'\nimport React, { useState, useEffect } from 'react';\nimport { setData } from '../../../database/database';\n\nexport function AddUser(props) {\n    const [showAddClient, setShowAddClient] = useState(false);\n\n \n\n    var groupNames = props.userData.groupData\n    var userData = props.userData\n\n\n    const toggleAddClient = () => {\n        setShowAddClient(!showAddClient);\n    };\n\n    return (\n        <>\n            <CMHeader toggleAddClient={toggleAddClient} />\n            {showAddClient && <CMAddClient groupNames={groupNames} userData={userData} toggleAddClient={toggleAddClient} updateUserData={props.updateUserData} forceCloseEdit={props.forceCloseEdit}/>}\n        </>\n    );\n}\n\n\n\n\n\n\n\nfunction CMAddClient({ groupNames, userData, toggleAddClient, updateUserData, forceCloseEdit}) {\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [showGroupPopup, setShowGroupPopup] = useState(false);\n    const [selectedGroupIndexes, setSelectedGroupIndexes] = useState([]);\n\n    const now = new Date();\n    let initialHour = now.getHours();\n    const initialMinute = now.getMinutes();\n    const initialAmpm = initialHour >= 12 ? 'PM' : 'AM';\n\n    initialHour = initialHour % 12 || 12;\n\n    const [date, setDate] = useState({\n        day: now.getDate(),\n        month: now.getMonth() + 1,\n        year: now.getFullYear(),\n        hour: initialHour,\n        minute: initialMinute < 10 ? `0${initialMinute}` : initialMinute,\n        ampm: initialAmpm,\n    });\n\n    const isValidPhoneNumber = (phone) => /^[0-9]{10}$/.test(phone);\n\n    const handleGroupChange = (index) => {\n        setSelectedGroupIndexes(prevSelectedIndexes => {\n            if (prevSelectedIndexes.includes(index)) {\n                return prevSelectedIndexes.filter(i => i !== index);\n            } else {\n                return [...prevSelectedIndexes, index];\n            }\n        });\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setDate(prevDate => ({ ...prevDate, [name]: value }));\n    };\n\n    const validateAndAddClient = () => {\n        if (!firstName || !lastName || !isValidPhoneNumber(phoneNumber)) {\n            alert(\"Please fill all the fields correctly.\");\n            return;\n        }\n\n        if (!userData.clientData) {\n            userData.clientData = [];\n        }\n    \n\n        let adjustedHour = date.hour;\n        if (date.ampm === 'PM' && date.hour !== 12) {\n            adjustedHour = parseInt(date.hour) + 12;\n        } else if (date.ampm === 'AM' && date.hour === 12) {\n            adjustedHour = 0;\n        }\n\n        const appointmentDate = new Date(date.year, date.month - 1, date.day, adjustedHour, date.minute);\n        const unixTimestamp = Math.floor(appointmentDate.getTime() / 1000);\n\n        const newClient = {\n            firstName,\n            lastName,\n            phoneNumber,\n            date: unixTimestamp,\n            groups: selectedGroupIndexes,\n        };\n\n        userData.clientData = userData.clientData || [];\n        \n        const updatedClientData = [newClient, ...userData.clientData];\n        userData.clientData = updatedClientData;\n\n\n\n        updateUserData(userData);\n\n        toggleAddClient();\n\n        forceCloseEdit()\n\n        \n    };\n\n    const renderGroupPopup = (groupNames1 = []) => (\n        <div className=\"group-popup\" style={{ position: 'absolute', zIndex: 10, background: 'white', padding: '20px', border: '1px solid black' }}>\n            {groupNames1.length > 0 ? (\n                groupNames1.map((groupName, index) => (\n                    <div key={index}>\n                        <input\n                            type=\"checkbox\"\n                            id={`group-${index}`}\n                            value={index}\n                            checked={selectedGroupIndexes.includes(index)}\n                            onChange={() => handleGroupChange(index)}\n                            className='popupCheckbox'\n                        />\n                        <label className='checkboxLabel' htmlFor={`group-${index}`}>{groupName}</label>\n                    </div>\n                ))\n            ) : (\n                <h3>Create a group in the Group Manager Tab</h3>\n            )}\n            <button onClick={() => setShowGroupPopup(false)}>Done</button>\n        </div>\n    );\n\n    return (\n        <>\n            <div className=\"userblock\" id=\"addClientBlock\">\n                <input type=\"text\" className=\"editInputs\" placeholder=\"First Name\" value={firstName} onChange={(e) => setFirstName(e.target.value)} />\n                <input type=\"text\" className=\"lastName\" placeholder=\"Last Name\" value={lastName} onChange={(e) => setLastName(e.target.value)} />\n                <input type=\"text\" className=\"phoneNumber\" placeholder=\"Phone Number\" value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)} />\n\n                <div className=\"appointment-date-container\">\n                    <div className=\"appointment-date-label\">Appointment Date</div>\n                    <div className=\"date-selectors\">\n                        <select name=\"day\" value={date.day} onChange={handleChange}>\n                            {[...Array(31).keys()].map(day => (\n                                <option key={day} value={day + 1}>{day + 1}</option>\n                                ))}\n                            </select>\n                            <div className=\"date-separator\">/</div>\n                            <select name=\"month\" value={date.month} onChange={handleChange}>\n                                {['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'].map((month, index) => (\n                                    <option key={index} value={index + 1}>{month}</option>\n                                ))}\n                            </select>\n                            <div className=\"date-separator\">/</div>\n                            <input name=\"year\" type=\"text\" className=\"yearSelector\" placeholder=\"Year\" value={date.year} onChange={handleChange} />\n                        </div>\n                        <div className=\"time-selectors\">\n                            <select name=\"hour\" value={date.hour} onChange={handleChange}>\n                                {[...Array(12).keys()].map(hour => (\n                                    <option key={hour} value={hour + 1}>{hour + 1}</option>\n                                ))}\n                            </select>\n                            <div className=\"time-separator\">:</div>\n                            <select name=\"minute\" value={date.minute} onChange={handleChange}>\n                                {[...Array(60).keys()].map(minute => (\n                                    <option key={minute} value={minute < 10 ? `0${minute}` : minute}>\n                                        {minute < 10 ? `0${minute}` : minute}\n                                    </option>\n                                ))}\n                            </select>\n                            <select name=\"ampm\" value={date.ampm} onChange={handleChange}>\n                                <option value=\"AM\">AM</option>\n                                <option value=\"PM\">PM</option>\n                            </select>\n                        </div>\n                    </div>\n    \n                    <div className=\"groupcontainer\">\n                        <div className=\"addgroup\" onClick={() => setShowGroupPopup(true)}>\n                            {selectedGroupIndexes.length > 0 ? 'Edit Groups' : 'Add Group'}\n                        </div>\n                        {selectedGroupIndexes.map((index) => (\n                            <div key={index} className=\"groupblock\">{groupNames[index]}</div>\n                        ))}\n                    </div>\n    \n                    <button className=\"addClient\" onClick={validateAndAddClient}>Add</button>\n                </div>\n    \n                {showGroupPopup && renderGroupPopup(groupNames)}\n                {showGroupPopup && <div className=\"dim-background\" onClick={() => setShowGroupPopup(false)}></div>}\n            </>\n        );\n    }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction CMHeader(props) {\n    return (<>\n            <div className=\"cm-top-headers\">\n                <div id=\"cm-toggle-add-client\" className='no-select' onClick={props.toggleAddClient}>Add Client</div>\n            </div>\n        </>);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}