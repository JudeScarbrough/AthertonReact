{"ast":null,"code":"import{ViewBlock}from\"./viewBlock\";import{EditBlock}from\"./editBlock\";import{useState,useEffect}from\"react\";import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";export function MainBlock(_ref){let{user,userData,index,updateUserData,forceClose,forceCloseEdit}=_ref;const[isEiditing,setEditing]=useState(false);console.log(\"force close: \",forceClose);useEffect(()=>{if(forceClose){setEditing(false);}},[forceClose]);const flipEditState=()=>{if(forceClose){forceCloseEdit();}setEditing(!isEiditing);};const confirmUser=updatedUser=>{//update userData\nuserData.clientData[index]=updatedUser;// send new user data to be updated\nupdateUserData(userData);// revert block\nflipEditState();};function removeElementAtIndex(list,index){if(index>=0&&index<list.length){return list.slice(0,index).concat(list.slice(index+1));}return list.slice();// Return a copy of the list if the index is out of bounds\n}const deleteUser=()=>{// Check if index is within the range of the array\nuserData.clientData=removeElementAtIndex(userData.clientData,index);// Call the function to toggle the edit state\nflipEditState();// Update the userData with the new array\nupdateUserData(userData);};if(isEiditing==true&&!forceClose){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(EditBlock,{user:user,userData:userData,flipEditState:flipEditState,confirmUser:confirmUser,deleteUser:deleteUser})});}else{return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(ViewBlock,{user:user,userData:userData,flipEditState:flipEditState})});}}","map":{"version":3,"names":["ViewBlock","EditBlock","useState","useEffect","jsx","_jsx","Fragment","_Fragment","MainBlock","_ref","user","userData","index","updateUserData","forceClose","forceCloseEdit","isEiditing","setEditing","console","log","flipEditState","confirmUser","updatedUser","clientData","removeElementAtIndex","list","length","slice","concat","deleteUser","children"],"sources":["D:/development/AthertonReact/ReactFiles/src/dashboard/subApps/cm/userBlock/mainBlock.js"],"sourcesContent":["import { ViewBlock } from \"./viewBlock\"\r\nimport { EditBlock } from \"./editBlock\"\r\nimport { useState, useEffect } from \"react\"\r\n\r\nexport function MainBlock({ user, userData, index, updateUserData, forceClose, forceCloseEdit }){\r\n\r\n    const [isEiditing, setEditing] = useState(false)\r\n\r\n\r\n    console.log(\"force close: \", forceClose)\r\n\r\n    useEffect(() => {\r\n        if(forceClose){\r\n            setEditing(false);\r\n        }\r\n    }, [forceClose]);\r\n\r\n\r\n    const flipEditState = () => {\r\n        if(forceClose){\r\n            forceCloseEdit()\r\n        }\r\n        setEditing(!isEiditing)\r\n    }\r\n\r\n\r\n    const confirmUser = (updatedUser) => {\r\n\r\n        //update userData\r\n        userData.clientData[index] = updatedUser\r\n        // send new user data to be updated\r\n        updateUserData(userData)\r\n\r\n        // revert block\r\n        flipEditState()\r\n\r\n    }\r\n\r\n\r\n    function removeElementAtIndex(list, index) {\r\n\r\n        if (index >= 0 && index < list.length) {\r\n            return list.slice(0, index).concat(list.slice(index + 1));\r\n            \r\n        }\r\n        return list.slice(); // Return a copy of the list if the index is out of bounds\r\n    }\r\n\r\n    const deleteUser = () => {\r\n        // Check if index is within the range of the array\r\n\r\n        userData.clientData = removeElementAtIndex(userData.clientData, index)\r\n\r\n        // Call the function to toggle the edit state\r\n        flipEditState();\r\n        // Update the userData with the new array\r\n        updateUserData(userData);\r\n\r\n    };\r\n\r\n\r\n    if((isEiditing == true) && !forceClose){\r\n        return (<>\r\n            <EditBlock user={user}  userData={ userData} flipEditState={flipEditState} confirmUser={confirmUser} deleteUser={deleteUser}></EditBlock>\r\n\r\n        </>)\r\n    } else {\r\n        return (<>\r\n            <ViewBlock user={user} userData={ userData} flipEditState={flipEditState}></ViewBlock>\r\n        </>)\r\n    }\r\n\r\n}"],"mappings":"AAAA,OAASA,SAAS,KAAQ,aAAa,CACvC,OAASC,SAAS,KAAQ,aAAa,CACvC,OAASC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,QAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE3C,MAAO,SAAS,CAAAC,SAASA,CAAAC,IAAA,CAAuE,IAAtE,CAAEC,IAAI,CAAEC,QAAQ,CAAEC,KAAK,CAAEC,cAAc,CAAEC,UAAU,CAAEC,cAAe,CAAC,CAAAN,IAAA,CAE3F,KAAM,CAACO,UAAU,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAGhDgB,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEL,UAAU,CAAC,CAExCX,SAAS,CAAC,IAAM,CACZ,GAAGW,UAAU,CAAC,CACVG,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CAAE,CAACH,UAAU,CAAC,CAAC,CAGhB,KAAM,CAAAM,aAAa,CAAGA,CAAA,GAAM,CACxB,GAAGN,UAAU,CAAC,CACVC,cAAc,CAAC,CAAC,CACpB,CACAE,UAAU,CAAC,CAACD,UAAU,CAAC,CAC3B,CAAC,CAGD,KAAM,CAAAK,WAAW,CAAIC,WAAW,EAAK,CAEjC;AACAX,QAAQ,CAACY,UAAU,CAACX,KAAK,CAAC,CAAGU,WAAW,CACxC;AACAT,cAAc,CAACF,QAAQ,CAAC,CAExB;AACAS,aAAa,CAAC,CAAC,CAEnB,CAAC,CAGD,QAAS,CAAAI,oBAAoBA,CAACC,IAAI,CAAEb,KAAK,CAAE,CAEvC,GAAIA,KAAK,EAAI,CAAC,EAAIA,KAAK,CAAGa,IAAI,CAACC,MAAM,CAAE,CACnC,MAAO,CAAAD,IAAI,CAACE,KAAK,CAAC,CAAC,CAAEf,KAAK,CAAC,CAACgB,MAAM,CAACH,IAAI,CAACE,KAAK,CAACf,KAAK,CAAG,CAAC,CAAC,CAAC,CAE7D,CACA,MAAO,CAAAa,IAAI,CAACE,KAAK,CAAC,CAAC,CAAE;AACzB,CAEA,KAAM,CAAAE,UAAU,CAAGA,CAAA,GAAM,CACrB;AAEAlB,QAAQ,CAACY,UAAU,CAAGC,oBAAoB,CAACb,QAAQ,CAACY,UAAU,CAAEX,KAAK,CAAC,CAEtE;AACAQ,aAAa,CAAC,CAAC,CACf;AACAP,cAAc,CAACF,QAAQ,CAAC,CAE5B,CAAC,CAGD,GAAIK,UAAU,EAAI,IAAI,EAAK,CAACF,UAAU,CAAC,CACnC,mBAAQT,IAAA,CAAAE,SAAA,EAAAuB,QAAA,cACJzB,IAAA,CAACJ,SAAS,EAACS,IAAI,CAAEA,IAAK,CAAEC,QAAQ,CAAGA,QAAS,CAACS,aAAa,CAAEA,aAAc,CAACC,WAAW,CAAEA,WAAY,CAACQ,UAAU,CAAEA,UAAW,CAAY,CAAC,CAE3I,CAAC,CACP,CAAC,IAAM,CACH,mBAAQxB,IAAA,CAAAE,SAAA,EAAAuB,QAAA,cACJzB,IAAA,CAACL,SAAS,EAACU,IAAI,CAAEA,IAAK,CAACC,QAAQ,CAAGA,QAAS,CAACS,aAAa,CAAEA,aAAc,CAAY,CAAC,CACxF,CAAC,CACP,CAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}