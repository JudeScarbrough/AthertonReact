{"ast":null,"code":"var _jsxFileName = \"/Users/jscarbrough/Desktop/AthertonReact/src/dashboard/subApps/gm.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport \"../../cssFiles/cm.css\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function GroupManager(props) {\n  _s();\n  const [showAddGroup, setShowAddGroup] = useState(false);\n  const toggleAddGroup = () => {\n    setShowAddGroup(!showAddGroup);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GMHeader, {\n      toggleAddGroup: toggleAddGroup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), showAddGroup && /*#__PURE__*/_jsxDEV(GMAddGroup, {\n      toggleAddGroup: toggleAddGroup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true);\n}\n_s(GroupManager, \"UZN6mMnsSxIQl575OXBv8F+v7mE=\");\n_c = GroupManager;\nfunction GMAddGroup({\n  toggleAddGroup\n}) {\n  _s2();\n  const [groupName, setGroupName] = useState('');\n  const handleConfirm = () => {\n    // Here you would handle the confirmation logic (e.g., adding the group)\n    console.log('Group Name:', groupName);\n    // Optionally, close the add group UI\n    toggleAddGroup();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userblock\",\n    id: \"addGroupBlock\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"groupName\",\n      placeholder: \"Group Name\",\n      value: groupName,\n      onChange: e => setGroupName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConfirm,\n      children: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s2(GMAddGroup, \"YqvB45g9j5kZhEKuQVjsZijbxNM=\");\n_c2 = GMAddGroup;\nfunction GMHeader({\n  toggleAddGroup\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cm-top-headers\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"cm-toggle-add-client\",\n      className: \"no-select\",\n      onClick: toggleAddGroup,\n      children: \"Add Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_c3 = GMHeader;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"GroupManager\");\n$RefreshReg$(_c2, \"GMAddGroup\");\n$RefreshReg$(_c3, \"GMHeader\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","GroupManager","props","_s","showAddGroup","setShowAddGroup","toggleAddGroup","children","GMHeader","fileName","_jsxFileName","lineNumber","columnNumber","GMAddGroup","_c","_s2","groupName","setGroupName","handleConfirm","console","log","className","id","type","placeholder","value","onChange","e","target","onClick","_c2","_c3","$RefreshReg$"],"sources":["/Users/jscarbrough/Desktop/AthertonReact/src/dashboard/subApps/gm.js"],"sourcesContent":["import \"../../cssFiles/cm.css\";\n\nimport React, { useState } from 'react';\n\nexport function GroupManager(props) {\n    const [showAddGroup, setShowAddGroup] = useState(false);\n\n    const toggleAddGroup = () => {\n        setShowAddGroup(!showAddGroup);\n    };\n\n    return (\n        <>\n            <GMHeader toggleAddGroup={toggleAddGroup} />\n            {showAddGroup && <GMAddGroup toggleAddGroup={toggleAddGroup} />}\n        </>\n    );\n}\n\nfunction GMAddGroup({ toggleAddGroup }) {\n    const [groupName, setGroupName] = useState('');\n\n    const handleConfirm = () => {\n        // Here you would handle the confirmation logic (e.g., adding the group)\n        console.log('Group Name:', groupName);\n        // Optionally, close the add group UI\n        toggleAddGroup();\n    };\n\n    return (\n        <div className=\"userblock\" id=\"addGroupBlock\">\n            <input\n                type=\"text\"\n                className=\"groupName\"\n                placeholder=\"Group Name\"\n                value={groupName}\n                onChange={(e) => setGroupName(e.target.value)}\n            />\n            <button onClick={handleConfirm}>Confirm</button>\n        </div>\n    );\n}\n\nfunction GMHeader({ toggleAddGroup }) {\n    return (\n        <div className=\"cm-top-headers\">\n            <div id=\"cm-toggle-add-client\" className='no-select' onClick={toggleAddGroup}>Add Group</div>\n        </div>\n    );\n}\n"],"mappings":";;;AAAA,OAAO,uBAAuB;AAE9B,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,OAAO,SAASC,YAAYA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMU,cAAc,GAAGA,CAAA,KAAM;IACzBD,eAAe,CAAC,CAACD,YAAY,CAAC;EAClC,CAAC;EAED,oBACIN,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACIT,OAAA,CAACU,QAAQ;MAACF,cAAc,EAAEA;IAAe;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC3CR,YAAY,iBAAIN,OAAA,CAACe,UAAU;MAACP,cAAc,EAAEA;IAAe;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACjE,CAAC;AAEX;AAACT,EAAA,CAbeF,YAAY;AAAAa,EAAA,GAAZb,YAAY;AAe5B,SAASY,UAAUA,CAAC;EAAEP;AAAe,CAAC,EAAE;EAAAS,GAAA;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMsB,aAAa,GAAGA,CAAA,KAAM;IACxB;IACAC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEJ,SAAS,CAAC;IACrC;IACAV,cAAc,CAAC,CAAC;EACpB,CAAC;EAED,oBACIR,OAAA;IAAKuB,SAAS,EAAC,WAAW;IAACC,EAAE,EAAC,eAAe;IAAAf,QAAA,gBACzCT,OAAA;MACIyB,IAAI,EAAC,MAAM;MACXF,SAAS,EAAC,WAAW;MACrBG,WAAW,EAAC,YAAY;MACxBC,KAAK,EAAET,SAAU;MACjBU,QAAQ,EAAGC,CAAC,IAAKV,YAAY,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACFd,OAAA;MAAQ+B,OAAO,EAAEX,aAAc;MAAAX,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEd;AAACG,GAAA,CAtBQF,UAAU;AAAAiB,GAAA,GAAVjB,UAAU;AAwBnB,SAASL,QAAQA,CAAC;EAAEF;AAAe,CAAC,EAAE;EAClC,oBACIR,OAAA;IAAKuB,SAAS,EAAC,gBAAgB;IAAAd,QAAA,eAC3BT,OAAA;MAAKwB,EAAE,EAAC,sBAAsB;MAACD,SAAS,EAAC,WAAW;MAACQ,OAAO,EAAEvB,cAAe;MAAAC,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5F,CAAC;AAEd;AAACmB,GAAA,GANQvB,QAAQ;AAAA,IAAAM,EAAA,EAAAgB,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}