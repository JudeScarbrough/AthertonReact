{"ast":null,"code":"var _jsxFileName = \"/Users/jscarbrough/Desktop/AthertonReact/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport './firebase.js';\nimport { RenderDashboard } from './dashboard/dashboard.js';\nimport { getUserData } from './database/database.js';\nimport { GoogleLoginButton } from './setup/login.js';\nimport { SettingsForm } from './setup/settings.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst auth = getAuth();\nexport default function App() {\n  _s();\n  const [isSignedIn, setSignIn] = useState(null);\n  const [userData, setUserData] = useState(null);\n\n  /* set sign in state based on if user is logged in or not */\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      if (!isSignedIn) {\n        setSignIn(true);\n      }\n    } else {\n      setSignIn(false);\n    }\n  });\n  const changeUserDataState = newState => {\n    setUserData(newState);\n  };\n  if (isSignedIn) {\n    /* data happened to change then update on re render */\n    getUserData().then(data => {\n      console.log(JSON.stringify(data));\n      if (!(JSON.stringify(userData) == JSON.stringify(data))) {\n        setUserData(data);\n      }\n    }).catch(error => {\n      console.error(\"Failed to get user data:\", error);\n    });\n    if (userData && userData[\"setup\"] == \"No\") {\n      return /*#__PURE__*/_jsxDEV(SettingsForm, {\n        setUserDataState: changeUserDataState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(RenderDashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(GoogleLoginButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n}\n_s(App, \"JBFNdXYmfZcTn2Wdpl8MKsqKoWs=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","initializeApp","getAuth","onAuthStateChanged","RenderDashboard","getUserData","GoogleLoginButton","SettingsForm","jsxDEV","_jsxDEV","auth","App","_s","isSignedIn","setSignIn","userData","setUserData","user","changeUserDataState","newState","then","data","console","log","JSON","stringify","catch","error","setUserDataState","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jscarbrough/Desktop/AthertonReact/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport './firebase.js'; \nimport { RenderDashboard } from './dashboard/dashboard.js'\nimport { getUserData } from './database/database.js'\nimport { GoogleLoginButton } from './setup/login.js'\nimport { SettingsForm } from './setup/settings.js';\n\nconst auth = getAuth();\nexport default function App() {\n  \n  \n\n  const [isSignedIn, setSignIn] = useState(null)\n  const [userData, setUserData] = useState(null)\n\n/* set sign in state based on if user is logged in or not */\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      if(!isSignedIn){setSignIn(true)}\n      } else {setSignIn(false)}\n  });\n\n\n\n  const changeUserDataState = (newState) => {\n    setUserData(newState)\n  }\n\n\n\n  \n\n\n\n\n\n  if (isSignedIn){\n\n\n/* data happened to change then update on re render */\n    getUserData().then(data => {\n      console.log(JSON.stringify(data))\n      if (!(JSON.stringify(userData) == JSON.stringify(data))){setUserData(data)}\n    }).catch(error => {console.error(\"Failed to get user data:\", error)})\n\n\n    if (userData && userData[\"setup\"] == \"No\"){\n      return <SettingsForm setUserDataState={changeUserDataState}></SettingsForm>\n    }\n\n    return <RenderDashboard></RenderDashboard>\n  } else {\n    return <GoogleLoginButton></GoogleLoginButton>\n  }\n\n  \n}\n\n\n\n\n\n\n\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,kBAAkB,QAAQ,eAAe;AAC3D,OAAO,eAAe;AACtB,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,iBAAiB,QAAQ,kBAAkB;AACpD,SAASC,YAAY,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAI,GAAGR,OAAO,CAAC,CAAC;AACtB,eAAe,SAASS,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAI5B,MAAM,CAACC,UAAU,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACEG,kBAAkB,CAACO,IAAI,EAAEO,IAAI,IAAI;IAC/B,IAAIA,IAAI,EAAE;MACR,IAAG,CAACJ,UAAU,EAAC;QAACC,SAAS,CAAC,IAAI,CAAC;MAAA;IAC/B,CAAC,MAAM;MAACA,SAAS,CAAC,KAAK,CAAC;IAAA;EAC5B,CAAC,CAAC;EAIF,MAAMI,mBAAmB,GAAIC,QAAQ,IAAK;IACxCH,WAAW,CAACG,QAAQ,CAAC;EACvB,CAAC;EAUD,IAAIN,UAAU,EAAC;IAGjB;IACIR,WAAW,CAAC,CAAC,CAACe,IAAI,CAACC,IAAI,IAAI;MACzBC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;MACjC,IAAI,EAAEG,IAAI,CAACC,SAAS,CAACV,QAAQ,CAAC,IAAIS,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC,EAAC;QAACL,WAAW,CAACK,IAAI,CAAC;MAAA;IAC5E,CAAC,CAAC,CAACK,KAAK,CAACC,KAAK,IAAI;MAACL,OAAO,CAACK,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAAA,CAAC,CAAC;IAGrE,IAAIZ,QAAQ,IAAIA,QAAQ,CAAC,OAAO,CAAC,IAAI,IAAI,EAAC;MACxC,oBAAON,OAAA,CAACF,YAAY;QAACqB,gBAAgB,EAAEV;MAAoB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC;IAC7E;IAEA,oBAAOvB,OAAA,CAACL,eAAe;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB,CAAC;EAC5C,CAAC,MAAM;IACL,oBAAOvB,OAAA,CAACH,iBAAiB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoB,CAAC;EAChD;AAGF;AAACpB,EAAA,CAhDuBD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}