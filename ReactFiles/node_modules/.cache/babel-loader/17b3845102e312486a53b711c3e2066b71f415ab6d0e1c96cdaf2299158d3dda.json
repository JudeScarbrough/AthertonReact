{"ast":null,"code":"var _jsxFileName = \"D:\\\\development\\\\AthertonReact\\\\ReactFiles\\\\src\\\\dashboard\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { DashboardFrame } from './dashboard_frame';\nimport ClientManager from './subApps/cm/cm.js'; // Adjust import paths as necessary\nimport DirectMessage from './subApps/dm.js';\nimport AppointmentManager from './subApps/am.js';\nimport GroupManager from './subApps/gm.js';\nimport SettingsForm from '../setup/settings.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RenderDashboard(props) {\n  _s();\n  const [currentPage, setPage] = useState(0);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const routeToPage = {\n    '/client-manager': 1,\n    '/direct-message': 2,\n    '/appointment-manager': 3,\n    '/group-manager': 4,\n    '/settings': 5\n  };\n  useEffect(() => {\n    // Update the page state based on the URL route\n    const path = location.pathname;\n    const page = routeToPage[path] || 0;\n    setPage(page);\n  }, [location]);\n  function handleNavButtonClick(i) {\n    const routeName = Object.keys(routeToPage).find(key => routeToPage[key] === i);\n    navigate(routeName || '/', {\n      replace: true\n    });\n    setPage(i);\n  }\n  return /*#__PURE__*/_jsxDEV(DashboardFrame, {\n    userData: props.userData,\n    displayNum: currentPage,\n    navButtonClicked: i => handleNavButtonClick(i),\n    children: /*#__PURE__*/_jsxDEV(DirectContent, {\n      user: props.user,\n      userData: props.userData,\n      currentPage: currentPage,\n      changeUserDataState: props.changeUserDataState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(RenderDashboard, \"LK06bU6PNRv+wFwCby470zKcQ1c=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = RenderDashboard;\nfunction DirectContent(props) {\n  switch (props.currentPage) {\n    case 1:\n      return /*#__PURE__*/_jsxDEV(ClientManager, {\n        userData: props.userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 20\n      }, this);\n    case 2:\n      return /*#__PURE__*/_jsxDEV(DirectMessage, {\n        userData: props.userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 20\n      }, this);\n    case 3:\n      return /*#__PURE__*/_jsxDEV(AppointmentManager, {\n        userData: props.userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 20\n      }, this);\n    case 4:\n      return /*#__PURE__*/_jsxDEV(GroupManager, {\n        userData: props.userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 20\n      }, this);\n    case 5:\n      return /*#__PURE__*/_jsxDEV(SettingsForm, {\n        userData: props.userData,\n        changeUserDataState: props.changeUserDataState,\n        user: props.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }, this);\n    default:\n      return null;\n    // Render nothing if no valid page is selected\n  }\n}\n_c2 = DirectContent;\nvar _c, _c2;\n$RefreshReg$(_c, \"RenderDashboard\");\n$RefreshReg$(_c2, \"DirectContent\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","DashboardFrame","ClientManager","DirectMessage","AppointmentManager","GroupManager","SettingsForm","jsxDEV","_jsxDEV","RenderDashboard","props","_s","currentPage","setPage","navigate","location","routeToPage","path","pathname","page","handleNavButtonClick","i","routeName","Object","keys","find","key","replace","userData","displayNum","navButtonClicked","children","DirectContent","user","changeUserDataState","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","$RefreshReg$"],"sources":["D:/development/AthertonReact/ReactFiles/src/dashboard/dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { DashboardFrame } from './dashboard_frame';\r\nimport ClientManager from './subApps/cm/cm.js'; // Adjust import paths as necessary\r\nimport DirectMessage from './subApps/dm.js';\r\nimport AppointmentManager from './subApps/am.js';\r\nimport GroupManager from './subApps/gm.js';\r\nimport SettingsForm from '../setup/settings.js';\r\n\r\nexport default function RenderDashboard(props) {\r\n    const [currentPage, setPage] = useState(0);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const routeToPage = {\r\n        '/client-manager': 1,\r\n        '/direct-message': 2,\r\n        '/appointment-manager': 3,\r\n        '/group-manager': 4,\r\n        '/settings': 5\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Update the page state based on the URL route\r\n        const path = location.pathname;\r\n        const page = routeToPage[path] || 0;\r\n        setPage(page);\r\n    }, [location]);\r\n\r\n    function handleNavButtonClick(i) {\r\n        const routeName = Object.keys(routeToPage).find(key => routeToPage[key] === i);\r\n        navigate(routeName || '/', { replace: true });\r\n        setPage(i);\r\n    }\r\n\r\n    return (\r\n        <DashboardFrame userData={props.userData} displayNum={currentPage} navButtonClicked={(i) => handleNavButtonClick(i)}>\r\n            <DirectContent user={props.user} userData={props.userData} currentPage={currentPage} changeUserDataState={props.changeUserDataState}/>\r\n        </DashboardFrame>\r\n    );\r\n}\r\n\r\nfunction DirectContent(props) {\r\n    switch (props.currentPage) {\r\n        case 1:\r\n            return <ClientManager userData={props.userData} />;\r\n        case 2:\r\n            return <DirectMessage userData={props.userData} />;\r\n        case 3:\r\n            return <AppointmentManager userData={props.userData} />;\r\n        case 4:\r\n            return <GroupManager userData={props.userData} />;\r\n        case 5:\r\n            return <SettingsForm userData={props.userData} changeUserDataState={props.changeUserDataState} user={props.user} />;\r\n        default:\r\n            return null;  // Render nothing if no valid page is selected\r\n    }\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}