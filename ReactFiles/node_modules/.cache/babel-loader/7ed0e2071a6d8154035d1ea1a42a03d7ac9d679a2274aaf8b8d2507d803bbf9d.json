{"ast":null,"code":"import React,{useState}from'react';import'../cssFiles/settings.css';import{setData,getUserData}from'../database/database';import{getReturnUrl,getServerIp}from'../config';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export function SettingsForm(props){let user=props.user;const[companyName,setCompanyName]=useState(props.userData&&props.userData[\"settings\"]&&props.userData[\"settings\"][0]?props.userData[\"settings\"][0]:'');const[customerPhone,setCustomerPhone]=useState(props.userData&&props.userData[\"settings\"]&&props.userData[\"settings\"][1]?props.userData[\"settings\"][1]:'');// State to control popup visibility\nconst[showPopup,setShowPopup]=useState(false);const validateInputs=()=>{const phoneRegex=/^[0-9]{10}$/;if(!companyName.trim())alert(\"Company name is required.\");else if(!phoneRegex.test(customerPhone))alert(\"Please enter a valid phone number.\");else return true;return false;};const handleSubmit=()=>{if(validateInputs()){submitData(companyName,customerPhone,props.changeUserDataState,setShowPopup,props.finishedInitSettings&&props.finishedInitSettings);}};function PopupMessage(){return/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',top:'0px',left:'50%',transform:'translateX(-50%) translateY(-100px)',width:'100%',textAlign:'center',backgroundColor:'#dff0d8',color:'#3c763d',padding:'10px',borderRadius:'5px',border:'1px solid #d6e9c6',zIndex:2,marginBottom:'20px'},children:\"Settings Updated Successfully!\"});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Billing,{finishedInitSettings:props.finishedInitSettings,user:props.user}),/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",style:{position:'relative'},children:[showPopup&&/*#__PURE__*/_jsx(PopupMessage,{}),/*#__PURE__*/_jsx(\"h2\",{children:\"Settings\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"companyName\",children:\"Company Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"companyName\",name:\"companyName\",placeholder:\"Company Name\",required:true,value:companyName,onChange:e=>setCompanyName(e.target.value)}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"customerPhone\",children:\"Customer Contact Phone Number:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",id:\"customerPhone\",name:\"customerPhone\",placeholder:\"Customer Contact Phone Number\",required:true,value:customerPhone,onChange:e=>setCustomerPhone(e.target.value)}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,type:\"submit\",id:\"confirm\",children:\"Confirm\"})]})]});}function Billing(props){let user=props.user;const handleBillingPortal=async()=>{try{const response=await fetch(getServerIp(),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({call:\"billing-session\",user_id:user.uid,appUrl:getReturnUrl()})});const responseBody=await response.json();// Get response as text\nconsole.log(\"Server response:\",responseBody);// Log the response body\nif(response.ok){console.log(\"relo url: \",response.url);//window.location.href = portalSession.url;\n}else{console.error('Failed to open billing portal:',response);}}catch(error){console.error('Error connecting to the server:',error);}};if(props.finishedInitSettings){console.log(\"agh fuck\");return/*#__PURE__*/_jsx(_Fragment,{});}else{return/*#__PURE__*/_jsx(\"button\",{onClick:handleBillingPortal,id:\"billingButton\",children:\"Manage Billing\"});}}function submitData(companyName,customerPhone,changeUserDataState,setShowPopup,finishedInitSettings){console.log('Submitting data:',{companyName,customerPhone});getUserData().then(data=>{data[\"setup\"]=\"Yes\";data[\"settings\"]=[companyName,customerPhone];setData(data);// Call finishedInitSettings only if it is passed in\nif(finishedInitSettings){finishedInitSettings();}changeUserDataState(data);setShowPopup(true);setTimeout(()=>setShowPopup(false),5000);}).catch(error=>{console.error(\"Failed to get user data:\",error);});}","map":{"version":3,"names":["React","useState","setData","getUserData","getReturnUrl","getServerIp","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SettingsForm","props","user","companyName","setCompanyName","userData","customerPhone","setCustomerPhone","showPopup","setShowPopup","validateInputs","phoneRegex","trim","alert","test","handleSubmit","submitData","changeUserDataState","finishedInitSettings","PopupMessage","style","position","top","left","transform","width","textAlign","backgroundColor","color","padding","borderRadius","border","zIndex","marginBottom","children","Billing","className","htmlFor","type","id","name","placeholder","required","value","onChange","e","target","onClick","handleBillingPortal","response","fetch","method","headers","body","JSON","stringify","call","user_id","uid","appUrl","responseBody","json","console","log","ok","url","error","then","data","setTimeout","catch"],"sources":["D:/development/AthertonReact/ReactFiles/src/setup/settings.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../cssFiles/settings.css';\r\nimport { setData, getUserData } from '../database/database';\r\nimport { getReturnUrl, getServerIp } from '../config';\r\n\r\nexport function SettingsForm(props) {\r\n\r\n\r\n  let user = props.user\r\n\r\n  const [companyName, setCompanyName] = useState(\r\n    props.userData && props.userData[\"settings\"] && props.userData[\"settings\"][0] ? props.userData[\"settings\"][0] : ''\r\n  );\r\n  const [customerPhone, setCustomerPhone] = useState(\r\n    props.userData && props.userData[\"settings\"] && props.userData[\"settings\"][1] ? props.userData[\"settings\"][1] : ''\r\n  );\r\n\r\n  // State to control popup visibility\r\n  const [showPopup, setShowPopup] = useState(false);\r\n\r\n  const validateInputs = () => {\r\n    const phoneRegex = /^[0-9]{10}$/;\r\n\r\n    if (!companyName.trim()) alert(\"Company name is required.\");\r\n    else if (!phoneRegex.test(customerPhone)) alert(\"Please enter a valid phone number.\");\r\n    else return true;\r\n\r\n    return false;\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (validateInputs()) {\r\n      submitData(\r\n        companyName,\r\n        customerPhone,\r\n        props.changeUserDataState,\r\n        setShowPopup,\r\n        props.finishedInitSettings && props.finishedInitSettings\r\n      );\r\n    }\r\n  };\r\n  \r\n\r\n  function PopupMessage() {\r\n    return (\r\n      <div style={{\r\n        position: 'absolute',\r\n        top: '0px',\r\n        left: '50%',\r\n        transform: 'translateX(-50%) translateY(-100px)',\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        backgroundColor: '#dff0d8',\r\n        color: '#3c763d',\r\n        padding: '10px',\r\n        borderRadius: '5px',\r\n        border: '1px solid #d6e9c6',\r\n        zIndex: 2,\r\n        marginBottom: '20px',\r\n      }}>\r\n        Settings Updated Successfully!\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (<>\r\n\r\n    <Billing finishedInitSettings={props.finishedInitSettings} user={props.user}></Billing>\r\n    <div className=\"login-container\" style={{ position: 'relative' }}>\r\n      {showPopup && <PopupMessage />}\r\n\r\n      <h2>Settings</h2>\r\n      \r\n      <label htmlFor=\"companyName\">Company Name:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"companyName\"\r\n        name=\"companyName\"\r\n        placeholder=\"Company Name\"\r\n        required\r\n        value={companyName}\r\n        onChange={e => setCompanyName(e.target.value)}\r\n      /><br /><br />\r\n\r\n      <label htmlFor=\"customerPhone\">Customer Contact Phone Number:</label>\r\n      <input\r\n        type=\"tel\"\r\n        id=\"customerPhone\"\r\n        name=\"customerPhone\"\r\n        placeholder=\"Customer Contact Phone Number\"\r\n        required\r\n        value={customerPhone}\r\n        onChange={e => setCustomerPhone(e.target.value)}\r\n      /><br /><br />\r\n\r\n      <button onClick={handleSubmit} type=\"submit\" id=\"confirm\">Confirm</button>\r\n\r\n      \r\n    </div>\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction Billing(props){\r\n\r\n  let user = props.user\r\n  const handleBillingPortal = async () => {\r\n    try {\r\n        const response = await fetch(getServerIp(), {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ call: \"billing-session\", user_id: user.uid, appUrl: getReturnUrl() })\r\n        });\r\n        const responseBody = await response.json();  // Get response as text\r\n        console.log(\"Server response:\", responseBody);  // Log the response body\r\n\r\n        \r\n        if (response.ok) {\r\n          console.log(\"relo url: \", response.url)\r\n            //window.location.href = portalSession.url;\r\n        } else {\r\n            console.error('Failed to open billing portal:', response);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error connecting to the server:', error);\r\n    }\r\n};\r\n\r\n\r\nif (props.finishedInitSettings){\r\n  console.log(\"agh fuck\")\r\n  return <></>\r\n} else {\r\n  return <button onClick={handleBillingPortal} id=\"billingButton\">Manage Billing</button>\r\n}\r\n\r\n \r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction submitData(companyName, customerPhone, changeUserDataState, setShowPopup, finishedInitSettings) {\r\n  console.log('Submitting data:', { companyName, customerPhone });\r\n\r\n  getUserData().then(data => {\r\n    data[\"setup\"] = \"Yes\";\r\n    data[\"settings\"] = [companyName, customerPhone];\r\n    setData(data);\r\n\r\n    // Call finishedInitSettings only if it is passed in\r\n    if (finishedInitSettings) {\r\n      finishedInitSettings();\r\n    }\r\n\r\n    changeUserDataState(data);\r\n    setShowPopup(true);\r\n    setTimeout(() => setShowPopup(false), 5000);\r\n  }).catch(error => {\r\n    console.error(\"Failed to get user data:\", error);\r\n  });\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}