{"ast":null,"code":"var _jsxFileName = \"D:\\\\development\\\\AthertonReact\\\\ReactFiles\\\\src\\\\setup\\\\settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../cssFiles/settings.css';\nimport { setData, getUserData } from '../database/database';\nimport { getReturnUrl, getServerIp } from '../config';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function SettingsForm(props) {\n  _s();\n  let user = props.user;\n  const [companyName, setCompanyName] = useState(props.userData && props.userData[\"settings\"] && props.userData[\"settings\"][0] ? props.userData[\"settings\"][0] : '');\n  const [customerPhone, setCustomerPhone] = useState(props.userData && props.userData[\"settings\"] && props.userData[\"settings\"][1] ? props.userData[\"settings\"][1] : '');\n\n  // State to control popup visibility\n  const [showPopup, setShowPopup] = useState(false);\n  const validateInputs = () => {\n    const phoneRegex = /^[0-9]{10}$/;\n    if (!companyName.trim()) alert(\"Company name is required.\");else if (!phoneRegex.test(customerPhone)) alert(\"Please enter a valid phone number.\");else return true;\n    return false;\n  };\n  const handleSubmit = () => {\n    if (validateInputs()) {\n      submitData(companyName, customerPhone, props.changeUserDataState, setShowPopup, props.finishedInitSettings && props.finishedInitSettings);\n    }\n  };\n  function PopupMessage() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '0px',\n        left: '50%',\n        transform: 'translateX(-50%) translateY(-100px)',\n        width: '100%',\n        textAlign: 'center',\n        backgroundColor: '#dff0d8',\n        color: '#3c763d',\n        padding: '10px',\n        borderRadius: '5px',\n        border: '1px solid #d6e9c6',\n        zIndex: 2,\n        marginBottom: '20px'\n      },\n      children: \"Settings Updated Successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Billing, {\n      finishedInitSettings: props.finishedInitSettings,\n      user: props.user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      style: {\n        position: 'relative'\n      },\n      children: [showPopup && /*#__PURE__*/_jsxDEV(PopupMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"companyName\",\n        children: \"Company Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"companyName\",\n        name: \"companyName\",\n        placeholder: \"Company Name\",\n        required: true,\n        value: companyName,\n        onChange: e => setCompanyName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"customerPhone\",\n        children: \"Customer Contact Phone Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        id: \"customerPhone\",\n        name: \"customerPhone\",\n        placeholder: \"Customer Contact Phone Number\",\n        required: true,\n        value: customerPhone,\n        onChange: e => setCustomerPhone(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        type: \"submit\",\n        id: \"confirm\",\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(SettingsForm, \"L5n4cSumt6zCBTI8rvTovFBCvBk=\");\n_c = SettingsForm;\nfunction Billing(props) {\n  let user = props.user;\n  const handleBillingPortal = async () => {\n    try {\n      const response = await fetch(getServerIp(), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: user.uid,\n          appUrl: getReturnUrl()\n        })\n      });\n      const responseBody = await response.json(); // Get response as text\n      console.log(\"Server response:\", responseBody); // Log the response body\n\n      if (response.ok) {\n        console.log(\"relo url: \", response.url);\n        //window.location.href = portalSession.url;\n      } else {\n        console.error('Failed to open billing portal:', portalSession);\n      }\n    } catch (error) {\n      console.error('Error connecting to the server:', error);\n    }\n  };\n  if (props.finishedInitSettings) {\n    console.log(\"agh fuck\");\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBillingPortal,\n      id: \"billingButton\",\n      children: \"Manage Billing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 10\n    }, this);\n  }\n}\n_c2 = Billing;\nfunction submitData(companyName, customerPhone, changeUserDataState, setShowPopup, finishedInitSettings) {\n  console.log('Submitting data:', {\n    companyName,\n    customerPhone\n  });\n  getUserData().then(data => {\n    data[\"setup\"] = \"Yes\";\n    data[\"settings\"] = [companyName, customerPhone];\n    setData(data);\n\n    // Call finishedInitSettings only if it is passed in\n    if (finishedInitSettings) {\n      finishedInitSettings();\n    }\n    changeUserDataState(data);\n    setShowPopup(true);\n    setTimeout(() => setShowPopup(false), 5000);\n  }).catch(error => {\n    console.error(\"Failed to get user data:\", error);\n  });\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"SettingsForm\");\n$RefreshReg$(_c2, \"Billing\");","map":{"version":3,"names":["React","useState","setData","getUserData","getReturnUrl","getServerIp","jsxDEV","_jsxDEV","Fragment","_Fragment","SettingsForm","props","_s","user","companyName","setCompanyName","userData","customerPhone","setCustomerPhone","showPopup","setShowPopup","validateInputs","phoneRegex","trim","alert","test","handleSubmit","submitData","changeUserDataState","finishedInitSettings","PopupMessage","style","position","top","left","transform","width","textAlign","backgroundColor","color","padding","borderRadius","border","zIndex","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","Billing","className","htmlFor","type","id","name","placeholder","required","value","onChange","e","target","onClick","_c","handleBillingPortal","response","fetch","method","headers","body","JSON","stringify","user_id","uid","appUrl","responseBody","json","console","log","ok","url","error","portalSession","_c2","then","data","setTimeout","catch","$RefreshReg$"],"sources":["D:/development/AthertonReact/ReactFiles/src/setup/settings.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../cssFiles/settings.css';\r\nimport { setData, getUserData } from '../database/database';\r\nimport { getReturnUrl, getServerIp } from '../config';\r\n\r\nexport function SettingsForm(props) {\r\n\r\n\r\n  let user = props.user\r\n\r\n  const [companyName, setCompanyName] = useState(\r\n    props.userData && props.userData[\"settings\"] && props.userData[\"settings\"][0] ? props.userData[\"settings\"][0] : ''\r\n  );\r\n  const [customerPhone, setCustomerPhone] = useState(\r\n    props.userData && props.userData[\"settings\"] && props.userData[\"settings\"][1] ? props.userData[\"settings\"][1] : ''\r\n  );\r\n\r\n  // State to control popup visibility\r\n  const [showPopup, setShowPopup] = useState(false);\r\n\r\n  const validateInputs = () => {\r\n    const phoneRegex = /^[0-9]{10}$/;\r\n\r\n    if (!companyName.trim()) alert(\"Company name is required.\");\r\n    else if (!phoneRegex.test(customerPhone)) alert(\"Please enter a valid phone number.\");\r\n    else return true;\r\n\r\n    return false;\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (validateInputs()) {\r\n      submitData(\r\n        companyName,\r\n        customerPhone,\r\n        props.changeUserDataState,\r\n        setShowPopup,\r\n        props.finishedInitSettings && props.finishedInitSettings\r\n      );\r\n    }\r\n  };\r\n  \r\n\r\n  function PopupMessage() {\r\n    return (\r\n      <div style={{\r\n        position: 'absolute',\r\n        top: '0px',\r\n        left: '50%',\r\n        transform: 'translateX(-50%) translateY(-100px)',\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        backgroundColor: '#dff0d8',\r\n        color: '#3c763d',\r\n        padding: '10px',\r\n        borderRadius: '5px',\r\n        border: '1px solid #d6e9c6',\r\n        zIndex: 2,\r\n        marginBottom: '20px',\r\n      }}>\r\n        Settings Updated Successfully!\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (<>\r\n\r\n    <Billing finishedInitSettings={props.finishedInitSettings} user={props.user}></Billing>\r\n    <div className=\"login-container\" style={{ position: 'relative' }}>\r\n      {showPopup && <PopupMessage />}\r\n\r\n      <h2>Settings</h2>\r\n      \r\n      <label htmlFor=\"companyName\">Company Name:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"companyName\"\r\n        name=\"companyName\"\r\n        placeholder=\"Company Name\"\r\n        required\r\n        value={companyName}\r\n        onChange={e => setCompanyName(e.target.value)}\r\n      /><br /><br />\r\n\r\n      <label htmlFor=\"customerPhone\">Customer Contact Phone Number:</label>\r\n      <input\r\n        type=\"tel\"\r\n        id=\"customerPhone\"\r\n        name=\"customerPhone\"\r\n        placeholder=\"Customer Contact Phone Number\"\r\n        required\r\n        value={customerPhone}\r\n        onChange={e => setCustomerPhone(e.target.value)}\r\n      /><br /><br />\r\n\r\n      <button onClick={handleSubmit} type=\"submit\" id=\"confirm\">Confirm</button>\r\n\r\n      \r\n    </div>\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction Billing(props){\r\n\r\n  let user = props.user\r\n  const handleBillingPortal = async () => {\r\n    try {\r\n        const response = await fetch(getServerIp(), {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ user_id: user.uid, appUrl: getReturnUrl() })\r\n        });\r\n        const responseBody = await response.json();  // Get response as text\r\n        console.log(\"Server response:\", responseBody);  // Log the response body\r\n\r\n        \r\n        if (response.ok) {\r\n          console.log(\"relo url: \", response.url)\r\n            //window.location.href = portalSession.url;\r\n        } else {\r\n            console.error('Failed to open billing portal:', portalSession);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error connecting to the server:', error);\r\n    }\r\n};\r\n\r\n\r\nif (props.finishedInitSettings){\r\n  console.log(\"agh fuck\")\r\n  return <></>\r\n} else {\r\n  return <button onClick={handleBillingPortal} id=\"billingButton\">Manage Billing</button>\r\n}\r\n\r\n \r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction submitData(companyName, customerPhone, changeUserDataState, setShowPopup, finishedInitSettings) {\r\n  console.log('Submitting data:', { companyName, customerPhone });\r\n\r\n  getUserData().then(data => {\r\n    data[\"setup\"] = \"Yes\";\r\n    data[\"settings\"] = [companyName, customerPhone];\r\n    setData(data);\r\n\r\n    // Call finishedInitSettings only if it is passed in\r\n    if (finishedInitSettings) {\r\n      finishedInitSettings();\r\n    }\r\n\r\n    changeUserDataState(data);\r\n    setShowPopup(true);\r\n    setTimeout(() => setShowPopup(false), 5000);\r\n  }).catch(error => {\r\n    console.error(\"Failed to get user data:\", error);\r\n  });\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}