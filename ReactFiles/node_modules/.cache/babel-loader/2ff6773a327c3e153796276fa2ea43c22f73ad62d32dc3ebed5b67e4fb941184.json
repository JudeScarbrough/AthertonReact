{"ast":null,"code":"var _jsxFileName = \"/Users/jscarbrough/Desktop/AthertonReact/ReactFiles/src/dashboard/subApps/dm.js\",\n  _s = $RefreshSig$();\nimport \"../../cssFiles/dm.css\";\nimport React, { useState, useEffect } from 'react';\nimport { getUserData } from \"../../database/database\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function DirectMessage(props) {\n  _s();\n  const [userData, setUserData] = useState(props.userData);\n  const [refreshKey, setRefreshKey] = useState(0); // State to trigger useEffect\n\n  useEffect(() => {\n    // Fetch the latest user data\n    getUserData().then(fetchedData => {\n      // Check if the fetched data is different from the current state\n      if (JSON.stringify(fetchedData) !== JSON.stringify(userData)) {\n        // Update state if the data is different\n        setUserData(fetchedData);\n      }\n    });\n  }, [refreshKey]); // Depend on refreshKey to re-fetch user data\n\n  const [showGroupPopup, setShowGroupPopup] = useState(false);\n  const [selectedGroupIndexes, setSelectedGroupIndexes] = useState([]);\n  const handleGroupChange = index => {\n    setSelectedGroupIndexes(prev => prev.includes(index) ? prev.filter(i => i !== index) : [...prev, index]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dmAll\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"dmTitle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"messageBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Group Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GroupSection, {\n          userData: userData,\n          selectedGroupIndexes: selectedGroupIndexes,\n          setShowGroupPopup: setShowGroupPopup,\n          handleGroupChange: handleGroupChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), showGroupPopup && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-overlay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), renderGroupPopup(userData, selectedGroupIndexes, setShowGroupPopup, handleGroupChange)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"groupSection\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"sendButton\",\n            children: \"Send Text To Slected Groups\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"dmInfo\",\n            children: \"Texts are sent to each member of each group individually\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(DirectMessage, \"im2GQTa1HlazVeyQ6rZfDhR2Ark=\");\n_c = DirectMessage;\nfunction renderGroupPopup(userData, selectedGroupIndexes, setShowGroupPopup, handleGroupChange) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-popup\",\n    children: [userData.groupData.map((groupName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: `group-${index}`,\n        checked: selectedGroupIndexes.includes(index),\n        onChange: () => handleGroupChange(index),\n        className: \"popupCheckbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `group-${index}`,\n        className: \"checkboxLabel\",\n        children: groupName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowGroupPopup(false),\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\nfunction GroupSection({\n  userData,\n  selectedGroupIndexes,\n  setShowGroupPopup,\n  handleGroupChange\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"groupSection\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groupSelector\",\n      onClick: () => setShowGroupPopup(true),\n      children: selectedGroupIndexes.length > 0 ? 'Edit Groups' : 'Select Groups'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), selectedGroupIndexes.map(groupIndex => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groupblock\",\n      children: userData.groupData && userData.groupData[groupIndex] ? userData.groupData[groupIndex] : `Invalid group ${groupIndex}`\n    }, groupIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n_c2 = GroupSection;\nvar _c, _c2;\n$RefreshReg$(_c, \"DirectMessage\");\n$RefreshReg$(_c2, \"GroupSection\");","map":{"version":3,"names":["React","useState","useEffect","getUserData","jsxDEV","_jsxDEV","Fragment","_Fragment","DirectMessage","props","_s","userData","setUserData","refreshKey","setRefreshKey","then","fetchedData","JSON","stringify","showGroupPopup","setShowGroupPopup","selectedGroupIndexes","setSelectedGroupIndexes","handleGroupChange","index","prev","includes","filter","i","children","id","fileName","_jsxFileName","lineNumber","columnNumber","GroupSection","className","renderGroupPopup","_c","groupData","map","groupName","type","checked","onChange","htmlFor","onClick","length","groupIndex","_c2","$RefreshReg$"],"sources":["/Users/jscarbrough/Desktop/AthertonReact/ReactFiles/src/dashboard/subApps/dm.js"],"sourcesContent":["import \"../../cssFiles/dm.css\"\nimport React, { useState, useEffect } from 'react';\nimport { getUserData } from \"../../database/database\";\n\n\nexport function DirectMessage(props){\n\n    const [userData, setUserData] = useState(props.userData);\n    const [refreshKey, setRefreshKey] = useState(0); // State to trigger useEffect\n\n    useEffect(() => {\n        // Fetch the latest user data\n        getUserData().then(fetchedData => {\n            // Check if the fetched data is different from the current state\n            if (JSON.stringify(fetchedData) !== JSON.stringify(userData)) {\n                // Update state if the data is different\n                setUserData(fetchedData);\n            }\n        });\n    }, [refreshKey]); // Depend on refreshKey to re-fetch user data\n\n\n\n    const [showGroupPopup, setShowGroupPopup] = useState(false);\n    const [selectedGroupIndexes, setSelectedGroupIndexes] = useState([]);\n    const handleGroupChange = (index) => {\n        setSelectedGroupIndexes(prev => prev.includes(index) ? prev.filter(i => i !== index) : [...prev, index]);\n    };\n\n\n    return (<>\n    <div id=\"dmAll\">\n\n        <h1 id=\"dmTitle\"></h1>\n        \n        <div id=\"messageBlock\">\n            <h3>Group Message</h3>\n\n            <textarea></textarea>\n\n\n            <GroupSection\n                userData={userData}\n                selectedGroupIndexes={selectedGroupIndexes}\n                setShowGroupPopup={setShowGroupPopup}\n                handleGroupChange={handleGroupChange}\n            />\n            {showGroupPopup && (\n                <>\n                    <div className=\"modal-overlay\"></div>\n                    {renderGroupPopup(userData, selectedGroupIndexes, setShowGroupPopup, handleGroupChange)}\n                </>\n            )}\n\n            <div id=\"groupSection\">\n                <div id=\"sendButton\">Send Text To Slected Groups</div>\n                <h4 id=\"dmInfo\">Texts are sent to each member of each group individually</h4>\n\n\n            </div>\n\n\n        </div>\n\n\n    </div>\n    </>)\n}\n\n\n\n\n\nfunction renderGroupPopup(userData, selectedGroupIndexes, setShowGroupPopup, handleGroupChange) {\n    return (\n        <div className=\"group-popup\">\n            {userData.groupData.map((groupName, index) => (\n                <div key={index}>\n                    <input\n                        type=\"checkbox\"\n                        id={`group-${index}`}\n                        checked={selectedGroupIndexes.includes(index)}\n                        onChange={() => handleGroupChange(index)}\n                        className='popupCheckbox'\n                    />\n                    <label htmlFor={`group-${index}`} className='checkboxLabel'>{groupName}</label>\n                </div>\n            ))}\n            <button onClick={() => setShowGroupPopup(false)}>Done</button>\n        </div>\n    );\n}\n\nfunction GroupSection({ userData, selectedGroupIndexes, setShowGroupPopup, handleGroupChange }) {\n    return (\n        <div id=\"groupSection\">\n            <div className=\"groupSelector\" onClick={() => setShowGroupPopup(true)}>\n                {selectedGroupIndexes.length > 0 ? 'Edit Groups' : 'Select Groups'}\n            </div>\n            {selectedGroupIndexes.map(groupIndex => (\n                <div className=\"groupblock\" key={groupIndex}>\n                    {userData.groupData && userData.groupData[groupIndex]\n                        ? userData.groupData[groupIndex]\n                        : `Invalid group ${groupIndex}`}\n                </div>\n            ))}\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}