{"ast":null,"code":"var _jsxFileName = \"D:\\\\development\\\\AthertonReact\\\\ReactFiles\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport './firebase.js';\nimport { RenderDashboard } from './dashboard/dashboard.js';\nimport { getUserData } from './database/database.js';\nimport { GoogleLoginButton } from './setup/login.js';\nimport { SettingsForm } from './setup/settings.js';\nimport 'normalize.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst auth = getAuth();\nexport default function App() {\n  _s();\n  const [isSignedIn, setSignIn] = useState(false);\n  const [user, setUser] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Authentication state observer\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, newUser => {\n      setSignIn(!!newUser);\n      setUser(newUser);\n      setLoading(false);\n    });\n    return () => unsubscribe();\n  }, []);\n\n  // Fetch user data when signed in\n  useEffect(() => {\n    if (isSignedIn) {\n      fetchUserData();\n    }\n  }, [isSignedIn]);\n  const fetchUserData = async () => {\n    try {\n      const data = await getUserData(user.uid);\n      setUserData(data);\n    } catch (error) {\n      console.error(\"Failed to get user data:\", error);\n    }\n  };\n\n  // Create a checkout session for payment\n  const handleSubscription = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:4242/create-checkout-session', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: user.email,\n          user_id: user.uid\n        })\n      });\n      const session = await response.json();\n      if (response.ok) {\n        window.location.href = session.url;\n      } else {\n        console.error('Failed to create checkout session:', session);\n      }\n    } catch (error) {\n      console.error('Error creating checkout session:', error);\n    }\n  };\n\n  // Check user's payment status\n  const checkPaymentStatus = async () => {\n    if (!user || !user.email) {\n      console.log('Email and User ID are required');\n      return;\n    }\n    try {\n      const url = `http://localhost:4242/check-payer-by-email?email=${encodeURIComponent(user.email)}&user_id=${user.uid}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      if (response.ok && data.is_paying) {\n        console.log('Paid user');\n        userData.paid = \"Yes\";\n        setUserData({\n          ...userData,\n          paid: \"Yes\"\n        });\n      }\n    } catch (error) {\n      console.error('Failed to fetch payer status:', error);\n    }\n  };\n  useEffect(() => {\n    if (isSignedIn && userData && userData.setup === \"Yes\" && userData.paid !== \"Yes\") {\n      handleSubscription();\n    }\n  }, [userData]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }, this);\n  }\n  if (!isSignedIn) {\n    return /*#__PURE__*/_jsxDEV(GoogleLoginButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }, this);\n  }\n  if (userData && userData.setup === \"No\") {\n    return /*#__PURE__*/_jsxDEV(SettingsForm, {\n      changeUserDataState: setUserData,\n      userData: userData,\n      handleSubscription: handleSubscription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(RenderDashboard, {\n    userData: userData,\n    changeUserDataState: setUserData,\n    user: user\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"4mHg2EtwOLtfs2poaxr0pSvYtb0=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","getAuth","onAuthStateChanged","RenderDashboard","getUserData","GoogleLoginButton","SettingsForm","jsxDEV","_jsxDEV","auth","App","_s","isSignedIn","setSignIn","user","setUser","userData","setUserData","loading","setLoading","unsubscribe","newUser","fetchUserData","data","uid","error","console","handleSubscription","response","fetch","method","headers","body","JSON","stringify","email","user_id","session","json","ok","window","location","href","url","checkPaymentStatus","log","encodeURIComponent","is_paying","paid","setup","children","fileName","_jsxFileName","lineNumber","columnNumber","changeUserDataState","_c","$RefreshReg$"],"sources":["D:/development/AthertonReact/ReactFiles/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\r\nimport './firebase.js';\r\nimport { RenderDashboard } from './dashboard/dashboard.js';\r\nimport { getUserData } from './database/database.js';\r\nimport { GoogleLoginButton } from './setup/login.js';\r\nimport { SettingsForm } from './setup/settings.js';\r\nimport 'normalize.css';\r\n\r\nconst auth = getAuth();\r\nexport default function App() {\r\n  const [isSignedIn, setSignIn] = useState(false);\r\n  const [user, setUser] = useState(null); \r\n  const [userData, setUserData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Authentication state observer\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, newUser => {\r\n      setSignIn(!!newUser);\r\n      setUser(newUser);\r\n      setLoading(false);\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // Fetch user data when signed in\r\n  useEffect(() => {\r\n    if (isSignedIn) {\r\n      fetchUserData();\r\n    }\r\n  }, [isSignedIn]);\r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      const data = await getUserData(user.uid);\r\n      setUserData(data);\r\n    } catch (error) {\r\n      console.error(\"Failed to get user data:\", error);\r\n    }\r\n  };\r\n\r\n  // Create a checkout session for payment\r\n  const handleSubscription = async () => {\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:4242/create-checkout-session', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email: user.email, user_id: user.uid })\r\n      });\r\n      const session = await response.json();\r\n      if (response.ok) {\r\n        window.location.href = session.url;\r\n      } else {\r\n        console.error('Failed to create checkout session:', session);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating checkout session:', error);\r\n    }\r\n  };\r\n\r\n  // Check user's payment status\r\n  const checkPaymentStatus = async () => {\r\n    if (!user || !user.email) {\r\n      console.log('Email and User ID are required');\r\n      return;\r\n    }\r\n    try {\r\n      const url = `http://localhost:4242/check-payer-by-email?email=${encodeURIComponent(user.email)}&user_id=${user.uid}`;\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      if (response.ok && data.is_paying) {\r\n        console.log('Paid user');\r\n        userData.paid = \"Yes\";\r\n        setUserData({...userData, paid: \"Yes\"});\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch payer status:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSignedIn && userData && userData.setup === \"Yes\" && userData.paid !== \"Yes\") {\r\n      handleSubscription();\r\n    }\r\n  }, [userData]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!isSignedIn) {\r\n    return <GoogleLoginButton />;\r\n  }\r\n\r\n  if (userData && userData.setup === \"No\") {\r\n    return <SettingsForm changeUserDataState={setUserData} userData={userData} handleSubscription={handleSubscription} />;\r\n  }\r\n\r\n  return <RenderDashboard userData={userData} changeUserDataState={setUserData} user={user} />;\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,OAAO,EAAEC,kBAAkB,QAAQ,eAAe;AAC3D,OAAO,eAAe;AACtB,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,iBAAiB,QAAQ,kBAAkB;AACpD,SAASC,YAAY,QAAQ,qBAAqB;AAClD,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,IAAI,GAAGR,OAAO,CAAC,CAAC;AACtB,eAAe,SAASS,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,UAAU,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMoB,WAAW,GAAGlB,kBAAkB,CAACO,IAAI,EAAEY,OAAO,IAAI;MACtDR,SAAS,CAAC,CAAC,CAACQ,OAAO,CAAC;MACpBN,OAAO,CAACM,OAAO,CAAC;MAChBF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;IACF,OAAO,MAAMC,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACApB,SAAS,CAAC,MAAM;IACd,IAAIY,UAAU,EAAE;MACdU,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACV,UAAU,CAAC,CAAC;EAEhB,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMnB,WAAW,CAACU,IAAI,CAACU,GAAG,CAAC;MACxCP,WAAW,CAACM,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;;EAED;EACA,MAAME,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+C,EAAE;QAC5EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,KAAK,EAAErB,IAAI,CAACqB,KAAK;UAAEC,OAAO,EAAEtB,IAAI,CAACU;QAAI,CAAC;MAC/D,CAAC,CAAC;MACF,MAAMa,OAAO,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MACrC,IAAIV,QAAQ,CAACW,EAAE,EAAE;QACfC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGL,OAAO,CAACM,GAAG;MACpC,CAAC,MAAM;QACLjB,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEY,OAAO,CAAC;MAC9D;IACF,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;EACF,CAAC;;EAED;EACA,MAAMmB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI,CAAC9B,IAAI,IAAI,CAACA,IAAI,CAACqB,KAAK,EAAE;MACxBT,OAAO,CAACmB,GAAG,CAAC,gCAAgC,CAAC;MAC7C;IACF;IACA,IAAI;MACF,MAAMF,GAAG,GAAI,oDAAmDG,kBAAkB,CAAChC,IAAI,CAACqB,KAAK,CAAE,YAAWrB,IAAI,CAACU,GAAI,EAAC;MACpH,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACc,GAAG,CAAC;MACjC,MAAMpB,IAAI,GAAG,MAAMK,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClC,IAAIV,QAAQ,CAACW,EAAE,IAAIhB,IAAI,CAACwB,SAAS,EAAE;QACjCrB,OAAO,CAACmB,GAAG,CAAC,WAAW,CAAC;QACxB7B,QAAQ,CAACgC,IAAI,GAAG,KAAK;QACrB/B,WAAW,CAAC;UAAC,GAAGD,QAAQ;UAAEgC,IAAI,EAAE;QAAK,CAAC,CAAC;MACzC;IACF,CAAC,CAAC,OAAOvB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACd,IAAIY,UAAU,IAAII,QAAQ,IAAIA,QAAQ,CAACiC,KAAK,KAAK,KAAK,IAAIjC,QAAQ,CAACgC,IAAI,KAAK,KAAK,EAAE;MACjFrB,kBAAkB,CAAC,CAAC;IACtB;EACF,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;EAEd,IAAIE,OAAO,EAAE;IACX,oBAAOV,OAAA;MAAA0C,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAI,CAAC1C,UAAU,EAAE;IACf,oBAAOJ,OAAA,CAACH,iBAAiB;MAAA8C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC9B;EAEA,IAAItC,QAAQ,IAAIA,QAAQ,CAACiC,KAAK,KAAK,IAAI,EAAE;IACvC,oBAAOzC,OAAA,CAACF,YAAY;MAACiD,mBAAmB,EAAEtC,WAAY;MAACD,QAAQ,EAAEA,QAAS;MAACW,kBAAkB,EAAEA;IAAmB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACvH;EAEA,oBAAO9C,OAAA,CAACL,eAAe;IAACa,QAAQ,EAAEA,QAAS;IAACuC,mBAAmB,EAAEtC,WAAY;IAACH,IAAI,EAAEA;EAAK;IAAAqC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9F;AAAC3C,EAAA,CA1FuBD,GAAG;AAAA8C,EAAA,GAAH9C,GAAG;AAAA,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}