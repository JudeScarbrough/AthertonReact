{"ast":null,"code":"var _jsxFileName = \"D:\\\\development\\\\AthertonReact\\\\ReactFiles\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport './firebase.js';\nimport { RenderDashboard } from './dashboard/dashboard.js';\nimport { getUserData } from './database/database.js';\nimport { GoogleLoginButton } from './setup/login.js';\nimport { SettingsForm } from './setup/settings.js';\nimport 'normalize.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst auth = getAuth();\nexport default function App() {\n  _s();\n  const [isSignedIn, setSignIn] = useState(null);\n  const [user, setUser] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [userDataFetched, setUserDataFetched] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n        if (!isSignedIn) {\n          setSignIn(true);\n        }\n      } else {\n        setSignIn(false);\n      }\n      setLoading(false);\n    });\n    return () => unsubscribe();\n  }, [isSignedIn]);\n  useEffect(() => {\n    if (isSignedIn && !userDataFetched) {\n      fetchUserData();\n    }\n  }, [isSignedIn, userDataFetched]);\n  const fetchUserData = () => {\n    getUserData().then(data => {\n      if (!(JSON.stringify(userData) === JSON.stringify(data))) {\n        setUserData(data);\n      }\n      setUserDataFetched(true);\n    }).catch(error => {\n      console.error(\"Failed to get user data:\", error);\n    });\n  };\n  const handleSubscription = async () => {\n    const response = await fetch('http://127.0.0.1:4242/create-checkout-session', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: user.email,\n        user_id: user.uid\n      })\n    });\n    const session = await response.json();\n    if (response.ok) {\n      window.location.href = session.url;\n    } else {\n      console.error('Failed to create checkout session:', session);\n    }\n  };\n  const checkPayerByEmail = async () => {\n    let email = user.email;\n    let userId = user.uid;\n    if (!email || !userId) {\n      console.log('Email and User ID are required');\n      return;\n    }\n    try {\n      const url = `http://localhost:4242/check-payer-by-email?email=${encodeURIComponent(email)}&user_id=${userId}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      if (response.ok) {\n        if (data.is_paying) {\n          console.log('Paid user');\n        } else {\n          handleSubscription();\n        }\n      } else {\n        console.error(data.error || 'Error occurred while checking payer status');\n      }\n    } catch (error) {\n      console.error('Failed to fetch payer status:', error);\n    }\n  };\n  const handleUserPaymentStatus = async () => {\n    if (!userData) {\n      console.log('User data is not available yet.');\n      return;\n    }\n    const lastCheckedTime = localStorage.getItem('lastPaymentCheckTime');\n    const currentTime = new Date().getTime();\n\n    // Check if it has been less than an hour since the last check\n    if (lastCheckedTime && currentTime - lastCheckedTime < 60000) {\n      console.log('Checked less than an hour ago.');\n      return;\n    }\n\n    // Update the last checked time\n    localStorage.setItem('lastPaymentCheckTime', currentTime);\n    if (userData.paid === \"No\") {\n      await checkPayerByEmail();\n      await fetchUserData(); // Re-fetch user data to check if payment status has changed\n\n      // Make sure userData is updated and still exists\n      if (userData && userData.paid === \"No\") {\n        await handleSubscription();\n      }\n    } else {\n      checkPayerByEmail();\n    }\n  };\n\n  // Ensure that handleUserPaymentStatus is called in a controlled way\n  useEffect(() => {\n    if (isSignedIn && userDataFetched) {\n      handleUserPaymentStatus();\n    }\n  }, [isSignedIn, userDataFetched, userData]); // Depend on userData to react to its updates\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 12\n    }, this);\n  }\n  if (isSignedIn) {\n    if (userData && userData[\"setup\"] === \"No\" && userDataFetched) {\n      return /*#__PURE__*/_jsxDEV(SettingsForm, {\n        changeUserDataState: setUserData,\n        userData: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 14\n      }, this);\n    } else if (userData && userData[\"setup\"] === \"Yes\" && userDataFetched) {\n      return /*#__PURE__*/_jsxDEV(RenderDashboard, {\n        userData: userData,\n        changeUserDataState: setUserData,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 14\n      }, this);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(GoogleLoginButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 12\n    }, this);\n  }\n}\n_s(App, \"eTEFxsiJduNRJZFtrfvZccIOKv0=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","getAuth","onAuthStateChanged","RenderDashboard","getUserData","GoogleLoginButton","SettingsForm","jsxDEV","_jsxDEV","auth","App","_s","isSignedIn","setSignIn","user","setUser","userData","setUserData","userDataFetched","setUserDataFetched","loading","setLoading","unsubscribe","fetchUserData","then","data","JSON","stringify","catch","error","console","handleSubscription","response","fetch","method","headers","body","email","user_id","uid","session","json","ok","window","location","href","url","checkPayerByEmail","userId","log","encodeURIComponent","is_paying","handleUserPaymentStatus","lastCheckedTime","localStorage","getItem","currentTime","Date","getTime","setItem","paid","children","fileName","_jsxFileName","lineNumber","columnNumber","changeUserDataState","_c","$RefreshReg$"],"sources":["D:/development/AthertonReact/ReactFiles/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\r\nimport './firebase.js';\r\nimport { RenderDashboard } from './dashboard/dashboard.js';\r\nimport { getUserData } from './database/database.js';\r\nimport { GoogleLoginButton } from './setup/login.js';\r\nimport { SettingsForm } from './setup/settings.js';\r\nimport 'normalize.css';\r\n\r\nconst auth = getAuth();\r\nexport default function App() {\r\n  const [isSignedIn, setSignIn] = useState(null);\r\n  const [user, setUser] = useState(null); \r\n  const [userData, setUserData] = useState(null);\r\n  const [userDataFetched, setUserDataFetched] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, user => {\r\n      if (user) {\r\n        setUser(user); \r\n        if (!isSignedIn) { \r\n          setSignIn(true);\r\n        }\r\n      } else {\r\n        setSignIn(false);\r\n      }\r\n      setLoading(false); \r\n    });\r\n\r\n    return () => unsubscribe(); \r\n  }, [isSignedIn]);\r\n\r\n  useEffect(() => {\r\n    if (isSignedIn && !userDataFetched) {\r\n      fetchUserData();\r\n    }\r\n  }, [isSignedIn, userDataFetched]);\r\n\r\n  const fetchUserData = () => {\r\n    getUserData().then(data => {\r\n      if (!(JSON.stringify(userData) === JSON.stringify(data))) {\r\n        setUserData(data);\r\n      }\r\n      setUserDataFetched(true);\r\n    }).catch(error => {\r\n      console.error(\"Failed to get user data:\", error);\r\n    });\r\n  };\r\n\r\n\r\n\r\n\r\n    const handleSubscription = async () => {\r\n      const response = await fetch('http://127.0.0.1:4242/create-checkout-session', {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ email: user.email, user_id: user.uid })\r\n      });\r\n      const session = await response.json();\r\n      if (response.ok) {\r\n          window.location.href = session.url;\r\n      } else {\r\n          console.error('Failed to create checkout session:', session);\r\n      }\r\n  };\r\n  \r\n  \r\n  const checkPayerByEmail = async () => {\r\n  \r\n    let email = user.email\r\n    let userId = user.uid\r\n  \r\n    if (!email || !userId) {\r\n      console.log('Email and User ID are required');\r\n      return; \r\n    }\r\n  \r\n    try {\r\n\r\n      const url = `http://localhost:4242/check-payer-by-email?email=${encodeURIComponent(email)}&user_id=${userId}`;\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n  \r\n      \r\n      if (response.ok) {\r\n        if (data.is_paying) {\r\n          console.log('Paid user');\r\n        } else {\r\n          handleSubscription()\r\n        }\r\n      } else {\r\n        console.error(data.error || 'Error occurred while checking payer status');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch payer status:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  \r\n  const handleUserPaymentStatus = async () => {\r\n    if (!userData) {\r\n      console.log('User data is not available yet.');\r\n      return;\r\n    }\r\n  \r\n    const lastCheckedTime = localStorage.getItem('lastPaymentCheckTime');\r\n    const currentTime = new Date().getTime();\r\n  \r\n    // Check if it has been less than an hour since the last check\r\n    if (lastCheckedTime && (currentTime - lastCheckedTime < 60000)) {\r\n      console.log('Checked less than an hour ago.');\r\n      return;\r\n    }\r\n  \r\n    // Update the last checked time\r\n    localStorage.setItem('lastPaymentCheckTime', currentTime);\r\n  \r\n    if (userData.paid === \"No\") {\r\n      await checkPayerByEmail();\r\n      await fetchUserData();  // Re-fetch user data to check if payment status has changed\r\n  \r\n      // Make sure userData is updated and still exists\r\n      if (userData && userData.paid === \"No\") {\r\n        await handleSubscription();\r\n      }\r\n    } else {\r\n      checkPayerByEmail();\r\n    }\r\n  };\r\n  \r\n  // Ensure that handleUserPaymentStatus is called in a controlled way\r\n  useEffect(() => {\r\n    if (isSignedIn && userDataFetched) {\r\n      handleUserPaymentStatus();\r\n    }\r\n  }, [isSignedIn, userDataFetched, userData]); // Depend on userData to react to its updates\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (isSignedIn) {\r\n    if (userData && userData[\"setup\"] === \"No\" && userDataFetched) {\r\n      return <SettingsForm changeUserDataState={setUserData} userData={userData} />;\r\n    } else if (userData && userData[\"setup\"] === \"Yes\" && userDataFetched) {\r\n      return <RenderDashboard userData={userData} changeUserDataState={setUserData} user={user} />;\r\n    }\r\n  } else {\r\n    return <GoogleLoginButton />;\r\n  }\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,OAAO,EAAEC,kBAAkB,QAAQ,eAAe;AAC3D,OAAO,eAAe;AACtB,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,iBAAiB,QAAQ,kBAAkB;AACpD,SAASC,YAAY,QAAQ,qBAAqB;AAClD,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,IAAI,GAAGR,OAAO,CAAC,CAAC;AACtB,eAAe,SAASS,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,UAAU,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACmB,eAAe,EAAEC,kBAAkB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMsB,WAAW,GAAGpB,kBAAkB,CAACO,IAAI,EAAEK,IAAI,IAAI;MACnD,IAAIA,IAAI,EAAE;QACRC,OAAO,CAACD,IAAI,CAAC;QACb,IAAI,CAACF,UAAU,EAAE;UACfC,SAAS,CAAC,IAAI,CAAC;QACjB;MACF,CAAC,MAAM;QACLA,SAAS,CAAC,KAAK,CAAC;MAClB;MACAQ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;IAEF,OAAO,MAAMC,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,CAACV,UAAU,CAAC,CAAC;EAEhBZ,SAAS,CAAC,MAAM;IACd,IAAIY,UAAU,IAAI,CAACM,eAAe,EAAE;MAClCK,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACX,UAAU,EAAEM,eAAe,CAAC,CAAC;EAEjC,MAAMK,aAAa,GAAGA,CAAA,KAAM;IAC1BnB,WAAW,CAAC,CAAC,CAACoB,IAAI,CAACC,IAAI,IAAI;MACzB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,QAAQ,CAAC,KAAKU,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC,CAAC,EAAE;QACxDR,WAAW,CAACQ,IAAI,CAAC;MACnB;MACAN,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,CAAC,CAACS,KAAK,CAACC,KAAK,IAAI;MAChBC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,CAAC;EACJ,CAAC;EAKC,MAAME,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+C,EAAE;MAC1EC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEV,IAAI,CAACC,SAAS,CAAC;QAAEU,KAAK,EAAEvB,IAAI,CAACuB,KAAK;QAAEC,OAAO,EAAExB,IAAI,CAACyB;MAAI,CAAC;IACjE,CAAC,CAAC;IACF,MAAMC,OAAO,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IACrC,IAAIT,QAAQ,CAACU,EAAE,EAAE;MACbC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGL,OAAO,CAACM,GAAG;IACtC,CAAC,MAAM;MACHhB,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEW,OAAO,CAAC;IAChE;EACJ,CAAC;EAGD,MAAMO,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAEpC,IAAIV,KAAK,GAAGvB,IAAI,CAACuB,KAAK;IACtB,IAAIW,MAAM,GAAGlC,IAAI,CAACyB,GAAG;IAErB,IAAI,CAACF,KAAK,IAAI,CAACW,MAAM,EAAE;MACrBlB,OAAO,CAACmB,GAAG,CAAC,gCAAgC,CAAC;MAC7C;IACF;IAEA,IAAI;MAEF,MAAMH,GAAG,GAAI,oDAAmDI,kBAAkB,CAACb,KAAK,CAAE,YAAWW,MAAO,EAAC;MAC7G,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAACa,GAAG,CAAC;MACjC,MAAMrB,IAAI,GAAG,MAAMO,QAAQ,CAACS,IAAI,CAAC,CAAC;MAGlC,IAAIT,QAAQ,CAACU,EAAE,EAAE;QACf,IAAIjB,IAAI,CAAC0B,SAAS,EAAE;UAClBrB,OAAO,CAACmB,GAAG,CAAC,WAAW,CAAC;QAC1B,CAAC,MAAM;UACLlB,kBAAkB,CAAC,CAAC;QACtB;MACF,CAAC,MAAM;QACLD,OAAO,CAACD,KAAK,CAACJ,IAAI,CAACI,KAAK,IAAI,4CAA4C,CAAC;MAC3E;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAID,MAAMuB,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IAC1C,IAAI,CAACpC,QAAQ,EAAE;MACbc,OAAO,CAACmB,GAAG,CAAC,iCAAiC,CAAC;MAC9C;IACF;IAEA,MAAMI,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,sBAAsB,CAAC;IACpE,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;;IAExC;IACA,IAAIL,eAAe,IAAKG,WAAW,GAAGH,eAAe,GAAG,KAAM,EAAE;MAC9DvB,OAAO,CAACmB,GAAG,CAAC,gCAAgC,CAAC;MAC7C;IACF;;IAEA;IACAK,YAAY,CAACK,OAAO,CAAC,sBAAsB,EAAEH,WAAW,CAAC;IAEzD,IAAIxC,QAAQ,CAAC4C,IAAI,KAAK,IAAI,EAAE;MAC1B,MAAMb,iBAAiB,CAAC,CAAC;MACzB,MAAMxB,aAAa,CAAC,CAAC,CAAC,CAAE;;MAExB;MACA,IAAIP,QAAQ,IAAIA,QAAQ,CAAC4C,IAAI,KAAK,IAAI,EAAE;QACtC,MAAM7B,kBAAkB,CAAC,CAAC;MAC5B;IACF,CAAC,MAAM;MACLgB,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC;;EAED;EACA/C,SAAS,CAAC,MAAM;IACd,IAAIY,UAAU,IAAIM,eAAe,EAAE;MACjCkC,uBAAuB,CAAC,CAAC;IAC3B;EACF,CAAC,EAAE,CAACxC,UAAU,EAAEM,eAAe,EAAEF,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAS7C,IAAII,OAAO,EAAE;IACX,oBAAOZ,OAAA;MAAAqD,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAIrD,UAAU,EAAE;IACd,IAAII,QAAQ,IAAIA,QAAQ,CAAC,OAAO,CAAC,KAAK,IAAI,IAAIE,eAAe,EAAE;MAC7D,oBAAOV,OAAA,CAACF,YAAY;QAAC4D,mBAAmB,EAAEjD,WAAY;QAACD,QAAQ,EAAEA;MAAS;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC/E,CAAC,MAAM,IAAIjD,QAAQ,IAAIA,QAAQ,CAAC,OAAO,CAAC,KAAK,KAAK,IAAIE,eAAe,EAAE;MACrE,oBAAOV,OAAA,CAACL,eAAe;QAACa,QAAQ,EAAEA,QAAS;QAACkD,mBAAmB,EAAEjD,WAAY;QAACH,IAAI,EAAEA;MAAK;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC9F;EACF,CAAC,MAAM;IACL,oBAAOzD,OAAA,CAACH,iBAAiB;MAAAyD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC9B;AACF;AAACtD,EAAA,CAvJuBD,GAAG;AAAAyD,EAAA,GAAHzD,GAAG;AAAA,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}