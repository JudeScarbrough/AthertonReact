{"ast":null,"code":"var _jsxFileName = \"/Users/jscarbrough/Desktop/AthertonReact/src/dashboard/subApps/cm/addUser.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport searchIcon from '../../../images/search.png';\nimport React, { useState, useEffect } from 'react';\nimport { setData } from '../../../database/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function AddUser(props) {\n  _s();\n  const [showAddClient, setShowAddClient] = useState(false);\n  var groupNames = props.userData.groupData;\n  var userData = props.userData;\n  const toggleAddClient = () => {\n    setShowAddClient(!showAddClient);\n  };\n  console.log(groupNames);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CMHeader, {\n      toggleAddClient: toggleAddClient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), showAddClient && /*#__PURE__*/_jsxDEV(CMAddClient, {\n      groupNames: groupNames,\n      userData: userData,\n      toggleAddClient: toggleAddClient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true);\n}\n_s(AddUser, \"v+mLOmdh2XfKyVnU7qWSrETqayg=\");\n_c = AddUser;\nfunction CMAddClient({\n  groupNames,\n  userData,\n  toggleAddClient\n}) {\n  _s2();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [showGroupPopup, setShowGroupPopup] = useState(false);\n  const [selectedGroups, setSelectedGroups] = useState([]);\n\n  // Initialize state with current date and time\n  const now = new Date();\n  let initialHour = now.getHours();\n  const initialMinute = now.getMinutes();\n  const initialAmpm = initialHour >= 12 ? 'PM' : 'AM';\n\n  // Convert 24-hour format to 12-hour format\n  initialHour = initialHour % 12 || 12; // the hour '0' should be '12'\n\n  const [date, setDate] = useState({\n    day: now.getDate(),\n    month: now.getMonth() + 1,\n    // JavaScript months are 0-based\n    year: now.getFullYear(),\n    hour: initialHour,\n    minute: initialMinute < 10 ? `0${initialMinute}` : initialMinute,\n    ampm: initialAmpm\n  });\n  const isValidPhoneNumber = phone => /^[0-9]{10}$/.test(phone);\n  const handleGroupChange = groupName => {\n    setSelectedGroups(prevSelectedGroups => {\n      if (prevSelectedGroups.includes(groupName)) {\n        return prevSelectedGroups.filter(group => group !== groupName);\n      } else {\n        return [...prevSelectedGroups, groupName];\n      }\n    });\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setDate(prevDate => ({\n      ...prevDate,\n      [name]: value\n    }));\n  };\n  const validateAndAddClient = () => {\n    if (!firstName || !lastName || !isValidPhoneNumber(phoneNumber)) {\n      alert(\"Please fill all the fields correctly.\");\n      return;\n    }\n    let adjustedHour = date.hour;\n    if (date.ampm === 'PM' && date.hour !== 12) {\n      adjustedHour = parseInt(date.hour) + 12;\n    } else if (date.ampm === 'AM' && date.hour === 12) {\n      adjustedHour = 0;\n    }\n    const appointmentDate = new Date(date.year, date.month - 1, date.day, adjustedHour, date.minute);\n    const unixTimestamp = Math.floor(appointmentDate.getTime() / 1000);\n    const groupIndexes = selectedGroups.map(groupName => groupNames.indexOf(groupName));\n    const newClient = {\n      firstName,\n      lastName,\n      phoneNumber,\n      date: unixTimestamp,\n      groups: groupIndexes,\n      isEditing: false\n    };\n\n    // Assuming userData.clientData exists and is an array\n\n    const updatedClientData = [newClient, ...userData.clientData];\n    userData.clientData = updatedClientData;\n\n    // Call setData with the updated user data\n    setData(userData);\n    toggleAddClient();\n  };\n  const renderGroupPopup = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-popup\",\n    style: {\n      position: 'absolute',\n      zIndex: 10,\n      background: 'white',\n      padding: '20px',\n      border: '1px solid black'\n    },\n    children: [groupNames.map((groupName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: `group-${index}`,\n        name: groupName,\n        value: groupName,\n        checked: selectedGroups.includes(groupName),\n        onChange: () => handleGroupChange(groupName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `group-${index}`,\n        children: groupName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowGroupPopup(false),\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userblock\",\n      id: \"addClientBlock\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"firstName\",\n        placeholder: \"First Name\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"lastName\",\n        placeholder: \"Last Name\",\n        value: lastName,\n        onChange: e => setLastName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"phoneNumber\",\n        placeholder: \"Phone Number\",\n        value: phoneNumber,\n        onChange: e => setPhoneNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"appointment-date-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"appointment-date-label\",\n          children: \"Appointment Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-selectors\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"day\",\n            value: date.day,\n            onChange: handleChange,\n            children: [...Array(31).keys()].map(day => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: day + 1,\n              children: day + 1\n            }, day, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-separator\",\n            children: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"month\",\n            value: date.month,\n            onChange: handleChange,\n            children: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'].map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: index + 1,\n              children: month\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-separator\",\n            children: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"year\",\n            type: \"text\",\n            className: \"yearSelector\",\n            placeholder: \"Year\",\n            value: date.year,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-selectors\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"hour\",\n            value: date.hour,\n            onChange: handleChange,\n            children: [...Array(12).keys()].map(hour => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: hour + 1,\n              children: hour + 1\n            }, hour + 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-separator\",\n            children: \":\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"minute\",\n            value: date.minute,\n            onChange: handleChange,\n            children: [...Array(60).keys()].map(minute => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: minute < 10 ? `0${minute}` : minute,\n              children: minute < 10 ? `0${minute}` : minute\n            }, minute, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"ampm\",\n            value: date.ampm,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"AM\",\n              children: \"AM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"PM\",\n              children: \"PM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"groupcontainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addgroup\",\n          onClick: () => setShowGroupPopup(true),\n          children: \"Add Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), selectedGroups.map((groupName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"groupblock\",\n          children: groupName\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"addClient\",\n        onClick: validateAndAddClient,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), showGroupPopup && renderGroupPopup(), showGroupPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dim-background\",\n      onClick: () => setShowGroupPopup(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true);\n}\n_s2(CMAddClient, \"NVDfAuAa3GOuPPmE0dkHovTrPKU=\");\n_c2 = CMAddClient;\nfunction CMHeader(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cm-top-headers\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"cm-toggle-add-client\",\n        onClick: props.toggleAddClient,\n        children: \"Add Client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"cm-search\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"cm-search-icon\",\n          src: searchIcon,\n          alt: \"Search Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c3 = CMHeader;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AddUser\");\n$RefreshReg$(_c2, \"CMAddClient\");\n$RefreshReg$(_c3, \"CMHeader\");","map":{"version":3,"names":["searchIcon","React","useState","useEffect","setData","jsxDEV","_jsxDEV","Fragment","_Fragment","AddUser","props","_s","showAddClient","setShowAddClient","groupNames","userData","groupData","toggleAddClient","console","log","children","CMHeader","fileName","_jsxFileName","lineNumber","columnNumber","CMAddClient","_c","_s2","firstName","setFirstName","lastName","setLastName","phoneNumber","setPhoneNumber","showGroupPopup","setShowGroupPopup","selectedGroups","setSelectedGroups","now","Date","initialHour","getHours","initialMinute","getMinutes","initialAmpm","date","setDate","day","getDate","month","getMonth","year","getFullYear","hour","minute","ampm","isValidPhoneNumber","phone","test","handleGroupChange","groupName","prevSelectedGroups","includes","filter","group","handleChange","e","name","value","target","prevDate","validateAndAddClient","alert","adjustedHour","parseInt","appointmentDate","unixTimestamp","Math","floor","getTime","groupIndexes","map","indexOf","newClient","groups","isEditing","updatedClientData","clientData","renderGroupPopup","className","style","position","zIndex","background","padding","border","index","type","id","checked","onChange","htmlFor","onClick","placeholder","Array","keys","_c2","src","alt","_c3","$RefreshReg$"],"sources":["/Users/jscarbrough/Desktop/AthertonReact/src/dashboard/subApps/cm/addUser.js"],"sourcesContent":["import searchIcon from '../../../images/search.png'\nimport React, { useState, useEffect } from 'react';\nimport { setData } from '../../../database/database';\n\nexport function AddUser(props) {\n    const [showAddClient, setShowAddClient] = useState(false);\n\n \n\n    var groupNames = props.userData.groupData\n    var userData = props.userData\n\n    const toggleAddClient = () => {\n        setShowAddClient(!showAddClient);\n    };\n    console.log(groupNames)\n    return (\n        <>\n            <CMHeader toggleAddClient={toggleAddClient} />\n            {showAddClient && <CMAddClient groupNames={groupNames} userData={userData} toggleAddClient={toggleAddClient}/>}\n        </>\n    );\n}\n\n\n\n\n\n\n\n\nfunction CMAddClient({ groupNames, userData, toggleAddClient }) {\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [showGroupPopup, setShowGroupPopup] = useState(false);\n    const [selectedGroups, setSelectedGroups] = useState([]);\n\n    // Initialize state with current date and time\n    const now = new Date();\n    let initialHour = now.getHours();\n    const initialMinute = now.getMinutes();\n    const initialAmpm = initialHour >= 12 ? 'PM' : 'AM';\n\n    // Convert 24-hour format to 12-hour format\n    initialHour = initialHour % 12 || 12; // the hour '0' should be '12'\n\n    const [date, setDate] = useState({\n        day: now.getDate(),\n        month: now.getMonth() + 1, // JavaScript months are 0-based\n        year: now.getFullYear(),\n        hour: initialHour,\n        minute: initialMinute < 10 ? `0${initialMinute}` : initialMinute,\n        ampm: initialAmpm,\n    });\n\n    const isValidPhoneNumber = (phone) => /^[0-9]{10}$/.test(phone);\n\n    const handleGroupChange = (groupName) => {\n        setSelectedGroups(prevSelectedGroups => {\n            if (prevSelectedGroups.includes(groupName)) {\n                return prevSelectedGroups.filter(group => group !== groupName);\n            } else {\n                return [...prevSelectedGroups, groupName];\n            }\n        });\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setDate(prevDate => ({ ...prevDate, [name]: value }));\n    };\n\n    const validateAndAddClient = () => {\n        if (!firstName || !lastName || !isValidPhoneNumber(phoneNumber)) {\n            alert(\"Please fill all the fields correctly.\");\n            return;\n        }\n    \n        let adjustedHour = date.hour;\n        if (date.ampm === 'PM' && date.hour !== 12) {\n            adjustedHour = parseInt(date.hour) + 12;\n        } else if (date.ampm === 'AM' && date.hour === 12) {\n            adjustedHour = 0;\n        }\n\n        const appointmentDate = new Date(date.year, date.month - 1, date.day, adjustedHour, date.minute);\n        const unixTimestamp = Math.floor(appointmentDate.getTime() / 1000);\n    \n        const groupIndexes = selectedGroups.map(groupName => groupNames.indexOf(groupName));\n    \n        const newClient = {\n            firstName,\n            lastName,\n            phoneNumber,\n            date: unixTimestamp,\n            groups: groupIndexes,\n            isEditing: false,\n        };\n    \n        // Assuming userData.clientData exists and is an array\n        \n        const updatedClientData = [newClient, ...userData.clientData];\n        userData.clientData = updatedClientData\n    \n        // Call setData with the updated user data\n        setData(userData);\n    \n        \n        toggleAddClient()\n    };\n    \n    \n\n    const renderGroupPopup = () => (\n        <div className=\"group-popup\" style={{ position: 'absolute', zIndex: 10, background: 'white', padding: '20px', border: '1px solid black' }}>\n            {groupNames.map((groupName, index) => (\n                <div key={index}>\n                    <input\n                        type=\"checkbox\"\n                        id={`group-${index}`}\n                        name={groupName}\n                        value={groupName}\n                        checked={selectedGroups.includes(groupName)}\n                        onChange={() => handleGroupChange(groupName)}\n                    />\n                    <label htmlFor={`group-${index}`}>{groupName}</label>\n                </div>\n            ))}\n            <button onClick={() => setShowGroupPopup(false)}>Done</button>\n        </div>\n    );\n\n    return (\n        <>\n            <div className=\"userblock\" id=\"addClientBlock\">\n                <input type=\"text\" className=\"firstName\" placeholder=\"First Name\" value={firstName} onChange={(e) => setFirstName(e.target.value)} />\n                <input type=\"text\" className=\"lastName\" placeholder=\"Last Name\" value={lastName} onChange={(e) => setLastName(e.target.value)} />\n                <input type=\"text\" className=\"phoneNumber\" placeholder=\"Phone Number\" value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)} />\n\n                <div className=\"appointment-date-container\">\n                    <div className=\"appointment-date-label\">Appointment Date</div>\n                    <div className=\"date-selectors\">\n                        <select name=\"day\" value={date.day} onChange={handleChange}>\n                            {[...Array(31).keys()].map(day => (\n                                <option key={day} value={day + 1}>{day + 1}</option>\n                            ))}\n                        </select>\n                        <div className=\"date-separator\">/</div>\n                        <select name=\"month\" value={date.month} onChange={handleChange}>\n                            {['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'].map((month, index) => (\n                                <option key={index} value={index + 1}>{month}</option>\n                            ))}\n                        </select>\n                        <div className=\"date-separator\">/</div>\n                        <input name=\"year\" type=\"text\" className=\"yearSelector\" placeholder=\"Year\" value={date.year} onChange={handleChange} />\n                    </div>\n                    <div className=\"time-selectors\">\n                        <select name=\"hour\" value={date.hour} onChange={handleChange}>\n                            {[...Array(12).keys()].map(hour => (\n                                <option key={hour + 1} value={hour + 1}>{hour + 1}</option>\n                            ))}\n                        </select>\n                        <div className=\"time-separator\">:</div>\n                        <select name=\"minute\" value={date.minute} onChange={handleChange}>\n                            {[...Array(60).keys()].map(minute => (\n                                <option key={minute} value={minute < 10 ? `0${minute}` : minute}>\n                                    {minute < 10 ? `0${minute}` : minute}\n                                </option>\n                            ))}\n                        </select>\n                        <select name=\"ampm\" value={date.ampm} onChange={handleChange}>\n                            <option value=\"AM\">AM</option>\n                            <option value=\"PM\">PM</option>\n                        </select>\n                    </div>\n                </div>\n\n                <div className=\"groupcontainer\">\n                    <div className=\"addgroup\" onClick={() => setShowGroupPopup(true)}>Add Group</div>\n                    {selectedGroups.map((groupName, index) => (\n                        <div key={index} className=\"groupblock\">{groupName}</div>\n                    ))}\n                </div>\n\n                <button className=\"addClient\" onClick={validateAndAddClient}>Add</button>\n            </div>\n\n            {showGroupPopup && renderGroupPopup()}\n            {showGroupPopup && <div className=\"dim-background\" onClick={() => setShowGroupPopup(false)}></div>}\n        </>\n    );\n}\n\n\n\n\n\n\n\n\n\n\n\nfunction CMHeader(props) {\n\n    return (\n        <>\n            <div className=\"cm-top-headers\">\n                <div id=\"cm-toggle-add-client\" onClick={props.toggleAddClient}>Add Client</div>\n                <div id=\"cm-search\">\n                    <h1>Search</h1>\n                    <img id='cm-search-icon' src={searchIcon} alt=\"Search Icon\" />\n                </div>\n            </div>\n        </>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}