{"ast":null,"code":"var _jsxFileName = \"/Users/jscarbrough/Desktop/AthertonReact/src/dashboard/subApps/cm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"../../cssFiles/cm.css\";\nimport { setData } from '../../database/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ClientManager(props) {\n  _s();\n  const initialClientData = JSON.parse(props.userData[\"clientData\"]);\n  const [clientData, setClientData] = useState(initialClientData);\n  const handleEdit = index => {\n    const newClientData = clientData.map((client, idx) => {\n      if (idx === index) {\n        return {\n          ...client,\n          isEditing: !client.isEditing\n        };\n      }\n      return client;\n    });\n    setClientData(newClientData);\n  };\n  const handleChange = (event, index, field) => {\n    const newClientData = [...clientData];\n    newClientData[index][field] = event.target.value;\n    setClientData(newClientData);\n  };\n  const handleConfirm = index => {\n    handleEdit(index); // Toggle off edit mode\n    // Here, implement your logic to update the userData with the new clientData\n    const updatedUserData = {\n      ...props.userData,\n      clientData: JSON.stringify(clientData)\n    };\n    setData(updatedUserData); // Assuming setData takes the whole userData object\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: clientData.map((client, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userblock\",\n      children: [client.isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"firstName\",\n          value: client.firstName,\n          onChange: e => handleChange(e, index, 'firstName')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"lastName\",\n          value: client.lastName,\n          onChange: e => handleChange(e, index, 'lastName')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"phoneNumber\",\n          value: client.phoneNumber,\n          onChange: e => handleChange(e, index, 'phoneNumber')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"date\",\n          value: client.date,\n          onChange: e => handleChange(e, index, 'date')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"firstName\",\n          children: client.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"lastName\",\n          children: client.lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"phoneNumber\",\n          children: client.phoneNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"date\",\n          children: client.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"groupcontainer\",\n        children: [client.groups.map((group, groupIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bundleclose\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"groupblock\",\n            children: group\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-times close-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, groupIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addgroup\",\n          children: \"Add Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editstack\",\n        children: [client.isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"confirm\",\n          onClick: () => handleConfirm(index),\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit\",\n          onClick: () => handleEdit(index),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(ClientManager, \"uaq5GA0HNuey0wnMVekNB/CSmok=\");\n_c = ClientManager;\nvar _c;\n$RefreshReg$(_c, \"ClientManager\");","map":{"version":3,"names":["React","useState","setData","jsxDEV","_jsxDEV","Fragment","_Fragment","ClientManager","props","_s","initialClientData","JSON","parse","userData","clientData","setClientData","handleEdit","index","newClientData","map","client","idx","isEditing","handleChange","event","field","target","value","handleConfirm","updatedUserData","stringify","children","className","firstName","onChange","e","fileName","_jsxFileName","lineNumber","columnNumber","lastName","phoneNumber","date","groups","group","groupIndex","onClick","_c","$RefreshReg$"],"sources":["/Users/jscarbrough/Desktop/AthertonReact/src/dashboard/subApps/cm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport \"../../cssFiles/cm.css\";\nimport { setData } from '../../database/database';\n\nexport function ClientManager(props) {\n  const initialClientData = JSON.parse(props.userData[\"clientData\"]);\n  const [clientData, setClientData] = useState(initialClientData);\n\n  const handleEdit = (index) => {\n    const newClientData = clientData.map((client, idx) => {\n      if (idx === index) {\n        return { ...client, isEditing: !client.isEditing };\n      }\n      return client;\n    });\n    setClientData(newClientData);\n  };\n\n  const handleChange = (event, index, field) => {\n    const newClientData = [...clientData];\n    newClientData[index][field] = event.target.value;\n    setClientData(newClientData);\n  };\n\n  const handleConfirm = (index) => {\n    handleEdit(index); // Toggle off edit mode\n    // Here, implement your logic to update the userData with the new clientData\n    const updatedUserData = { ...props.userData, clientData: JSON.stringify(clientData) };\n    setData(updatedUserData); // Assuming setData takes the whole userData object\n  };\n\n  return (\n    <div>\n      {clientData.map((client, index) => (\n        <div key={index} className=\"userblock\">\n          {client.isEditing ? (\n            <>\n              <input className=\"firstName\" value={client.firstName} onChange={(e) => handleChange(e, index, 'firstName')} />\n              <input className=\"lastName\" value={client.lastName} onChange={(e) => handleChange(e, index, 'lastName')} />\n              <input className=\"phoneNumber\" value={client.phoneNumber} onChange={(e) => handleChange(e, index, 'phoneNumber')} />\n              <input className=\"date\" value={client.date} onChange={(e) => handleChange(e, index, 'date')} />\n            </>\n          ) : (\n            <>\n              <h3 className=\"firstName\">{client.firstName}</h3>\n              <h3 className=\"lastName\">{client.lastName}</h3>\n              <h3 className=\"phoneNumber\">{client.phoneNumber}</h3>\n              <h3 className=\"date\">{client.date}</h3>\n            </>\n          )}\n          <div className=\"groupcontainer\">\n            {/* Group editing not handled in this snippet, add similar logic if needed */}\n            {client.groups.map((group, groupIndex) => (\n              <div key={groupIndex} className=\"bundleclose\">\n                <div className=\"groupblock\">{group}</div>\n                <i className=\"fas fa-times close-icon\"></i>\n              </div>\n            ))}\n            <div className=\"addgroup\">Add Group</div>\n          </div>\n          <div className=\"editstack\">\n            {client.isEditing ? (\n              <button className=\"confirm\" onClick={() => handleConfirm(index)}>Confirm</button>\n            ) : (\n              <button className=\"edit\" onClick={() => handleEdit(index)}>Edit</button>\n            )}\n            <button className=\"delete\">Delete</button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}